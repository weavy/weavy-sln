<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Weavy.Web</name>
    </assembly>
    <members>
        <member name="T:Weavy.Web.Api.Attributes.HandleExceptionAttribute">
            <summary>
            Logs unhandled exceptions and creates an error respnse.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Attributes.HandleExceptionAttribute.OnException(System.Web.Http.Filters.HttpActionExecutedContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Weavy.Web.Api.Attributes.EnforceSslAttribute">
            <summary>
            Enforces SSL for web api controllers.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Attributes.EnforceSslAttribute.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Runs when a process requests authorization (Web Api Flow).
            </summary>
            <param name="actionContext">The action context, which encapsulates information for using System.Web.Http.Filters.AuthorizationFilterAttribute.</param>
        </member>
        <member name="T:Weavy.Web.Api.Attributes.HandleValidationAttribute">
            <summary>
            Creates an error response for validation errors.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Attributes.HandleValidationAttribute.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Weavy.Web.Api.Attributes.AllowInsecureAttribute">
            <summary>
            Api controllers and methods with this attribute can be served without SSL enabled.
            </summary>
        </member>
        <member name="T:Weavy.Web.Api.Binders.IdentifierBinder">
            <summary>
            Binds entity identifiers to its actual IEntity representation (e.g. m3, c253, p42) 
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Binders.IdentifierBinder.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Binders.IdentifierBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            Binds the actual type and sets value.
            </summary>
            <param name="actionContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Binders.ContentBinder">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Binders.ContentBinder.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Binders.ContentBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            Binds the actual type and sets value from body.
            </summary>
            <param name="actionContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Binders.DeltaModelBinder">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Binders.DeltaModelBinder.#ctor(System.Type)">
            <summary>
            Constructor that takes the generic type.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Weavy.Web.Api.Binders.DeltaModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            Binds the actual type and sets value from body.
            </summary>
            <param name="actionContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Binders.ContentQueryBinder">
            <summary>
            Binds the model to a <see cref="T:Weavy.Core.Models.ContentQuery"/> object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Binders.ContentQueryBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            Web Api binding
            </summary>
            <param name="actionContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Binders.ContentQueryBinder.BindModel(Weavy.Core.Models.Query,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Return a <see cref="T:Weavy.Core.Models.ContentQuery"/> object by parsing the query string.
            </summary>
            <param name="query"></param>
            <param name="qs"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Binders.DeltaModelBinderProvider">
            <summary>
            Selects the correct binder for the Delta&lt;T&gt;
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Binders.DeltaModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
            <param name="modelType"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Binders.IntsBinder">
            <summary>
            Binds the model to an array of integers.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Binders.IntsBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            
            </summary>
            <param name="actionContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Binders.NotificationQueryBinder">
            <summary>
            Binds the model to a <see cref="T:Weavy.Core.Models.NotificationQuery"/> object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Binders.NotificationQueryBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            Web Api binding
            </summary>
            <param name="actionContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Binders.NotificationQueryBinder.BindModel(Weavy.Core.Models.Query,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Return a <see cref="T:Weavy.Core.Models.NotificationQuery"/> object by parsing the query string.
            </summary>
            <param name="query"></param>
            <param name="qs"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Binders.NotificationQueryBinder.BindEventTypes(System.String[])">
            <summary>
            Binds log entry types from qs.
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Binders.QueryBinder">
            <summary>
            Binds the model to a Query object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Binders.QueryBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            Web Api binding
            </summary>
            <param name="actionContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Binders.QueryBinder.BindModel(Weavy.Core.Models.QueryOptions,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Return a <see cref="T:Weavy.Core.Models.Query"/> object by parsing the query string.
            </summary>
            <param name="opts"></param>
            <param name="qs"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Binders.QueryBinder.BindEntityTypes(Weavy.Core.Models.Query,System.String[])">
            <summary>
            
            </summary>
            <param name="query"></param>
            <param name="types"></param>
        </member>
        <member name="M:Weavy.Web.Api.Binders.QueryBinder.BindDateRange(Weavy.Core.Models.Query,System.String)">
            <summary>
            
            </summary>
            <param name="query"></param>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Binders.QueryOptionsBinder">
            <summary>
            Binds the model to a QueryOptions object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Binders.QueryOptionsBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            Web Api binding
            </summary>
            <param name="actionContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Binders.QueryOptionsBinder.BindModel(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Return QueryOptions by parsing the query string.
            </summary>
            <param name="qs"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Binders.RoleQueryBinder">
            <summary>
            Binds the model to a <see cref="T:Weavy.Core.Models.RoleQuery"/> object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Binders.RoleQueryBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            Web Api binding
            </summary>
            <param name="actionContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Binders.RoleQueryBinder.BindModel(Weavy.Core.Models.Query,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Return a <see cref="T:Weavy.Core.Models.RoleQuery"/> object by parsing the query string.
            </summary>
            <param name="query"></param>
            <param name="qs"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Binders.AppQueryBinder">
            <summary>
            Binds the model to a <see cref="T:Weavy.Core.Models.AppQuery"/> object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Binders.AppQueryBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            Web Api binding
            </summary>
            <param name="actionContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Binders.AppQueryBinder.BindModel(Weavy.Core.Models.Query,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Return a <see cref="T:Weavy.Core.Models.AppQuery"/> object by parsing the query string.
            </summary>
            <param name="query"></param>
            <param name="qs"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Binders.AppQueryBinder.BindListOfGuids(System.String[])">
            <summary>
            Binds to list of guid.
            </summary>
            <param name="guids"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Binders.SpaceQueryBinder">
            <summary>
            Binds the model to a <see cref="T:Weavy.Core.Models.SpaceQuery"/> object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Binders.SpaceQueryBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            Web Api binding
            </summary>
            <param name="actionContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Binders.SpaceQueryBinder.BindModel(Weavy.Core.Models.Query,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Return a <see cref="T:Weavy.Core.Models.SpaceQuery"/> object by parsing the query string.
            </summary>
            <param name="query"></param>
            <param name="qs"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Binders.UserQueryBinder">
            <summary>
            Binds the model to a <see cref="T:Weavy.Core.Models.UserQuery"/> object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Binders.UserQueryBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
            <summary>
            Web Api binding
            </summary>
            <param name="actionContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Binders.UserQueryBinder.BindModel(Weavy.Core.Models.Query,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Return a <see cref="T:Weavy.Core.Models.UserQuery"/> object by parsing the query string.
            </summary>
            <param name="query"></param>
            <param name="qs"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Controllers._MeetingsController">
            <summary>
            
            </summary>
            <remarks>Don't generate documentation for this controller.</remarks>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MeetingsController.ZoomEvent(Weavy.Web.Models.ZoomEvent)">
            <summary>
            Incoming Zoom webhook
            </summary>
            <param name="zoomEvent"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MeetingsController.UpdateEntity(Weavy.Core.Models.IEntity)">
            <summary>
            
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MeetingsController.SignOut(Weavy.Web.Models.MeetingProviderSignOutModel)">
            <summary>
            Clear zoom token data
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Controllers._ClientController">
            <summary>
            Api endpoints used by client sdk.
            </summary>
            <remarks>Don't generate documentation for this controller.</remarks>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ClientController.InitClient(Weavy.Web.Models.ClientOptions)">
            <summary>
            Called to initialize the Weavy client.
            </summary>
            <param name="options">Input options set by client.</param>        
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ClientController.InitSpace(Weavy.Web.Models.SpaceOptions)">
            <summary>
            Called to initialize a space.
            </summary>
            <param name="options">Input options set by client.</param>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ClientController.InitApp(Weavy.Web.Models.AppOptions)">
            <summary>
            Called to initialize an app.
            </summary>
            <param name="options">Input options set by client.</param>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ClientController.ConfigureClient(Weavy.Web.Models.ClientOptions,Weavy.Core.Models.User)">
            <summary>
            Called by client to configure a Weavy instance.
            </summary>
            <param name="options">Input options set by client.</param>
            <param name="user">The user making the request.</param>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ClientController.ConfigureSpace(Weavy.Web.Models.SpaceOptions,Weavy.Core.Models.User)">
            <summary>
            Configure and return space.
            </summary>
            <param name="options"></param>
            <param name="user">The user making the request.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ClientController.ConfigureApp(Weavy.Web.Models.AppOptions,Weavy.Core.Models.User)">
            <summary>
            Configure and return app.
            </summary>
            <param name="options"></param>
            <param name="user">The user making the request.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ClientController.ConfigureTheme(System.Object)">
            <summary>
            Configure the Theme plugin.
            </summary>
            <param name="options">Options for the Theme plugin</param>
            <returns>The configured plugin data</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ClientController.SignIn">
            <summary>
            Called from client to get auth cookie. The request should pass a valid JWT in the Authorization header using the Bearer authentication scheme.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ClientController.SignOut">
            <summary>
            Sign out, i.e. clear auth cookie.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ClientController.GetUser(Weavy.Web.Api.Controllers.JwtModel)">
            <summary>
            Get the current user. Used to check authentication status etc. If the cookie user is not the same as the the user specified in the token a 409 conflict will be returned.
            </summary>
            <returns>Returns a <see cref="T:Weavy.Core.Models.User"/> object.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ClientController.Click(System.String,System.Boolean)">
            <summary>
            Called when a link is clicked and returns data about the target entity. 
            </summary>
            <param name="url">The url that was clicked.</param>
            <param name="embedded"></param>
            <returns>Returns info about the entity.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ClientController.SetTheme(System.String)">
            <summary>
            Saves the name of the new theme in a cookie and triggers realtime message about theme name changing.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ClientController.ClearTheme">
            <summary>
            Clear the theme cookie and triggers realtime message about theme name changing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ClientController.GetTheme">
            <summary>
            Gets the current theme (from cookie).
            </summary>
            <returns>The name of the current theme or null</returns>
        </member>
        <member name="T:Weavy.Web.Api.Controllers.JwtModel">
            <summary>
            Class for recieving the jwt token.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Controllers.JwtModel.Jwt">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Api.Controllers._AppsController">
            <summary>
            The Apps API has methods for managing Apps. 
            </summary>
            <remarks>Don't generate documentation for this controller.</remarks>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._AppsController.Follow(System.Int32)">
            <summary>
            Follow a content item.
            </summary>
            <param name="id">The item id.</param>
            <returns>The followed item.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._AppsController.Unfollow(System.Int32)">
            <summary>
            Unfollow a content item.
            </summary>
            <param name="id">The item id.</param>
            <returns>The unfollowed item.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._AppsController.Star(System.Int32)">
            <summary>
            Star an item.
            </summary>
            <param name="id">The item id.</param>
            <returns>The starred item.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._AppsController.Unstar(System.Int32)">
            <summary>
            Unstar an item.
            </summary>
            <param name="id">The item id.</param>
            <returns>The unstarred item.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._AppsController.Trash(System.Int32)">
            <summary>
            Trashes the <see cref="T:Weavy.Core.Models.App"/> with the specified id.
            </summary>
            <param name="id">Id of the app to trash.</param>
            <returns>Returns the trashed app.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._AppsController.Restore(System.Int32)">
            <summary>
            Restores the <see cref="T:Weavy.Core.Models.App"/> with the specified id.
            </summary>
            <param name="id">Id of the app to restore.</param>
            <returns>Returns the restored app.</returns>
        </member>
        <member name="T:Weavy.Web.Api.Controllers._AttachmentsController">
            <summary>
            The Attachments API has methods for managing attachments. 
            </summary>
            <remarks>Don't generate documentation for this controller.</remarks>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._AttachmentsController.Get(System.Int32)">
            <summary>
            Get the <see cref="T:Weavy.Core.Models.Attachment"/> with the specified id.
            </summary>
            <param name="id">Id of the <see cref="T:Weavy.Core.Models.Attachment"/> to get.</param>
            <returns>Returns an <see cref="T:Weavy.Core.Models.Attachment"/>.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._AttachmentsController.Trash(System.Int32)">
            <summary>
            Trashes the <see cref="T:Weavy.Core.Models.Attachment"/> with the specified id.
            </summary>
            <param name="id">Id of the <see cref="T:Weavy.Core.Models.Attachment"/> to trash.</param>
            <returns>Returns the trashed <see cref="T:Weavy.Core.Models.Attachment"/>.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._AttachmentsController.Restore(System.Int32)">
            <summary>
            Restores the <see cref="T:Weavy.Core.Models.Attachment"/> with the specified id.
            </summary>
            <param name="id">Id of the <see cref="T:Weavy.Core.Models.Attachment"/> to restore.</param>
            <returns>Returns the restored <see cref="T:Weavy.Core.Models.Attachment"/>.</returns>
        </member>
        <member name="T:Weavy.Web.Api.Controllers._BlobsController">
            <summary>
            Controller for uploading and serving files. 
            </summary>
            <remarks>Don't generate documentation for this controller. Insecure requests are permitted.</remarks>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._BlobsController.AppIcon(System.Nullable{System.Int32})">
            <summary>
            Writes the app icon for mobile devices etc to the output.
            </summary>
            <param name="size">Size in pixels (optional).</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._BlobsController.Avatar(System.String,System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
            Writes the specified avatar to the output.
            </summary>
            <param name="type">Entity type.</param>
            <param name="id">Entity id.</param>
            <param name="size">Size in pixels (optional).</param>
            <param name="ext">File extension of desired output format.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._BlobsController.Favicon">
            <summary>
            Writes favicon.ico to the output.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._BlobsController.Favicon(System.Nullable{System.Int32},System.String)">
            <summary>
            Writes the favicon to the output.
            </summary>
            <param name="size">Size in pixels (optional).</param>
            <param name="ext">File extension of desired output format.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._BlobsController.Attachment(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Writes the specified attachment to the output.
            Depending on the input parameters this action can return the original file, a preview or a thumbnail image.
            </summary>
            <param name="id">Id of attachment to return.</param>
            <param name="name">Filename.</param>
            <param name="width">Width in pixels (for thumbnail).</param>
            <param name="height">Height in pixels (for thumbnail).</param>
            <param name="options">Additional resize options (for thumbnail).</param>
            <param name="ext">File extension of desired output format.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._BlobsController.Blob(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Writes the specified blob to the output.
            Depending on the input parameters this action can return the original file, a preview or a thumbnail image.
            </summary>
            <param name="id">Id of blob to return.</param>
            <param name="width">Width in pixels (for thumbnail).</param>
            <param name="height">Height in pixels (for thumbnail).</param>
            <param name="options">Additional resize options (for thumbnail).</param>
            <param name="ext">File extension of desired output format.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._BlobsController.Content(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Writes a thumbnail image for the specified content item to the output.
            </summary>
            <param name="id">Id of <see cref="T:Weavy.Core.Models.Content"/> item for which to return thumbnail image.</param>
            <param name="width">Width in pixels.</param>
            <param name="height">Height in pixels.</param>
            <param name="options">Additional resize options.</param>
            <param name="ext">File extension of desired output format.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._BlobsController.Embed(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Writes the specified embed image to the output.
            </summary>
            <param name="id">Id of <see cref="T:Weavy.Core.Models.Embed"/> for which to image.</param>
            <param name="width">Width in pixels.</param>
            <param name="height">Height in pixels.</param>
            <param name="options">Additional resize options.</param>
            <param name="ext">File extension of desired output format.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._BlobsController.File(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Writes the specified <see cref="T:Weavy.Core.Models.File"/> to the output.
            Depending on the input parameters this action can return the original file, a preview or a thumbnail image.
            </summary>
            <param name="id">Id of the file to return.</param>
            <param name="width">Width in pixels (for thumbnail).</param>
            <param name="height">Height in pixels (for thumbnail).</param>
            <param name="options">Additional resize options (for thumbnail).</param>
            <param name="ext">File extension of desired output format.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._BlobsController.Get(System.Int32)">
            <summary>
            Get metadata for the specified blob.
            </summary>
            <param name="id">Id of the blob.</param>
            <returns>Returns a blob.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._BlobsController.Insert(System.Collections.Generic.IEnumerable{Weavy.Core.Models.ExternalBlob})">
            <summary>
            Insert external blob(s).
            </summary>
            <param name="external">The blobs to insert.</param>
            <returns>The inserted blob(s).</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._BlobsController.Upload">
            <summary>
            Uploads new blob(s). We use multipart/form-data for the request format.
            After upload the blobs can be used for setting avatars or as references when creating attachments and/or files. 
            </summary>
            <returns>The uploaded blobs(s).</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._BlobsController.Version(System.Int32,System.Int64,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Writes the content data of the specified file version to the output.
            Depending on the input parameters this action can return the original file, a preview or a thumbnail image.
            </summary>
            <param name="id">Id of the file to return.</param>
            <param name="timestamp">Timestamp of version to return.</param>
            <param name="width">Width in pixels (for thumbnail).</param>
            <param name="height">Height in pixels (for thumbnail).</param>
            <param name="options">Additional resize options (for thumbnail).</param>
            <param name="ext">File extension of desired output format.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._BlobsController.ExternalLinkContent(System.Guid,System.String,System.String)">
            <summary>
            Writes the content of an externally shared file to the output.
            </summary>
            <param name="id">Id of external link.</param>
            <param name="name">Filename without extension.</param>
            <param name="ext">Extension of desired output format.</param>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._BlobsController.UseOriginalDimensions(System.String)">
            <summary>
            Helper method for checking if we should return a thumbnail image with original dimensions or if we should return a resized version.
            This is needed when the content/file that we want to return a thumbnail for has a name that ends with valid resize options, e.g. document-169.docx.
            </summary>
            <param name="placeholder">Placeholder url to thumbnail image</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._BlobsController.GetDownloadName(System.String,System.String)">
            <summary>
            Helper method for getting filename to use in the "Content-Disposition: attachment;filename=..." header.
            </summary>
            <param name="name">Original filename</param>
            <param name="ext">Requested file extension.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Controllers._CommentsController">
            <summary>
            Comments are made by users on different objects such as posts or items. Comments are very similar to posts and messages, they can have attachments, be liked etc.
            </summary>
            <remarks>Don't generate documentation for this controller.</remarks>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._CommentsController.GetContentComments(System.Int32)">
            <summary>
            Retrieves the comments for a <see cref="T:Weavy.Core.Models.Content"/> item.
            </summary>
            <param name="id">The item id.</param>
            <returns>Returns a list of comments.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._CommentsController.GetPostComments(System.Int32)">
            <summary>
            Retrieves the comments for a <see cref="T:Weavy.Core.Models.Post"/>.
            </summary>
            <param name="id">The post id.</param>
            <returns>Returns a list of comments.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._CommentsController.Get(System.Int32)">
            <summary>
            Get the <see cref="T:Weavy.Core.Models.Comment"/> with the specified id.
            </summary>
            <param name="id">The comment id.</param>
            <returns>Returns a comment.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._CommentsController.Like(System.Int32)">
            <summary>
            Mark a <see cref="T:Weavy.Core.Models.Comment"/> as liked by the current user.
            </summary>
            <param name="id">The comment id.</param>
            <returns>Returns the liked comment.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._CommentsController.Star(System.Int32)">
            <summary>
            Mark a <see cref="T:Weavy.Core.Models.Comment"/> as starred by the current user.
            </summary>
            <param name="id">The comment id.</param>
            <returns>Returns the liked comment.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._CommentsController.Unlike(System.Int32)">
            <summary>
            Mark a <see cref="T:Weavy.Core.Models.Comment"/> as unliked by the current user.
            </summary>
            <param name="id">The comment id.</param>
            <returns>Returns the unliked comment.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._CommentsController.Unstar(System.Int32)">
            <summary>
            Mark a <see cref="T:Weavy.Core.Models.Comment"/> as unstarred by the current user.
            </summary>
            <param name="id">The comment id.</param>
            <returns>Returns the unstarred comment.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._CommentsController.InsertAppComment(System.Int32,Weavy.Web.Api.Models.CommentIn)">
            <summary>
            Insert a new <see cref="T:Weavy.Core.Models.Comment"/> to the specified <see cref="T:Weavy.Core.Models.App"/>.
            </summary>
            <param name="id">Id of the parent <see cref="T:Weavy.Core.Models.App"/></param>
            <param name="comment">The comment to insert.</param>
            <returns>Returns the posted comment.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._CommentsController.InsertPostComment(System.Int32,Weavy.Web.Api.Models.CommentIn)">
            <summary>
            Insert a new <see cref="T:Weavy.Core.Models.Comment"/> for the specified <see cref="T:Weavy.Core.Models.Post"/>.
            </summary>
            <param name="id">Id of the parent <see cref="T:Weavy.Core.Models.Post"/></param>
            <param name="comment">The comment to insert.</param>
            <returns>Returns the posted comment.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._CommentsController.InsertContentComment(System.Int32,Weavy.Web.Api.Models.CommentIn)">
            <summary>
            Insert a new <see cref="T:Weavy.Core.Models.Comment"/> for the specified <see cref="T:Weavy.Core.Models.Content"/> item.
            </summary>
            <param name="id">Id of the parent <see cref="T:Weavy.Core.Models.Content"/> item.</param>
            <param name="comment">The comment to insert.</param>
            <returns>Returns the posted comment.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._CommentsController.Update(System.Int32,Weavy.Web.Api.Models.CommentUp)">
            <summary>
            Updates a <see cref="T:Weavy.Core.Models.Comment"/>.
            </summary>
            <param name="id">Id of the comment to update.</param>
            <param name="comment">The updated comment properties.</param>
            <returns>The updated comment.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._CommentsController.Delete(System.Int32)">
            <summary>
            Delete the <see cref="T:Weavy.Core.Models.Comment"/> with the specified id.
            </summary>
            <param name="id">Id of the comment to delete.</param>
            <returns>Returns the delete comment.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._CommentsController.Trash(System.Int32)">
            <summary>
            Trashes the <see cref="T:Weavy.Core.Models.Comment"/> with the specified id.
            </summary>
            <param name="id">Id of the comment to trash.</param>
            <returns>Returns the trashed comment.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._CommentsController.Restore(System.Int32)">
            <summary>
            Restores the <see cref="T:Weavy.Core.Models.Comment"/> with the specified id.
            </summary>
            <param name="id">Id of the comment to restore.</param>
            <returns>Returns the restored comment.</returns>
        </member>
        <member name="T:Weavy.Web.Api.Controllers._ContentController">
            <summary>
            The Content API allows a user to manage content. 
            </summary>
            <remarks>Don't generate documentation for this controller.</remarks>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.Upload(Weavy.Core.Models.IEntity,System.Boolean)">
            <summary>
            Helper method for uploading files to app or content item.
            </summary>
            <param name="parent"><see cref="T:Weavy.Core.Models.App"/> or <see cref="T:Weavy.Core.Models.Content"/> item where files should be uploaded.</param>
            <param name="attach"><c>false</c> to upload as child content, <c>true</c> to upload as attachments.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.Attach(Weavy.Core.Models.IEntity,System.Collections.Generic.IEnumerable{System.Int32},System.Boolean)">
            <summary>
            Helper method for attaching external blobs to app or content item.
            </summary>
            <param name="parent"><see cref="T:Weavy.Core.Models.App"/> or <see cref="T:Weavy.Core.Models.Content"/> item where files should be uploaded.</param>
            <param name="blobids">The ids of the Blobs to attach.</param>
            <param name="attach"><c>false</c> to upload as child content, <c>true</c> to upload as attachments.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.Replace(Weavy.Core.Models.IEntity,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Helper method for replacing existing files in folder.
            </summary>
            <param name="parent"><see cref="T:Weavy.Core.Models.App"/> or <see cref="T:Weavy.Core.Models.Content"/> item where files should be uploaded.</param>
            <param name="ids">Id of blobs to to insert while replacing existing files with same names.</param>
            <returns>The files that were updated/replaced.</returns>        
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.UploadAndReplaceRoots(System.Int32,Weavy.Web.Api.Models.UploadIn)">
            <summary>
            Replace existing files in app root with the specified blobs.
            </summary>
            <param name="id">Id of space.</param>
            <param name="model">Model with id of blobs to to insert into app root (while replacing existing files with same names).</param>
            <returns>The files that were updated/replaced.</returns>        
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.UploadAndReplaceChildren(System.Int32,Weavy.Web.Api.Models.UploadIn)">
            <summary>
            Replace existing files in folder with the specified blobs.
            </summary>
            <param name="id">Id of content item where files should be uploaded.</param>
            <param name="model">Model with id of blobs to insert (while replacing existing files with same names).</param>
            <returns>The files that were inserted and/or replaced.</returns>        
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.Attach(System.Int32,System.Int32[],System.Boolean)">
            <summary>
            Attaches the blobs to the specified <see cref="T:Weavy.Core.Models.Content"/> item that must implement the <see cref="T:Weavy.Core.Models.IHasAttachments"/> interface.
            </summary>
            <param name="id">The Id of the <see cref="T:Weavy.Core.Models.App"/> where files should be attached.</param>
            <param name="ids">The ids of the blobs to attach.</param>
            <param name="force">True to force the blobs to be attached, possibly replacing existing files with the same name.</param>
            <returns>An instance of the <see cref="T:Weavy.Web.Api.Models.AttachedOut"/> object with info about the file(s) being attached.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.InsertFiles(System.Int32,System.Int32[],System.Boolean)">
            <summary>
            Creates files from blobs and inserts into the specified app.
            </summary>
            <param name="id">The Id of the <see cref="T:Weavy.Core.Models.App"/> where files should be attached.</param>
            <param name="ids">The ids of the blobs to attach.</param>
            <param name="force">True to force the blobs to be attached, possibly replacing existing files with the same name.</param>
            <returns>An instance of the <see cref="T:Weavy.Web.Api.Models.AttachedOut"/> object with info about the file(s) being attached.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.InsertRootFiles(System.Int32,System.Int32[],System.Boolean)">
            <summary>
            Creates files from blobs and inserts into the specified app.
            </summary>
            <param name="id">The Id of the <see cref="T:Weavy.Core.Models.App"/> where files should be attached.</param>
            <param name="ids">The ids of the blobs to attach.</param>
            <param name="force">True to force the blobs to be attached, possibly replacing existing files with the same name.</param>
            <returns>An instance of the <see cref="T:Weavy.Web.Api.Models.AttachedOut"/> object with info about the file(s) being attached.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.Insert(System.Int32,System.Collections.Generic.IEnumerable{Weavy.Core.Models.Content})">
            <summary>
            Insert content into the root of the specified app.
            </summary>
            <param name="model">Model with content to insert. At least guid and name is required properties of each content object</param>
            <param name="id">Id of <see cref="T:Weavy.Core.Models.App"/> where content should be inserted.</param>
            <returns>An instance of the <see cref="T:Weavy.Web.Api.Models.ContentOut"/> object with info about the inserted or skipped content(s).</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.InsertOrReplace(System.Int32,Weavy.Web.Api.Models.ContentReplaceIn)">
            <summary>
            Inserts or replaces existing items in the root of the specified app. 
            </summary>
            <param name="id">Id of <see cref="T:Weavy.Core.Models.App"/> where content should be inserted.</param>
            <param name="model">Model with content to insert or replace with. At least guid and name is required properties of each content object. Action should be either <c>keep</c> or <c>replace</c></param>
            <returns>An instance of the <see cref="T:Weavy.Web.Api.Models.ContentOut"/> object with info about the inserted content(s).</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.InsertChildren(System.Int32,System.Collections.Generic.IEnumerable{Weavy.Core.Models.Content})">
            <summary>
            Insert a content item as a child of the specified content item.
            </summary>
            <param name="id">Id of parent <see cref="T:Weavy.Core.Models.Content"/> item.</param>
            <param name="model">Model with content to insert. At least guid and name is required properties of each content object</param>
            <returns>An instance of the <see cref="T:Weavy.Web.Api.Models.ContentOut"/> object with info about the inserted or skipped content(s).</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.InsertOrReplaceChildren(Weavy.Web.Api.Models.ContentReplaceIn,System.Int32)">
            <summary>
            Inserts or replaces existing items in in a folder or other content item. 
            </summary>
            <param name="id">Id of parent <see cref="T:Weavy.Core.Models.Content"/> item.</param>
            <param name="model">Model with content to insert or replace with. At least guid and name is required properties of each content object. Action should be either <c>keep</c> or <c>replace</c></param>
            <returns>An instance of the <see cref="T:Weavy.Web.Api.Models.ContentOut"/> object with info about the inserted content(s).</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.Move(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Moves a content item to another app or parent.
            </summary>
            <param name="sourceId">The id of the content to move.</param>
            <param name="contentId">The id of the parent content. Should be null when moving to an app.</param>
            <param name="appId">The id of the parent app. Should be null when moving to a content item.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.Delete(System.Int32)">
            <summary>
            Permanently delete a content item.
            </summary>
            <param name="id">Id of the item to delete.</param>
            <returns>The deleted item.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.Trash(System.Int32)">
            <summary>
            Trash a content item, i.e. move it to the recycle bin.
            </summary>
            <param name="id">Id of the item to trash.</param>
            <returns>The trashed item.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.Restore(System.Int32)">
            <summary>
            Restore a trashed content item from the recycle bin.
            </summary>
            <param name="id">Id of the item to restore.</param>
            <returns>The restored item.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.Unfollow(System.Int32)">
            <summary>
            Unfollow a content item.
            </summary>
            <param name="id">The item id.</param>
            <returns>The unfollowed item.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.Unlike(System.Int32)">
            <summary>
            Unlike an item.
            </summary>
            <param name="id">The item id.</param>
            <returns>The unliked item.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.Unstar(System.Int32)">
            <summary>
            Unstar an item.
            </summary>
            <param name="id">The item id.</param>
            <returns>The unstarred item.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.Get(System.Int32)">
            <summary>
            Get the content item with the specified id.
            </summary>
            <param name="id">The item id.</param>
            <returns>Returns an item.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.Discard(System.Int32)">
            <summary>
            Discards the draft with the specified id.
            </summary>
            <param name="id">The id of the item to discard.</param>
            <returns>Returns an item.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.Draft(System.Int32,Weavy.Web.Api.Models.Delta{Weavy.Core.Models.Content},System.Boolean)">
            <summary>
            Creates a draft for an content item.
            </summary>
            <param name="id">Id of the content item to update.</param>
            <param name="content">The draft.</param>
            <param name="force">Force update regardless if draft exists or not.</param>
            <returns>The created draft.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.Search(Weavy.Core.Models.ContentQuery)">
            <summary>
            Searches for content items.
            </summary>
            <param name="query">The <see cref="T:Weavy.Core.Models.ContentQuery"/> that constitutes the search.</param>
            <returns>A search result.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.Follow(System.Int32)">
            <summary>
            Follow a content item.
            </summary>
            <param name="id">The item id.</param>
            <returns>The followed item.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.Like(System.Int32)">
            <summary>
            Like an item.
            </summary>
            <param name="id">The item id.</param>
            <returns>The liked item.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.Star(System.Int32)">
            <summary>
            Star an item.
            </summary>
            <param name="id">The item id.</param>
            <returns>The starred item.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.Tags(System.Int32,Weavy.Web.Api.Models.TagsIn)">
            <summary>
            Updates tags.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.AttachmentOfficeUrl(System.Int32)">
            <summary>
            Get a url that will open the attachment in an office app and append a JWT token that facilitates SSO with Weavy. 
            </summary>
            <param name="id">The attachment id.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._ContentController.ContentOfficeUrl(System.Int32)">
            <summary>
            Get a url that will open the file in an office app and append a JWT token that facilitates SSO with Weavy. 
            </summary>
            <param name="id">The content (IFile) id.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Controllers._EmbedsController">
            <summary>
            The Embeds API converts standard URLs into embedded videos, images and rich article previews. The api returns data in the oEmbed format. 
            See &lt;a href="http://oembed.com/"&gt;http://oembed.com/&lt;/a&gt; for details.
            </summary>
            <remarks>Don't generate documentation for this controller.</remarks>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._EmbedsController.Post(Weavy.Web.Api.Models.EmbedIn)">
            <summary>
            Creates an embed for the given url.
            </summary>
            <param name="embed">Contains the URL to retrieve embedding information for.</param>
            <returns>The embed for the given url.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._EmbedsController.Get(System.Int32)">
            <summary>
            Gets the embed with the specified id.
            </summary>
            <param name="id">ID of the embed.</param>
            <returns>An embed.</returns>
        </member>
        <member name="T:Weavy.Web.Api.Controllers._MessagesController">
            <summary>
            The Messages API allows a user to create private messages between an arbitrary number of people. 
            The Messages API is built around 2 central objects: Conversations and Messages.
            </summary>
            <remarks>Don't generate documentation for this controller.</remarks>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.GetConversations(Weavy.Core.Models.QueryOptions)">
            <summary>
            Get the current user's conversations.
            </summary>
            <param name="opts">Query options for paging, sorting etc.</param>
            <returns>Returns the current user's conversations.</returns>
            <example>GET a/conversations?top=5</example>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.GetUnread(Weavy.Core.Models.QueryOptions)">
            <summary>
            Get the current user's unread conversations (conversations with unread messages).
            </summary>
            <param name="opts">Query options for paging, sorting etc.</param>
            <returns>Returns the most recent unread conversations for the current user.</returns>
            <example>GET a/conversations/unread?top=5</example>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.GetConversation(System.Int32)">
            <summary>
            Get the conversation with the specified id.
            </summary>
            <param name="id">The conversation id.</param>
            <returns>Returns a conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.CreateConversation(Weavy.Web.Api.Models.CreateConversationModel)">
            <summary>
            Create a new or get the existing conversation between the current- and specified user.
            </summary>
            <param name="model">Conversation model.</param>
            <returns>Returns a conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.UpdateConversation(System.Int32,Weavy.Web.Api.Models.CreateConversationModel)">
            <summary>
            Updates a conversation.
            </summary>
            <param name="id">The id of the conversation</param>
            <param name="model">Conversation model.</param>
            <returns>Returns a conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.AddMembersToConversation(Weavy.Web.Api.Models.CreateConversationModel)">
            <summary>
            Add members to existing conversation.
            </summary>
            <param name="model">Conversation model.</param>
            <returns>Returns a conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.StarConversation(System.Int32)">
            <summary>
            Mark a conversation as starred by the current user.
            </summary>
            <param name="id">The conversation id.</param>
            <returns>The starred conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.UnstarConversation(System.Int32)">
            <summary>
            Mark a conversation as unstarred by the current user.
            </summary>
            <param name="id">The conversation id.</param>
            <returns>The unstarred conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.FollowConversation(System.Int32)">
            <summary>
            Mark a conversation as followed by the current user.
            </summary>
            <param name="id">The conversation id.</param>
            <returns>The followed conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.UnfollowConversation(System.Int32)">
            <summary>
            Mark a conversation as unfollowed by the current user.
            </summary>
            <param name="id">The conversation id.</param>
            <returns>The unfollowed conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.Read(System.Int32)">
            <summary>
            Marks a conversation as read for the current user.
            </summary>
            <param name="id">Id of the conversation to mark as read.</param>
            <returns>The read conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.Delivered(System.Int32)">
            <summary>
            Marks a conversation as delivered for the current user.
            </summary>
            <param name="id">Id of the conversation to mark as delivered.</param>
            <returns>The delivered conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.ReadAll">
            <summary>
            Mark all conversations for the current user as read.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.UnRead(System.Int32)">
            <summary>
            Marks a conversation as unread for the current user.
            </summary>
            <param name="id">Id of the conversation to mark as unread.</param>
            <returns>The unread conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.LeaveConversation(System.Int32)">
            <summary>
            Leave a conversation.
            </summary>
            <param name="id">The conversation id.</param>
            <returns>The left conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.LeaveConversation(System.Int32,System.Int32)">
            <summary>
            Removes a user from the conversation.
            </summary>
            <param name="id">The conversation id.</param>
            <param name="member">The member to remove</param>
            <returns>The left conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.Archive(System.Int32)">
            <summary>
            Archives a conversation for the current user.
            </summary>
            <param name="id">Id of the conversation to archive.</param>
            <returns>The archived conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.UnArchive(System.Int32)">
            <summary>
            Unarchives a conversation for the current user.
            </summary>
            <param name="id">Id of the conversation to unarchive.</param>
            <returns>The unarchived conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.GetMessages(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Get the messages in the specified conversation.
            </summary>
            <param name="id">The conversation id.</param>
            <param name="opts">Query options for paging, sorting etc.</param>
            <returns>Returns a conversation.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.InsertMessage(System.Int32,Weavy.Web.Models.MessageIn)">
            <summary>
            Creates a new message in the specified conversation.
            </summary>
            <param name="id">The conversation id.</param>
            <param name="message">The message to insert.</param>
            <returns>The inserted message.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.InsertMessage(Weavy.Web.Models.ConversationIn)">
            <summary>
            Posts a new message to the specified recipients (automatically creates a new conversation if needed).
            </summary>
            <param name="message">The message to insert.</param>
            <returns>The posted message.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.Get(System.Int32)">
            <summary>
            Get the message with the specified id.
            </summary>
            <param name="id">The message id.</param>
            <returns>Returns a message.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.Like(System.Int32)">
            <summary>
            Mark a message as liked by the current user.
            </summary>
            <param name="id">The message id.</param>
            <returns>The liked message.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.Unlike(System.Int32)">
            <summary>
            Mark a message as unliked by the current user.
            </summary>
            <param name="id">The message id.</param>
            <returns>The unliked message.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.Star(System.Int32)">
            <summary>
            Mark a message as starred by the current user.
            </summary>
            <param name="id">The message id.</param>
            <returns>The starred message.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._MessagesController.Unstar(System.Int32)">
            <summary>
            Mark a message as unstarred by the current user.
            </summary>
            <param name="id">The message id.</param>
            <returns>The unstarred message.</returns>
        </member>
        <member name="T:Weavy.Web.Api.Controllers._NotificationsController">
            <summary>
            The Notifications API allow users to manage their notifications. 
            </summary>
            <remarks>Don't generate documentation for this controller.</remarks>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._NotificationsController.Get(System.Int32)">
            <summary>
            Get the notification with the specified id.
            </summary>
            <param name="id">Id of the notification to get.</param>
            <returns>The notification.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._NotificationsController.PostRead(System.Int32)">
            <summary>
            Mark the notification with the specified id as read.
            </summary>
            <param name="id">Id of the notification to mark as read.</param>
            <returns>The notification.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._NotificationsController.PostUnRead(System.Int32)">
            <summary>
            Marks the notification with the specified id as unread.
            </summary>
            <param name="id">Id of the notification to mark as unread.</param>
            <returns>The notification.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._NotificationsController.PostReadAll(System.Nullable{System.Int32})">
            <summary>
            Mark all unread notifications for the current user as read. Optionally pass in the id if the last viewed notification.
            </summary>
            <param name="id">Id of the last viewed notification</param>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._NotificationsController.PostRead(Weavy.Core.Models.EntityType,System.Int32)">
            <summary>
            Marks all notifications that relates to the parent as read.
            </summary>
            <param name="parentType">The <see cref="T:Weavy.Core.Models.EntityType"/> or the parent.</param>
            <param name="parentId">The id of the parent.</param>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._NotificationsController.GetUnread(Weavy.Core.Models.NotificationQuery)">
            <summary>
            Get the unread nofications for the current user.
            </summary>
            <param name="query">Query options for paging, sorting etc.</param>
            <returns>Returns the most recent unread notifications for the current user.</returns>
            <example>GET a/notifications/unread?top=5</example>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._NotificationsController.GetNotificationBadge">
            <summary>
            Get the badges for the current user.
            </summary>        
            <returns>Returns the badges for notifications and conversations for the current user.</returns>
            <example>GET a/notifications/badges</example>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._NotificationsController.GetNotifications(Weavy.Core.Models.NotificationQuery)">
            <summary>
            Get the nofications for the current user.
            </summary>
            <param name="query">Query options for paging, sorting etc.</param>
            <returns>Returns notifications for the current user.</returns>
            <example>GET a/notifications?top=5</example>
        </member>
        <member name="T:Weavy.Web.Api.Controllers._PostsController">
            <summary>
            A Post is the central object you see in the stream. It has rich text and annotations. It can be liked, starred, commented etc. 
            Posts are closely tied to the follow graph, if you would like to send private messages you should look at the Messages API.
            </summary>
            <remarks>Don't generate documentation for this controller.</remarks>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._PostsController.GetPosts(System.Int32,Weavy.Core.Models.Query)">
            <summary>
            Retrieves the stream of posts in an app.
            </summary>
            <param name="id">The app id.</param>
            <param name="opts">Query options for paging, sorting etc.</param>
            <returns>A list of posts.</returns>
            <example>GET a/spaces/1/posts?top=20</example>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._PostsController.Insert(System.Int32,Weavy.Web.Api.Models.PostIn)">
            <summary>
            Creates a new post in the specified app.
            </summary>
            <param name="id">The app id.</param>
            <param name="post">The post to insert.</param>
            <returns>The inserted post.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._PostsController.Update(System.Int32,Weavy.Web.Api.Models.PostUp)">
            <summary>
            Updates a post.
            </summary>
            <param name="id">Id of the post to update.</param>
            <param name="post">The post to update.</param>
            <returns>The updated post.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._PostsController.Get(System.Int32)">
            <summary>
            Get the post with the specified id.
            </summary>
            <param name="id">The post id.</param>
            <returns>Returns a post.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._PostsController.Vote(System.Int32,System.Int32)">
            <summary>
            Vote for an option in a poll.
            </summary>
            <param name="id">The post id.</param>
            <param name="optionid">The option id.</param>
            <returns>The post that .</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._PostsController.Like(System.Int32)">
            <summary>
            Mark a post as liked by the current user.
            </summary>
            <param name="id">The post id.</param>
            <returns>The liked post.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._PostsController.Unlike(System.Int32)">
            <summary>
            Mark a post as unliked by the current user.
            </summary>
            <param name="id">The post id.</param>
            <returns>The unliked post.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._PostsController.Star(System.Int32)">
            <summary>
            Mark a post as starred by the current user.
            </summary>
            <param name="id">The post id.</param>
            <returns>The starred post.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._PostsController.Unstar(System.Int32)">
            <summary>
            Mark a post as unstarred by the current user.
            </summary>
            <param name="id">The post id.</param>
            <returns>The unstarred post.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._PostsController.Follow(System.Int32)">
            <summary>
            Follow a post.
            </summary>
            <param name="id">The post id.</param>
            <returns>The followed post.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._PostsController.Unfollow(System.Int32)">
            <summary>
            Unfollow a post.
            </summary>
            <param name="id">The post id.</param>
            <returns>The unfollowed post.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._PostsController.Pin(System.Int32)">
            <summary>
            Pin a post.
            </summary>
            <param name="id">The post id.</param>
            <returns>The pinned post.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._PostsController.Unpin(System.Int32)">
            <summary>
            Unpin a post.
            </summary>
            <param name="id">The post id.</param>
            <returns>The unpinned post.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._PostsController.Trash(System.Int32)">
            <summary>
            Trash a post.
            </summary>
            <param name="id">Id of the post to trash.</param>
            <returns>The trashed post.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._PostsController.Restore(System.Int32)">
            <summary>
            Restores a post from the trash.
            </summary>
            <param name="id">Id of the post to restore.</param>
            <returns>The restored post.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._PostsController.Delete(System.Int32)">
            <summary>
            Delete the post with the specified id.
            </summary>
            <param name="id">Id of the post to delete.</param>
            <returns>The deleted post.</returns>
        </member>
        <member name="T:Weavy.Web.Api.Controllers._RolesController">
            <summary>
            A user can be a member of zero or more roles.
            </summary>
            <remarks>Don't generate documentation for this controller.</remarks>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._RolesController.Get(System.Int32)">
            <summary>
            Retrieves a role.
            </summary>
            <param name="id">The role id.</param>
            <returns>Returns a role.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._RolesController.GetRoles(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Retrieves the roles contained in the ids array.
            </summary>
            <param name="ids">An array of id's.</param>
            <returns>A list of roles.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._RolesController.Search(Weavy.Core.Models.RoleQuery)">
            <summary>
            Searches for roles.
            </summary>
            <param name="query">The <see cref="T:Weavy.Core.Models.RoleQuery"/> that constitutes the search.</param>
            <returns>A search result.</returns>
        </member>
        <member name="T:Weavy.Web.Api.Controllers._SearchController">
            <summary>
            Provides API search functionality.
            </summary>
            <remarks>Don't generate documentation for this controller.</remarks>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SearchController.Search(Weavy.Core.Models.Query)">
            <summary>
            Performs a search against the index.
            </summary>
            <param name="query">The <see cref="T:Weavy.Core.Models.Query"/> object that contains the parameters to use in the search.</param>
            <returns>A <see cref="T:Weavy.Web.Api.Models.ScrollableList`1"/> with the results from the search.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SearchController.ContentAutocomplete(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns autocomplete suggestions for quicklinks.
            </summary>
            <param name="q">The (partial) query text for which to return autocomplete suggestions.</param>
            <param name="top">Max number of hits to return.</param>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> with the results from the search.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SearchController.SpaceContentAutocomplete(System.Int32,System.String,System.Nullable{System.Int32})">
            <summary>
            Returns autocomplete suggestions for quicklinks in the specified space.
            </summary>
            <param name="id">Id of space to search for content.</param>
            <param name="q">The (partial) query text for which to return autocomplete suggestions.</param>
            <param name="top">Max number of hits to return.</param>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> with the results from the search.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SearchController.MentionsAutocomplete(System.String,System.Nullable{System.Int32})">
            <summary>
            Returns autocomplete suggestions for @mentions.
            </summary>
            <param name="q">The (partial) query text for which to return autocomplete suggestions.</param>
            <param name="top">Max number of hits to return.</param>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> with the results from the search.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SearchController.SpaceMentionsAutocomplete(System.Int32,System.String,System.Nullable{System.Int32})">
            <summary>
            Returns autocomplete suggestions for @mentioning members in the specified space.
            </summary>
            <param name="id">Id of space to search.</param>
            <param name="q">The (partial) query text for which to return autocomplete suggestions.</param>
            <param name="top">Max number of hits to return.</param>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> with the results from the search.</returns>
        </member>
        <member name="T:Weavy.Web.Api.Controllers._SpacesController">
            <summary>
            A space is a work area. Apps, Items, Posts and other things all exists in the context of a space. 
            Users can be members of a space which give them certain permissions.
            </summary>
            <remarks>Don't generate documentation for this controller.</remarks>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SpacesController.Trash(System.Int32)">
            <summary>
            Trashes the <see cref="T:Weavy.Core.Models.Space"/> with the specified id.
            </summary>
            <param name="id">Id of the space to trash.</param>
            <returns>Returns the trashed space.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SpacesController.Restore(System.Int32)">
            <summary>
            Restores the <see cref="T:Weavy.Core.Models.Space"/> with the specified id.
            </summary>
            <param name="id">Id of the space to restore.</param>
            <returns>Returns the restored space.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SpacesController.Delete(System.Int32)">
            <summary>
            Permanently delete the space with the specified id.
            </summary>
            <param name="id">Id of the space to delete.</param>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SpacesController.DeleteFollow(System.Int32)">
            <summary>
            Stop following the activity in a space.
            </summary>
            <param name="id">The space id.</param>
            <returns>The unfollowed space.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SpacesController.DeleteStar(System.Int32)">
            <summary>
            Mark a space as unstarred by the current user.
            </summary>
            <param name="id">The space id.</param>
            <returns>The unstarred space.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SpacesController.Get(System.Int32)">
            <summary>
            Get the space with the specified id.
            </summary>
            <param name="id">The space id.</param>
            <returns>Returns a space.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SpacesController.GetSpaces">
            <summary>
            Returns the available spaces, i.e. spaces that are visible for the current user.
            </summary>
            <returns>A list of spaces.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SpacesController.Search(Weavy.Core.Models.SpaceQuery)">
            <summary>
            Performs a search for spaces.
            </summary>
            <param name="query">The <see cref="T:Weavy.Core.Models.SpaceQuery"/> object that constitutes the search.</param>
            <returns>A search result containing <see cref="T:Weavy.Core.Models.Space"/> objects.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SpacesController.GetMembers(System.Int32)">
            <summary>
            Gets the members of the space.
            </summary>
            <param name="id">The space id.</param>
            <returns>The joined space.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SpacesController.AddMembers(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Add members to a space.
            </summary>
            <param name="id">The space id</param>
            <param name="ids">The ids of the people to add.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SpacesController.UpdateMember(System.Int32,Weavy.Web.Api.Models.MemberUp)">
            <summary>
            Update a space member
            </summary>
            <param name="id">The space id</param>
            <param name="model">The <see cref="T:Weavy.Web.Api.Models.MemberUp"/> object to update.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SpacesController.DeleteLeave(System.Int32)">
            <summary>
            Leaves the specified space.
            </summary>
            <param name="id">The space id.</param>
            <returns>The space that was just left.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SpacesController.RemoveMember(System.Int32,Weavy.Web.Api.Models.MemberUp)">
            <summary>
            Removes a member from the space.
            </summary>
            <param name="id">The space id.</param>
            <param name="member">The memeber to remove from the space</param>
            <returns>The member that was removed.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SpacesController.Post(Weavy.Core.Models.Space)">
            <summary>
            Creates a new space.
            </summary>
            <param name="space">The space to insert.</param>
            <returns>The created space.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SpacesController.PostFollow(System.Int32)">
            <summary>
            Start following the activity in a space.
            </summary>
            <param name="id">The space id.</param>
            <returns>The followed space.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SpacesController.PostStar(System.Int32)">
            <summary>
            Mark a space as starred by the current user.
            </summary>
            <param name="id">The space id.</param>
            <returns>The starred space.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SpacesController.Put(System.Int32,Weavy.Core.Models.Space)">
            <summary>
            Updates a space.
            </summary>
            <param name="id">The space id.</param>
            <param name="space">The space to update.</param>
            <returns>The updated space.</returns>
        </member>
        <member name="T:Weavy.Web.Api.Controllers._SystemController">
            <summary>
            
            </summary>
            <remarks>Don't generate documentation for this controller.</remarks>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SystemController.GetVersion(System.String)">
            <summary>
            Gets the version number of this installation.
            </summary>
            <param name="name">The name of the assembly for which to return version number.</param>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SystemController.GetStatus">
            <summary>
            Gets the status of this installation.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._SystemController.GetTheme">
            <summary>
            Gets the theme settings for this installation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Api.Controllers._UsersController">
            <summary>
            The Users API has methods for manipulating users. 
            Each user has a profile that holds all the personal details of the user. 
            This includes basic information like the name and email address, but can also include other properties like phone number etc.
            </summary>
            <remarks>Don't generate documentation for this controller.</remarks>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.Authenticate(System.String,System.String)">
            <summary>
            Authenticate user with specified username and password.
            </summary>
            <returns>Returns user claims.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.GetMe">
            <summary>
            Retrieves the current user.
            </summary>
            <returns>Returns a user.</returns>        
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.GetPresence(System.Int32)">
            <summary>
            Retrieves presence information for the specified user.
            </summary>
            <returns>Returns a user.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.Get(System.Int32)">
            <summary>
            Retrieves a user.
            </summary>
            <param name="id">The user id.</param>
            <returns>Returns a user.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.GetOnline(Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieves a list of online users.
            </summary>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.GetUsers(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Retrieves a list of users.
            </summary>
            <param name="ids">A comma-separated list of user ids.</param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.Follow(System.Int32)">
            <summary>
            Start following a person.
            </summary>
            <param name="id">The user id.</param>
            <returns>The followed user.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.Unfollow(System.Int32)">
            <summary>
            Stop following a person.
            </summary>
            <param name="id">The user id.</param>
            <returns>The unfollowed person.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.Trash(System.Int32)">
            <summary>
            Trash a user.
            </summary>
            <param name="id">Id of the user to trash.</param>
            <returns>The trashed user.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.Restore(System.Int32)">
            <summary>
            Restores a user from the trash.
            </summary>
            <param name="id">Id of user to restore.</param>
            <returns>The restored user.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.GetFollowers(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve the people that follow a person.
            </summary>
            <param name="id">The user id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.GetFollowing(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Returns users that the specified user is following.
            </summary>
            <param name="id">The user id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.GetPostLikes(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve users that liked a post.
            </summary>
            <param name="id">The post id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.GetPostStars(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve users that starred a post.
            </summary>
            <param name="id">The post id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.GetCommentLikes(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve users that liked a comment.
            </summary>
            <param name="id">The comment id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.GetCommentStars(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve users that starred a comment.
            </summary>
            <param name="id">The comment id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.GetSpaceLikes(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve users that likes a space.
            </summary>
            <param name="id">The space id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.GetSpaceStars(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve users that stars a space.
            </summary>
            <param name="id">The space id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.GetSpaceFollows(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve users that follows a space.
            </summary>
            <param name="id">The space id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.GetContentLikes(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve all users that likes the specified content item.
            </summary>
            <param name="id">The content id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.GetContentStars(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve all users that stars the specified content item.
            </summary>
            <param name="id">The content id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.GetContentFollows(System.Int32,Weavy.Core.Models.QueryOptions)">
            <summary>
            Retrieve all users that follow the specified content item.
            </summary>
            <param name="id">The content id.</param>
            <param name="opts"></param>
            <returns>Returns a list of users.</returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers._UsersController.Search(Weavy.Core.Models.UserQuery)">
            <summary>
            Searches for users.
            </summary>
            <param name="query">The <see cref="T:Weavy.Core.Models.UserQuery"/> that constitutes the search.</param>
            <returns>A search result.</returns>
        </member>
        <member name="T:Weavy.Web.Api.Controllers.WeavyApiController">
            <summary>
            Abstract base class for API controllers.
            </summary>
        </member>
        <member name="F:Weavy.Web.Api.Controllers.WeavyApiController.DefaultPageSize">
            <summary>
            The default page size for api requests.
            </summary>
        </member>
        <member name="F:Weavy.Web.Api.Controllers.WeavyApiController.MaxPageSize">
            <summary>
            The max page size for api requests.
            </summary>
        </member>
        <member name="F:Weavy.Web.Api.Controllers.WeavyApiController.ThumbnailMaxAge">
            <summary>
            Number of seconds to cache thumbnail images.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Controllers.WeavyApiController.User">
            <summary>
            Gets the user security information for the current HTTP request.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Controllers.WeavyApiController.OwinContext">
            <summary>
            Get the current Owin context.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Controllers.WeavyApiController.ThrowResponseException(System.Net.HttpStatusCode,System.String)">
            <summary>
            Throws a HttpResponseException with the specified code and message.
            </summary>
            <param name="code">The status code of the response.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Weavy.Web.Api.Controllers.WeavyApiController.ThrowValidationException(System.Net.HttpStatusCode,System.Web.Http.ModelBinding.ModelStateDictionary)">
            <summary>
            Throws a HttpResponseException with the specified code and message.
            </summary>
            <param name="code">The status code of the response.</param>
            <param name="modelState">The error message.</param>
        </member>
        <member name="M:Weavy.Web.Api.Controllers.WeavyApiController.ValidateModel(System.Object)">
            <summary>
            Helper method for validating an object after patch and put requests.
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:Weavy.Web.Api.Controllers.WeavyApiController.ConvertAndTransmit(Weavy.Core.Models.Blob,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Writes the (optionally resized and/or converted) content of the specified <paramref name="blob"/> directly to the response output stream.
            </summary>
            <param name="blob">The blob.</param>
            <param name="width">The maximum width in pixels of the thumbnail.</param>
            <param name="height">The maximum height in pixels of the thumbnail.</param>
            <param name="options">Additional resize options.</param>
            <param name="ext">File extension of requested output format, e.g. .gif, .jpg, or .pdf</param>
            <param name="downloadName">Name to use in Content-Disposition header when downloading the file.</param>
        </member>
        <member name="M:Weavy.Web.Api.Controllers.WeavyApiController.ConvertAndTransmit(System.IO.FileInfo,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
             Writes the (optionally resized and/or converted) content of the specified <paramref name="file"/> directly to the response output stream.
            </summary>
            <param name="file">The file.</param>
            <param name="width">The maximum width in pixels of the thumbnail.</param>
            <param name="height">The maximum height in pixels of the thumbnail.</param>
            <param name="options">Additional resize options.</param>
            <param name="ext">File extension of requested output format, e.g. .gif, .jpg, or .pdf</param>
            <param name="downloadName">Name to use in Content-Disposition header when downloading the file.</param>
        </member>
        <member name="M:Weavy.Web.Api.Controllers.WeavyApiController.Transmit(Weavy.Core.Models.Blob,System.Nullable{System.Int32},System.String)">
            <summary>
            Writes the content of the specified <paramref name="blob"/> directly to the response output stream, without buffering it in memory.
            </summary>
            <param name="blob">The blob to return.</param>
            <param name="maxAge">Number of seconds that client can reuse cached file without validating Etag and/or Last-Modified, or <c>null</c> to prevent client from reusing a cached file without first validating it with the server.</param>
            <param name="downloadName">Name to use in Content-Disposition header when downloading the file.</param>
        </member>
        <member name="M:Weavy.Web.Api.Controllers.WeavyApiController.Transmit(System.IO.FileInfo,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            Writes the content of the specified <paramref name="file"/> directly to the response output stream, without buffering it in memory.
            </summary>
            <param name="file">The file to return.</param>
            <param name="maxAge">Number of seconds that client can reuse cached file without validating Etag and/or Last-Modified, or <c>null</c> to prevent client from reusing a cached file without first validating it with the server.</param>
            <param name="etag">Value to set in the ETag header and to compare with If-None-Match header. When not set, a value will be calculated based on name, size and last write time of the <paramref name="file"/>.</param>
            <param name="lastModified">Time to compare with If-Modified-Since header and to set in the Last-Modified header. When not set, last write time of the <paramref name="file"/> will be used.</param>
            <param name="contentType">Value to set in the Content-Type header. When not set, content type will be inferred from the file name.</param>
            <param name="downloadName">Name to use in Content-Disposition header when downloading the file.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Controllers.WeavyApiController.CreateResponse(System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime})">
            <summary>
            Create a response message that sets the correct headers and status code depending the given parameters. 
            </summary>
            <param name="maxAge">Number of seconds that client can reuse cached file without validating Etag and/or Last-Modified, or <c>null</c> to prevent client from reusing a cached file without first validating it with the server.</param>
            <param name="etag">Value to set in the ETag header and to compare with If-None-Match header..</param>
            <param name="lastModified">Time to compare with If-Modified-Since header.</param>
        </member>
        <member name="M:Weavy.Web.Api.Controllers.WeavyApiController.ContentNotFound">
            <summary>
            Helper method for logging the current url and returning 404 Not Found.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Formatters.JsonContentNegotiator">
            <summary>
            A content negotiator that always returns aplication/json.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Formatters.JsonContentNegotiator.#ctor">
            <summary>
            Initializes a new instance of the JsonContentNegotiator class.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Formatters.JsonContentNegotiator.Negotiate(System.Type,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
            <summary>
            Always returns a JsonMediaTypeFormatter.
            </summary>
            <param name="type">The type to be serialized.</param>
            <param name="request">The request.</param>
            <param name="formatters">The set of MediaTypeFormatter objects from which to choose.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Models.CommentIn">
            <summary>
            Comment input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.CommentIn.Text">
            <summary>
            Gets or sets the comment text.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.CommentIn.Html">
            <summary>
            Gets or sets the post html.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.CommentIn.Blobs">
            <summary>
            Gets or sets ids of blobs to attach.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.CommentIn.Embeds">
            <summary>
            Gets or sets ids of embeds to attach.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.CommentIn.Meetings">
            <summary>
            Gets or sets ids of meetings to attach.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Models.CommentIn.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Api.Models.CommentUp">
            <summary>
            Comment update model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.CommentUp.Text">
            <summary>
            Gets or sets the comment text.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.CommentUp.Html">
            <summary>
            Gets or sets the comment html.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Models.CommentUp.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Api.Models.ContentReplaceIn">
            <summary>
            Model for keeping or replacing duplicates after uploading.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.ContentReplaceIn.Action">
            <summary>
            Action to perform (should be either "keep" or "replace").
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.ContentReplaceIn.Items">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Api.Models.ContentOut">
            <summary>
            Model for listing inserted and skipped files after upload.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Models.ContentOut.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.ContentOut.Inserted">
            <summary>
            The inserted contents
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.ContentOut.Skipped">
            <summary>
            The skipped contents
            </summary>
        </member>
        <member name="T:Weavy.Web.Api.Models.CreateConversationModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.CreateConversationModel.Id">
            <summary>
            The id of the conversation
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.CreateConversationModel.Name">
            <summary>
            The name of the conversation
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.CreateConversationModel.Users">
            <summary>
            The users/members of the conversation
            </summary>
        </member>
        <member name="T:Weavy.Web.Api.Models.Delta`1">
            <summary>
            A class the tracks changes (i.e. the Delta) for a particular <typeparamref name="TEntityType"/>.
            </summary>
            <typeparam name="TEntityType">TEntityType is the base type of entity this delta tracks changes for.</typeparam>
        </member>
        <member name="M:Weavy.Web.Api.Models.Delta`1.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Weavy.Web.Api.Models.Delta`1"/>.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Models.Delta`1.#ctor(System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:Weavy.Web.Api.Models.Delta`1"/>.
            </summary>
            <param name="entityType">The derived entity type for which the changes would be tracked.
            <paramref name="entityType"/> should be assignable to instances of <typeparamref name="TEntityType"/>.</param>
        </member>
        <member name="P:Weavy.Web.Api.Models.Delta`1.EntityType">
            <summary>
            The actual type of the entity for which the changes are tracked.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Models.Delta`1.Clear">
            <summary>
            Clears the Delta and resets the underlying Entity.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Models.Delta`1.TrySetPropertyValue(System.String,System.Object)">
            <summary>
            Attempts to set the Property called <paramref name="name"/> to the <paramref name="value"/> specified.
            </summary>
            <param name="name">The name of the Property</param>
            <param name="value">The new value of the Property</param>
            <returns>True if successful</returns>
            <remarks>
            Only properties that exist on <see cref="P:Weavy.Web.Api.Models.Delta`1.EntityType"/> can be set.
            If there is a type mismatch the request will fail.
            </remarks>
        </member>
        <member name="M:Weavy.Web.Api.Models.Delta`1.TryGetPropertyValue(System.String,System.Object@)">
            <summary>
            Attempts to get the value of the Property called <paramref name="name"/> from the underlying Entity.
            </summary>
            <param name="name">The name of the Property</param>
            <param name="value">The value of the Property</param>
            <returns>True if the Property was found</returns>
            <remarks>
            Only properties that exist on <see cref="P:Weavy.Web.Api.Models.Delta`1.EntityType"/> can be retrieved.
            Both modified and unmodified properties can be retrieved.
            </remarks>
        </member>
        <member name="M:Weavy.Web.Api.Models.Delta`1.GetExpandoValue(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Models.Delta`1.GetPropertyName(System.String)">
            <summary>
            Tries to retrieve the property name as defined in the class. Either literaly or by its snakecase representation.
            </summary>
            <param name="candidate">The property name</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Models.Delta`1.TryGetPropertyType(System.String,System.Type@)">
            <summary>
            Attempts to get the <see cref="T:System.Type"/> of the Property called <paramref name="name"/> from the underlying Entity.
            </summary>
            <param name="name">The name of the Property</param>
            <param name="type">The type of the Property</param>
            <returns>Returns <c>true</c> if the Property was found and <c>false</c> if not.</returns>
            <remarks>
            Only properties that exist on <see cref="P:Weavy.Web.Api.Models.Delta`1.EntityType"/> can be retrieved.
            Both modified and unmodified properties can be retrieved.
            </remarks>
        </member>
        <member name="M:Weavy.Web.Api.Models.Delta`1.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>
            Overrides the DynamicObject TrySetMember method, so that only the properties
            of <see cref="P:Weavy.Web.Api.Models.Delta`1.EntityType"/> can be set.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Models.Delta`1.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            Overrides the DynamicObject TryGetMember method, so that only the properties
            of <see cref="P:Weavy.Web.Api.Models.Delta`1.EntityType"/> can be got.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Models.Delta`1.GetEntity">
            <summary>
            Returns the <see cref="P:Weavy.Web.Api.Models.Delta`1.EntityType"/> instance
            that holds all the changes (and original values) being tracked by this Delta.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Models.Delta`1.GetChangedPropertyNames">
            <summary>
            Returns the Properties that have been modified through this Delta as an 
            enumeration of Property Names 
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Models.Delta`1.GetUnchangedPropertyNames">
            <summary>
            Returns the Properties that have not been modified through this Delta as an 
            enumeration of Property Names 
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Models.Delta`1.CopyChangedValues(`0)">
            <summary>
            Copies the changed property values from the underlying entity (accessible via <see cref="M:Weavy.Web.Api.Models.Delta`1.GetEntity" />) 
            to the <paramref name="original"/> entity.
            </summary>
            <param name="original">The entity to be updated.</param>
        </member>
        <member name="M:Weavy.Web.Api.Models.Delta`1.Patch(`0)">
            <summary>
            Overwrites the <paramref name="original"/> entity with the changes tracked by this Delta.
            </summary>
            <param name="original">The entity to be updated.</param>
            <remarks>The semantics of this operation are equivalent to a HTTP PATCH operation, hence the name.</remarks>
        </member>
        <member name="M:Weavy.Web.Api.Models.Delta`1.Initialize(System.Type)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
        </member>
        <member name="M:Weavy.Web.Api.Models.Delta`1.InitializeProperties">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Models.Delta`1.IsNullable(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Models.DocumentIn">
            <summary>
            New document input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.DocumentIn.Name">
            <summary>
            Gets or sets the filename.
            </summary>
        </member>
        <member name="T:Weavy.Web.Api.Models.EmbedIn">
            <summary>
            Embed input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.EmbedIn.Url">
            <summary>
            The URL to retrieve embedding information for.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.EmbedIn.MaxWidth">
            <summary>
            The maximum width of the embedded resource. Only applies to some resource types
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.EmbedIn.MaxHeight">
            <summary>
            The maximum height of the embedded resource. Only applies to some resource types.
            </summary>
        </member>
        <member name="T:Weavy.Web.Api.Models.MembersIn">
            <summary>
            Model for adding members to a space.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.MembersIn.Members">
            <summary>
            Gets or sets the ids of the people to add.
            </summary>
        </member>
        <member name="T:Weavy.Web.Api.Models.MemberUp">
            <summary>
            Model for updating a space member.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.MemberUp.UserId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.MemberUp.Access">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Api.Models.MentionModel">
            <summary>
            Object returned by mention autocomplete function.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.MentionModel.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.MentionModel.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.MentionModel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.MentionModel.Username">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.MentionModel.Thumb">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.MentionModel.Url">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.MentionModel.Directory">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.MentionModel.Member">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Api.Models.NoteIn">
            <summary>
            Note input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.NoteIn.Title">
            <summary>
            Gets or sets the note title.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.NoteIn.Text">
            <summary>
            Gets or sets the note text.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.NoteIn.NoteType">
            <summary>
            Gets or sets the note type.
            </summary>
        </member>
        <member name="T:Weavy.Web.Api.Models.PostIn">
            <summary>
            Post input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.PostIn.Text">
            <summary>
            Gets or sets the post text.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.PostIn.Html">
            <summary>
            Gets or sets the post html.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.PostIn.Blobs">
            <summary>
            Gets or sets ids of blobs to attach.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.PostIn.Embeds">
            <summary>
            Gets or sets ids of the embeds.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.PostIn.Meetings">
            <summary>
            Gets or sets ids of the meetings.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.PostIn.Options">
            <summary>
            Gets or sets poll options.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Models.PostIn.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Api.Models.PostUp">
            <summary>
            Post update model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.PostUp.Text">
            <summary>
            Gets or sets the post text.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.PostUp.Html">
            <summary>
            Gets or sets the post html.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Models.PostUp.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Api.Models.ScrollableList`1">
            <summary>
            A wrapper around a PagedList for better JSON serialization.
            </summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
        </member>
        <member name="M:Weavy.Web.Api.Models.ScrollableList`1.#ctor(Weavy.Core.Collections.PagedList{`0},System.Uri)">
            <summary>
              Initializes a new instance of the ScrollableList class.
            </summary>
            <param name="source">The PagedList to wrap.</param>
            <param name="uri">The URI</param>
        </member>
        <member name="M:Weavy.Web.Api.Models.ScrollableList`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Uri)">
            <summary>
              Initializes a new instance of the ScrollableList class.
            </summary>
            <param name="source">The collection of items to initialize the scrollable list with.</param>
            <param name="top">The number of requested items.</param>
            <param name="skip">The number of skipped items.</param>
            <param name="total">The total item count (before skip, top etc. was applied).</param>        
            <param name="uri">The URI</param>
        </member>
        <member name="P:Weavy.Web.Api.Models.ScrollableList`1.Data">
            <summary>
            Gets the items on the current page.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.ScrollableList`1.Top">
            <summary>
            Gets the maximum requested number of items.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.ScrollableList`1.Skip">
            <summary>
            Gets the number of skipped items.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.ScrollableList`1.Count">
            <summary>
            Gets the  total number of items in the result.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.ScrollableList`1.Prev">
            <summary>
             The query options for scrolling to the previous page.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.ScrollableList`1.Next">
            <summary>
             The query options for scrolling to the next page.
            </summary>
        </member>
        <member name="T:Weavy.Web.Api.Models.TagsIn">
            <summary>
            Model for tags.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.TagsIn.Tags">
            <summary>
            The tags to set.
            </summary>
        </member>
        <member name="T:Weavy.Web.Api.Models.ThemeOut">
            <summary>
            Theme output model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.ThemeOut.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.ThemeOut.Color">
            <summary>
            Gets the theme color as specified by the user.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.ThemeOut.Colors">
            <summary>
            Gets the different shades of the theme color.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.ThemeOut.Icon">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Api.Models.UploadIn">
            <summary>
            File upload input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.UploadIn.Blobs">
            <summary>
            Ids of blobs to attach.
            </summary>
        </member>
        <member name="T:Weavy.Web.Api.Models.AttachedOut">
            <summary>
            File attach/insert output model.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Models.AttachedOut.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.AttachedOut.Attached">
            <summary>
            Gets or sets the attached files.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.AttachedOut.Inserted">
            <summary>
            Gets or sets the inserted files.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.AttachedOut.Skipped">
            <summary>
            Gets or sets the skipped blobs.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.AttachedOut.ConflictAlert">
            <summary>
            Gets or sets the html to display if conflicts occur.
            </summary>
        </member>
        <member name="T:Weavy.Web.Api.Models.UsersGroupsModel">
            <summary>
            Object returned by users and groups autocomplete function.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.UsersGroupsModel.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.UsersGroupsModel.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.UsersGroupsModel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.UsersGroupsModel.Username">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.UsersGroupsModel.Thumb">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.UsersGroupsModel.Url">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.UsersGroupsModel.IsExternal">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Models.UsersGroupsModel.Email">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Api.Routing.IntsConstraint">
            <summary>
            Inline route constraint for two or more comma sepaerated ints, e.g. 1,2,3.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Routing.IntsConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="route"></param>
            <param name="parameterName"></param>
            <param name="values"></param>
            <param name="routeDirection"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Routing.OptionsConstraint">
            <summary>
            Inline route constraint for file resizer options, e.g. "crop,both,q90".
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Routing.OptionsConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="route"></param>
            <param name="parameterName"></param>
            <param name="values"></param>
            <param name="routeDirection"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Routing.ValuesConstraint">
            <summary>
            Inline route constraint for a list if valid values.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Routing.ValuesConstraint.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Weavy.Web.Api.Routing.ValuesConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <param name="route"></param>
            <param name="parameterName"></param>
            <param name="values"></param>
            <param name="routeDirection"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Streamers.FileStreamer">
            <summary>
            Helper class for streaming a (partial) file to the HTTP response output.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Streamers.FileStreamer.#ctor(System.IO.FileInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Api.Streamers.FileStreamer"/> class.
            </summary>
            <param name="file">The file to send.</param>
        </member>
        <member name="M:Weavy.Web.Api.Streamers.FileStreamer.#ctor(System.IO.FileInfo,System.Net.Http.Headers.RangeItemHeaderValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Api.Streamers.FileStreamer"/> class.
            </summary>
            <param name="file">The file to send.</param>
            <param name="range">The range of bytes to send.</param>
        </member>
        <member name="P:Weavy.Web.Api.Streamers.FileStreamer.Start">
            <summary>
             Gets the position at which to start sending data.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Streamers.FileStreamer.End">
            <summary>
            Gets the position at which to stop sending data.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Streamers.FileStreamer.CompleteLength">
            <summary>
            Gets the total size in bytes of the file.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Streamers.FileStreamer.ContentLength">
            <summary>
            Gets the number of bytes in the range.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Streamers.FileStreamer.WriteToStreamAsync(System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)">
            <summary>
            Writes the file to the HTTP response output.
            </summary>
            <param name="output"></param>
            <param name="content"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Streamers.BlobStreamer">
            <summary>
            Helper class for streaming a (partial) blob to the HTTP response output.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Streamers.BlobStreamer.#ctor(Weavy.Core.Models.Blob)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Api.Streamers.BlobStreamer"/> class.
            </summary>
            <param name="blob">The blob to send.</param>
        </member>
        <member name="M:Weavy.Web.Api.Streamers.BlobStreamer.#ctor(Weavy.Core.Models.Blob,System.Net.Http.Headers.RangeItemHeaderValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Api.Streamers.BlobStreamer"/> class.
            </summary>
            <param name="blob">The blob to send.</param>
            <param name="range">The range of bytes to send.</param>
        </member>
        <member name="P:Weavy.Web.Api.Streamers.BlobStreamer.Start">
            <summary>
             Gets the position at which to start sending data.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Streamers.BlobStreamer.End">
            <summary>
            Gets the position at which to stop sending data.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Streamers.BlobStreamer.CompleteLength">
            <summary>
            Gets the total size in bytes of the file.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Streamers.BlobStreamer.ContentLength">
            <summary>
            Gets the number of bytes in the range.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Streamers.BlobStreamer.WriteToStreamAsync(System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)">
            <summary>
            Writes the blob to the HTTP response output.
            </summary>
            <param name="output"></param>
            <param name="content"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Streamers.BlobMultipartFormDataRemoteStreamProvider">
            <summary>
            A custom <see cref="T:System.Net.Http.MultipartStreamProvider"/> that writes uploaded files directly to our local disk cache.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Streamers.BlobMultipartFormDataRemoteStreamProvider.GetRemoteStream(System.Net.Http.HttpContent,System.Net.Http.Headers.HttpContentHeaders)">
            <summary>
            Provide a stream to which the uploaded data should be written.
            </summary>
            <param name="parent"></param>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Api.Streamers.BlobMultipartFormDataRemoteStreamProvider.GetBlob(System.Net.Http.MultipartRemoteFileData)">
            <summary>
            Return the corresponding <see cref="T:Weavy.Core.Models.Blob"/> given the specified <see cref="T:System.Net.Http.MultipartRemoteFileData"/>.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Api.Streamers.IStreamer">
            <summary>
            Interface for streaming a range of bytes to the HTTP response output.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Streamers.IStreamer.Start">
            <summary>
             Gets the position at which to start sending data.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Streamers.IStreamer.End">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Streamers.IStreamer.CompleteLength">
            <summary>
            Gets the total size in bytes of the file.
            </summary>
        </member>
        <member name="P:Weavy.Web.Api.Streamers.IStreamer.ContentLength">
            <summary>
            Gets the number of bytes in the range.
            </summary>
        </member>
        <member name="M:Weavy.Web.Api.Streamers.IStreamer.WriteToStreamAsync(System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)">
            <summary>
            Writes the range of bytes to the HTTP response output.
            </summary>
            <param name="output"></param>
            <param name="content"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.ApiConfig">
            <summary>
            Web Api configuration class.
            </summary>
        </member>
        <member name="M:Weavy.Web.ApiConfig.Configure(System.Web.Http.HttpConfiguration)">
            <summary>
            Configure the Web Api with model binders, filters, formatters, routing etc.
            </summary>
            <param name="config"></param>
        </member>
        <member name="T:Weavy.Web.AuthConfig">
            <summary>
            Authentication configuration class.
            </summary>
        </member>
        <member name="F:Weavy.Web.AuthConfig.ReturnUrlParameter">
            <summary>
            The name of the query string parameter which is appended by the middleware when a 401 Unauthorized status code is changed to a 302 redirect onto the login path.
            </summary>
        </member>
        <member name="M:Weavy.Web.AuthConfig.ConfigureAuthentication(Owin.IAppBuilder)">
            <summary>
            Configures authentication.
            </summary>
            <param name="app"></param>
        </member>
        <member name="T:Weavy.Web.MvcConfig">
            <summary>
            MVC application configuration class.
            </summary>
        </member>
        <member name="M:Weavy.Web.MvcConfig.Configure">
            <summary>
            Configure the MVC app with model binders, filters, routing, view engines etc.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.DocsConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.DocsConfig.Register(System.Web.Http.HttpConfiguration)">
            <summary>
            Register api docs component.
            </summary>
            <param name="config"></param>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Controllers.HomeController">
            <summary>
            The controller that will handle requests for the API documentation.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Controllers.HomeController.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Controllers.HomeController.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Controllers.HomeController.#ctor(System.Web.Http.HttpConfiguration)">
            <summary>
            
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Controllers.HomeController.Index">
            <summary>
            Lists the available api controllers and action methods.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Controllers.HomeController.GetControllerDocumentation(System.String)">
            <summary>
            Lists the available action methods for the specified api controller.
            </summary>
            <param name="controllerId">The controller id</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Controllers.HomeController.GetActionDocumentation(System.String)">
            <summary>
            Returns documentation about the specified api action method.
            </summary>
            <param name="actionId">The action id</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Controllers.HomeController.Authentication">
            <summary>
            Displays documentation for the authentication "controller".
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Controllers.HomeController.Token">
            <summary>
            Displays documentation for the token endpoint.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.DocsAreaRegistration">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.DocsAreaRegistration.AreaName">
            <summary>
            Gets the name of the area to register.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.DocsAreaRegistration.RegisterArea(System.Web.Mvc.AreaRegistrationContext)">
            <summary>
            Registers an area in an ASP.NET MVC application using the specified area's context information.
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Extensions.ApiDescriptionExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.ApiDescriptionExtensions.GetActionId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the action method in the <see cref="T:System.Web.Http.Description.ApiDescription"/> object.
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.ApiDescriptionExtensions.GetControllerId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the controller in the <see cref="T:System.Web.Http.Description.ApiDescription"/> object.
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions">
            <summary>
            Extension methods for genrating api documentation.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.GetDocumentation(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the models that represents an API displayed on the help page. The models are initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.GetControllerDocumentation(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="controllerId"></param>
            <returns>
            A <see cref="T:Weavy.Web.Areas.Docs.Models.ControllerDoc"/> object.
            </returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.GetControllerDocumentation(System.Web.Http.HttpConfiguration,System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>
            A <see cref="T:Weavy.Web.Areas.Docs.Models.ControllerDoc"/> object.
            </returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.GetActionDocumentation(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="actionId">The action id.</param>
            <returns>
            An <see cref="T:Weavy.Web.Areas.Docs.Models.ActionDoc"/> object.
            </returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.GenerateActionDocumentation(System.Web.Http.Description.ApiDescription,Weavy.Web.Areas.Docs.Samples.SampleGenerator,System.Web.Http.HttpConfiguration)">
            <summary>
            
            </summary>
            <param name="apiDescription"></param>
            <param name="sampleGenerator"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.GetExtraDocumentationProvider(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the documentation provider.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Extensions.HttpConfigurationExtensions.GetSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the documentation sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.IExtraDocumentationProvider">
            <summary>
            Interface for documentation providers that can return additional metadata.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.IExtraDocumentationProvider.GetExampleDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            
            </summary>
            <param name="actionDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.IExtraDocumentationProvider.GetReturnsDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            
            </summary>
            <param name="actionDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.IExtraDocumentationProvider.GetRemarksDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            
            </summary>
            <param name="actionDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.IExtraDocumentationProvider.GetPropertyDocumentation(System.Type,System.String)">
            <summary>
            Gets the documentation of the specified property.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.IExtraDocumentationProvider.GetSummaryDocumentation(System.Type)">
            <summary>
            Gets the summary of the class with the specified <see cref="T:System.Type"/>
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.IExtraDocumentationProvider.GetRemarksDocumentation(System.Type)">
            <summary>
            Gets the remarks of the class with the specified <see cref="T:System.Type"/>
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Models.ResponseDoc">
            <summary>
            The model that represents the response from and Api action method.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Models.ResponseDoc.#ctor(System.Web.Http.Description.ResponseDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Areas.Docs.Models.ResponseDoc"/> class.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ResponseDoc.ApiDescription">
            <summary>
            Gets the <see cref="P:Weavy.Web.Areas.Docs.Models.ResponseDoc.ApiDescription"/> that describes the response.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ResponseDoc.Description">
            <summary>
            Gets the response description.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ResponseDoc.Sample">
            <summary>
            Gets a sample response object.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ResponseDoc.Type">
            <summary>
            Gets the type of the response object.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Models.ActionDoc">
            <summary>
            The model that represents the documentation for an Api action method.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Models.ActionDoc.#ctor(System.Web.Http.Description.ApiDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Areas.Docs.Models.ActionDoc"/> class.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.ApiDescription">
            <summary>
            Gets the <see cref="P:Weavy.Web.Areas.Docs.Models.ActionDoc.ApiDescription"/> that describes the action.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.ControllerId">
            <summary>
            Gets the URL-friendly Id for the controller where this action is located.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.ActionId">
            <summary>
            Gets the URL-friendly Id for the action.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.Route">
            <summary>
            Gets the route template for the action.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.Method">
            <summary>
            Gets the http method(s) for the action (GET, POST etc).
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.Name">
            <summary>
            Gets the method name.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.Description">
            <summary>
            Gets the method description.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.Remarks">
            <summary>
            Gets method remarks.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.Example">
            <summary>
            Gets method example usage.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.Parameters">
            <summary>
            Gets the method parameters.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.UrlParameters">
            <summary>
            Gets method parameters that should be definded in the url.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.QueryParameters">
            <summary>
            Gets method parameters that should be definded in the query string.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.BodyParameter">
            <summary>
            Gets method parameter that should be definded in the body.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ActionDoc.Response">
            <summary>
            Gets documentation for the response.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Models.ControllerDoc">
            <summary>
            The model that represents the documentation for a Web Api controller.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Models.ControllerDoc.#ctor(System.Web.Http.Description.ApiDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Areas.Docs.Models.ControllerDoc"/> class.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ControllerDoc.ApiDescription">
            <summary>
            Gets the <see cref="P:Weavy.Web.Areas.Docs.Models.ControllerDoc.ApiDescription"/> that describes the controller.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ControllerDoc.ControllerId">
            <summary>
            Gets the url friendly Id for the controller.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ControllerDoc.Name">
            <summary>
            Gets the name of the controller.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ControllerDoc.Description">
            <summary>
            Gets the api description.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ControllerDoc.Remarks">
            <summary>
            Gets method remarks.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ControllerDoc.Type">
            <summary>
            Gets the type of the controller that defines the Api.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ControllerDoc.Actions">
            <summary>
            Gets documentation for the actions in the controller.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Models.ParameterDoc">
            <summary>
            The model that represents the documentation for an api method parameter.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Models.ParameterDoc.#ctor(System.Web.Http.Description.ApiParameterDescription)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ParameterDoc.ApiDescription">
            <summary>
            Gets the <see cref="T:System.Web.Http.Description.ApiParameterDescription"/> that describes the parameter.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ParameterDoc.Name">
            <summary>
            Gets the name of the parameter.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ParameterDoc.Description">
            <summary>
            Gets the parameter description.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ParameterDoc.Type">
            <summary>
            Gets the type of the parameter.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ParameterDoc.Required">
            <summary>
            Gets a value indicating wheter the parameter is required.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.ParameterDoc.Properties">
            <summary>
            Gets the parameter properties (if any).
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Models.PropertyDoc">
            <summary>
            The model that represents the documentation for a property.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Models.PropertyDoc.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.PropertyDoc.Name">
            <summary>
            Gets the name of the property.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.PropertyDoc.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.PropertyDoc.Required">
            <summary>
            Gets a value indicatring whether this property is required or not.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Models.PropertyDoc.Type">
            <summary>
            Gets the type of this property.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Samples.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.ObjectGenerator.GenerateObjectWithSample(System.Type,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <param name="samples">Static samples.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Samples.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="F:Weavy.Web.Areas.Docs.Samples.SampleDirection.Request">
            <summary>
            The sample is for request.
            </summary>
        </member>
        <member name="F:Weavy.Web.Areas.Docs.Samples.SampleDirection.Response">
            <summary>
            The sample is for response.
            </summary>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.Samples.SampleGenerator">
            <summary>
            This class will generate the samples for the API documentation.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.SampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Areas.Docs.Samples.SampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.Samples.SampleGenerator.SampleObjects">
            <summary>
            Gets the pre-configured samples objects.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.SampleGenerator.GetSampleObject(System.Web.Http.Description.ApiDescription,Weavy.Web.Areas.Docs.Samples.SampleDirection)">
            <summary>
            Gets sample object for the specified <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="direction">A value indicating whether to get sample object for request or response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.Samples.SampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:Weavy.Web.Areas.Docs.Samples.SampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create one using <see cref="T:Weavy.Web.Areas.Docs.Samples.ObjectGenerator"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="T:Weavy.Web.Areas.Docs.MultiXmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file, 
            See https://stackoverflow.com/questions/22165724/web-api-help-page-xml-comments-from-more-than-1-files.
            </summary>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.MultiXmlDocumentationProvider.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Areas.Docs.MultiXmlDocumentationProvider"/> class.
            </summary>
            <param name="paths">The physical paths to the file(s) containing XML documentation.</param>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.MultiXmlDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpControllerDescriptor)">
            <summary>
            Get controller documentation from class &lt;summary&gt; node.
            </summary>
            <param name="controllerDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.MultiXmlDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            Get method documentation from method &lt;summary&gt; mode.
            </summary>
            <param name="actionDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.MultiXmlDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpParameterDescriptor)">
            <summary>
            Get parameter documentation from the &lt;param&gt; node.
            </summary>
            <param name="parameterDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.MultiXmlDocumentationProvider.GetResponseDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            Get method reponse documentation from the &lt;returns&gt; node.
            </summary>
            <param name="actionDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.MultiXmlDocumentationProvider.GetExampleDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            Get the value of the &lt;example&gt; element.
            </summary>
            <param name="actionDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.MultiXmlDocumentationProvider.GetRemarksDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            Get the value of the &lt;remarks&gt;&lt;/returns&gt; element.
            </summary>
            <param name="actionDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.MultiXmlDocumentationProvider.GetReturnsDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
            <summary>
            Get the value of the &lt;returns&gt;&lt;/returns&gt; element.
            </summary>
            <param name="actionDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.MultiXmlDocumentationProvider.GetSummaryDocumentation(System.Type)">
            <summary>
            Gets the &lt;summary&gt; of the class with the specified <see cref="T:System.Type"/>
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.MultiXmlDocumentationProvider.GetRemarksDocumentation(System.Type)">
            <summary>
            Gets the &lt;remarks&gt; of the class with the specified <see cref="T:System.Type"/>
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Areas.Docs.MultiXmlDocumentationProvider.GetPropertyDocumentation(System.Type,System.String)">
            <summary>
            Gets the &lt;summary&gt; documentation for the specified property.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Weavy.Web.Areas.Docs.MultiXmlDocumentationProvider.Navigator">
            <summary>
            Gets the XPathNavigator used when reading documentation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Attributes.AdminAttribute">
            <summary>
            Only admins are allowed access to controllers/actions with this attribute.
            </summary>
        </member>
        <member name="M:Weavy.Web.Attributes.AdminAttribute.AuthorizeCore(System.Web.HttpContextBase)">
            <summary>
            Checks if the current user is an administrator.
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Attributes.AuthorizeClientAttribute">
            <summary>
            Only users that are configured as a client are allowed access to controllers/actions with this attribute.
            </summary>
        </member>
        <member name="M:Weavy.Web.Attributes.AuthorizeClientAttribute.IsAuthorized(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Checks if a client can be derived from the claims of the current user.
            </summary>
            <param name="actionContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Attributes.PermissionAttribute">
            <summary>
            Checks that the current user has the specified system permission.
            </summary>
        </member>
        <member name="M:Weavy.Web.Attributes.PermissionAttribute.#ctor(Weavy.Core.Models.Permission)">
            <summary>
            
            </summary>
            <param name="permission"></param>
        </member>
        <member name="M:Weavy.Web.Attributes.PermissionAttribute.AuthorizeCore(System.Web.HttpContextBase)">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Attributes.SystemStatusAttribute">
            <summary>
            Prevent access to actions based on <see cref="T:Weavy.Core.Models.SystemStatus"/>
            </summary>
        </member>
        <member name="T:Weavy.Web.Binders.BlobBinder">
            <summary>
            Binds the model to a Blob (for avatars).
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.BlobBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            Binds the model to a <see cref="T:Weavy.Core.Models.Blob"/>
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Binders.ContentQueryBinder">
            <summary>
            Binds the model to a AppQuery object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.ContentQueryBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="T:Weavy.Web.Binders.ConversationQueryBinder">
            <summary>
            Binds the model to a ConversationQuery object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.ConversationQueryBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="T:Weavy.Web.Binders.EntityBinder">
            <summary>
            Binds the model to an Entity object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.EntityBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Binders.IEntityBinder">
            <summary>
            Binds the model to an Entity&lt;IEntity&gt; object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.IEntityBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Binders.IEntitiesBinder">
            <summary>
            Binds the model to a List&lt;Entity&lt;IEntity&gt;&gt;.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.IEntitiesBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Binders.EntityBinderProvider">
            <summary>
            Defines methods that enable dynamic implementations of model binding for classes that implement the IModelBinder interface. 
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.EntityBinderProvider.GetBinder(System.Type)">
            <summary>
            
            </summary>
            <param name="modelType"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Binders.EntityQueryBinder">
            <summary>
            Binds the model to a EntityQuery object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.EntityQueryBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="T:Weavy.Web.Binders.EnumFlagsModelBinder">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.EnumFlagsModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Binders.EnumTypeModelBinder">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.EnumTypeModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Binders.IntsBinder">
            <summary>
            Binds the model to an array of integers.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.IntsBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            Binds the model to a value by using the specified controller context and binding context.
            </summary>
            <param name="controllerContext">The controller context</param>
            <param name="bindingContext">The binding context</param>
            <returns>The bound value</returns>
        </member>
        <member name="T:Weavy.Web.Binders.NotificationQueryBinder">
            <summary>
            Binds the model to a <see cref="T:Weavy.Core.Models.NotificationQuery"/> object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.NotificationQueryBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Binders.NotificationQueryBinder.BindEventTypes(System.String[])">
            <summary>
            Binds entry types from qs.
            </summary>
            <param name="eventTypes"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Binders.QueryBinder">
            <summary>
            Binds the model to a Query object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.QueryBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Binders.QueryBinder.BindEntityTypes(Weavy.Core.Models.Query,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            
            </summary>
            <param name="query"></param>
            <param name="types"></param>
        </member>
        <member name="M:Weavy.Web.Binders.QueryBinder.BindDateRange(Weavy.Core.Models.Query,System.String)">
            <summary>
            
            </summary>
            <param name="query"></param>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Binders.QueryOptionsBinder">
            <summary>
            Binds the model to a QueryOptions object.
            </summary>
        </member>
        <member name="F:Weavy.Web.Binders.QueryOptionsBinder.DefaultPageSize">
            <summary>
            The default page size.
            </summary>
        </member>
        <member name="F:Weavy.Web.Binders.QueryOptionsBinder.MaxPageSize">
            <summary>
            The max page size.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.QueryOptionsBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="M:Weavy.Web.Binders.QueryOptionsBinder.Get(System.Web.Mvc.ModelBindingContext,System.String[])">
            <summary>
            Gets a string value from the binding context.
            </summary>
            <param name="bindingContext"></param>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Binders.QueryOptionsBinder.GetList``1(System.Web.Mvc.ModelBindingContext,System.String[])">
            <summary>
            Gets a value from the binding context.
            </summary>
            <param name="bindingContext"></param>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Binders.QueryOptionsBinder.GetValue(System.Web.Mvc.ModelBindingContext,System.String[])">
            <summary>
            Gets the <see cref="T:System.Web.Mvc.ValueProviderResult"/> from the binding context or null if no item match the keys.
            </summary>
            <param name="bindingContext"></param>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Binders.QueryOptionsBinder.GetLayout(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.String[])">
            <summary>
            Gets and/or sets the preferred layout.
            </summary>
            <param name="controllerContext"></param>
            <param name="bindingContext"></param>
            <param name="keys"></param>
            <returns>The preferred layout for the current url.</returns>
        </member>
        <member name="T:Weavy.Web.Binders.DirectoryQueryBinder">
            <summary>
            Binds the model to a  <see cref="T:Weavy.Core.Models.DirectoryQuery"/> object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.DirectoryQueryBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="T:Weavy.Web.Binders.RoleQueryBinder">
            <summary>
            Binds the model to a <see cref="T:Weavy.Core.Models.RoleQuery"/> object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.RoleQueryBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="T:Weavy.Web.Binders.SpaceQueryBinder">
            <summary>
            Binds the model to a SpaceQuery object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.SpaceQueryBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="T:Weavy.Web.Binders.UserQueryBinder">
            <summary>
            Binds the model to a UserQuery object.
            </summary>
        </member>
        <member name="M:Weavy.Web.Binders.UserQueryBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            MVC binding
            </summary>
            <param name="controllerContext">The execution context.</param>
            <param name="bindingContext">The binding context.</param>
            <returns>true if model binding is successful; otherwise, false.</returns>
        </member>
        <member name="T:Weavy.Web.Controllers.AccountController">
            <summary>
            Controller for managing user accounts.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.Notify">
            <summary>
            A view that notifies the parent window when a user signs in / signs out.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.SignIn(System.String)">
            <summary>
            Display sign in form.
            </summary>
            <param name="path">The url to redirect to after sign in.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.SignIn(Weavy.Web.Models.SignInModel,System.String)">
            <summary>
            Sign in with forms authentication against AD, custom auth endpoint or local account.
            </summary>
            <param name="model"></param>
            <param name="path">The url to redirect to after sign in.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.SignInHMAC(Weavy.Web.Models.SignInModel)">
            <summary>
            SSO using HMAC token after opening WebDAV url from within Weavy.
            </summary>
            <param name="model"></param>
            <remarks>Signs in the user if the HMAC checks out; otherwise returns the user to the username/password flow.</remarks>
            <returns></returns>        
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.SignInExternal(System.String,System.String)">
            <summary>
            Request a redirect to the external login provider.
            </summary>
            <param name="provider"></param>
            <param name="path">The url to redirect to after sign in.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.SignInExternalCallback(System.String)">
            <summary>
            Callback method when signing in via external login provider.
            </summary>
            <param name="path">The url to redirect to after sign in.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.SignInEmbedded">
            <summary>
            Redirects to this action after provider based sign in from iframe
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.MSOFBA">
            <summary>
            Page to display after successful authentication with MS-OFBA.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.RemoveLogin(System.Int32)">
            <summary>
            Remove a linked account from the current user.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.SignOut(System.String)">
            <summary>
            Sign out, then redirect to sign in screen.
            </summary>
            <param name="path">The url to pass to sign in after signing out.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.RecoverPassword">
            <summary>
            Display form for recovering lost login information.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.RecoverPassword(Weavy.Web.Models.PasswordRecoveryModel)">
            <summary>
            Send password recovery email.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.ResetPassword(System.String)">
            <summary>
            Display form for resetting password.
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.ResetPassword(Weavy.Web.Models.PasswordResetModel)">
            <summary>
            Reset password.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.RegisterWindows">
            <summary>
            Display form for connecting a windows account with a local account.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.CreateUserWithWindowsLogin">
            <summary>
            Create a local account for the current windows user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.AddWindows">
            <summary>
            Display form for adding a windows account to an existing local user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.AddWindows(Weavy.Web.Models.RegisterWindowsModel)">
            <summary>
            Add a windows account to an existing local user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.Settings">
            <summary>
            Display form for editing notification settings for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.UpdateSettings(Weavy.Core.Models.UserSettings)">
            <summary>
            Updates user settings for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.Edit">
            <summary>
            Display form for editing profile of current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.Update">
            <summary>
            Updates user profile for current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.Password">
            <summary>
            Display form for changing password for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.UpdatePassword(Weavy.Web.Models.PasswordModel)">
            <summary>
            Change password for the current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.GetWindowsIdentity">
            <summary>
            Returns the current <see cref="T:System.Security.Principal.WindowsIdentity"/> (and also performs a simple check that throws an exception if there is already a login for the Windows identity).
            </summary>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.GetHMACFromPath(System.String)">
            <summary>
            Returns the HMAC from the query string of the path if the request is for msofba.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.GetSignInViewName(System.String)">
            <summary>   
            Helper method for returning correct sign in view.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AccountController.RedirectToLocal(System.String)">
            <summary>
            Returns a redirect action that redirects to a local url. If the specified url is not local it redirects to the start page.
            </summary>
            <param name="url">The url to redirect to.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.AttachmentController">
            <summary>
            Controller for attachments.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.AttachmentController.Empty">
            <summary>
            Display an empty attachment page.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.AttachmentController.Get(System.Int32)">
            <summary>
            Display an attachment.
            </summary>
            <param name="id">Id of attachment.</param>
        </member>
        <member name="T:Weavy.Web.Controllers.MeetingController">
            <summary>
            Controller for <see cref="T:Weavy.Core.Models.Meeting"/> objects.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.MeetingController.ZoomAuthorization(System.String,System.String)">
            <summary>
            Redirect route from Zoom Oauth2 authentication.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.MeetingController.TeamsAuthorization(System.String,System.String)">
            <summary>
            Redirect route from Teams Oauth2 authentication.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.AppController">
            <summary>
            Controller for <see cref="T:Weavy.Core.Models.App"/> objects.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.Add(System.Int32)">
            <summary>
            Display page for adding app to a space.
            </summary>
            <param name="id">Space id</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.Edit(System.Int32)">
            <summary>
            Edit specified app.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.Get(System.Int32,Weavy.Core.Models.Query)">
            <summary>
             Display start page of the specified app.
            </summary>
            <param name="id">Id of app</param>
            <param name="query">An object with query parameters for search, paging etc.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.New(System.Int32,System.Guid)">
            <summary>
            Display form for adding a new app to a space.
            </summary>
            <param name="id">Id of space.</param>
            <param name="guid">Guid of content to add.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.Insert(System.Int32,System.Guid)">
            <summary>
            Insert app into the specified space.
            </summary>
            <param name="id">Id of space.</param>
            <param name="guid">Guid of app to add.</param>
            <returns></returns>        
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.Trash(System.Int32)">
            <summary>
            Trash the specified app.
            </summary>
            <param name="id"></param>
            <returns></returns>        
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.Restore(System.Int32)">
            <summary>
            Restore the specified app.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.Delete(System.Int32)">
            <summary>
            Permanently delete app.
            </summary>
            <param name="id">Id of content.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.EditName(System.Int32)">
            <summary>
            Get html for rename app modal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.Rename(System.Int32,Weavy.Web.Models.RenameModel)">
            <summary>
            Rename specified app.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.Update(System.Int32)">
            <summary>
            Update specified app.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.Sort(System.Int32,System.Int32[])">
            <summary>
            Sorts apps in the specified space.
            </summary>
            <param name="id">Id of space.</param>
            <param name="appId">Ids of apps for sorting.</param>
            <returns></returns>        
        </member>
        <member name="M:Weavy.Web.Controllers.AppController.Comments(System.Int32)">
            <summary>
            Get comments for the specified app as partial view.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.AppController`1">
            <summary>
            Abstract base class for custom app controllers.
            </summary>
            <typeparam name="TApp"></typeparam>
        </member>
        <member name="M:Weavy.Web.Controllers.AppController`1.Edit(`0)">
            <summary>
            Display edit page for the specified app. This method can be overriden by custom app controllers.
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppController`1.Get(`0,Weavy.Core.Models.Query)">
            <summary>
            Display start page of the specified app. This method can be overriden by custom app controllers.
            </summary>
            <param name="app"></param>
            <param name="query">Query options with parameters for filtering, paging, sorting etc.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppController`1.New(`0)">
            <summary>
            Display form for creating new instance of the specified app. This method can be overriden by custom app controllers.
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.AppsController">
            <summary>
            Controller for managing apps.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.AppsController.Index">
            <summary>
            Display list of available apps.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppsController.Get(System.Guid)">
            <summary>
            Get meta data about an app.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppsController.Delete(System.Guid)">
            <summary>
            Deletes an app from the data store.
            </summary>
            <param name="id">The guid of the <see cref="T:Weavy.Core.Models.Plugin"/> to delete.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppsController.Enable(System.Guid)">
            <summary>
            Enables the specified app.
            </summary>
            <param name="id">Id of the app to enable.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppsController.Disable(System.Guid)">
            <summary>
            Disables the specified app.
            </summary>
            <param name="id">Id of the app to disable.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.AppsController.Update(System.Guid,System.String)">
            <summary>
            Enable/Disable/Delete app.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.ClientScriptController">
            <summary>
            Controller for generating and returning the weavy client script.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.ClientScriptController.Index(Weavy.Web.Models.ClientScriptOptions)">
            <summary>
            Display page for configuring the weavy client script.
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ClientScriptController.Ping">
            <summary>
            Ping view for weavy client script.
            </summary>        
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ClientScriptController.CookieAccess">
            <summary>
            A view that notifies the parent window when a user signs in / signs out.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ClientScriptController.CookieAccessNotify">
            <summary>
            A view that notifies the parent window when a user signs in / signs out.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ClientScriptController.WeavyClientScript(System.String,System.Boolean)">
            <summary>
            Returns the weavy client script.
            </summary>
            <param name="options"></param>
            <param name="download">Trigger file download</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ClientScriptController.WeavyIEScript(System.String,System.Boolean)">
            <summary>
            Returns the supporting IE polyfills script.
            </summary>
            <param name="options"></param>
            <param name="download">Trigger file download</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ClientScriptController.GetClientVersionFile">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ClientScriptController.GetClientLocationFile">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.CommentController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.CommentController.Get(System.Int32)">
            <summary>
            Display a comment (redirects to the parent view).
            </summary>
            <param name="id">Id of comment</param>
        </member>
        <member name="M:Weavy.Web.Controllers.CommentController.Edit(System.Int32)">
            <summary>
            Edit comment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.CommentController.Update(System.Int32,Weavy.Web.Models.CommentUpdateModel)">
            <summary>
            Update a comment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.CommentController.Feedback(System.Int32)">
            <summary>
            Get feedback (likes) for the specified comment as partial view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.CommentController.Likes(System.Int32)">
            <summary>
            Get likes details for the specified comment as partial view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.CommentController.Trash(System.Int32)">
            <summary>
            Trash the specified comment.
            </summary>
            <param name="id"></param>
            <returns></returns>        
        </member>
        <member name="M:Weavy.Web.Controllers.CommentController.Restore(System.Int32)">
            <summary>
            Restore the specified comment.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.ContentController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.Empty">
            <summary>
            Display an empty content page (for preloading content previews).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.Partial(System.Int32,Weavy.Core.Models.Layout)">
            <summary>
            Return partial html for a content item.
            </summary>
            <param name="id"></param>
            <param name="layout"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.Get(System.Int32,Weavy.Core.Models.Query)">
            <summary>
            Display specified content item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.New(System.Int32,System.Guid)">
            <summary>
            Display form for adding a content item.
            </summary>
            <param name="id">Id of parent item.</param>
            <param name="guid">Guid of content to add.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.NewRoot(System.Int32,System.Guid)">
            <summary>
            Display form for adding content to the root of an app.
            </summary>
            <param name="id">Id of app.</param>
            <param name="guid">Guid of content to add.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.Insert(System.Int32,System.Guid,System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Insert a content item as a child of another content item.
            </summary>
            <param name="id">Id of parent item.</param>
            <param name="guid">Guid of content type to add.</param>
            <param name="operation"></param>
            <param name="blobs"></param>
            <returns></returns>        
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.InsertRoot(System.Int32,System.Guid,System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Insert content into the root of the specified app.
            </summary>
            <param name="id">Id of app.</param>
            <param name="guid">Guid of content to add.</param>
            <param name="operation"></param>
            <param name="blobs"></param>
            <returns></returns>        
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.InsertFile(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Insert an empty file with the specified name.
            </summary>
            <param name="appid">Id of the app.</param>
            <param name="parentid">Id of parent content.</param>
            <param name="name">The name of the file (without file extension).</param>
            <param name="ext">The extension of the file, e.g. .docx</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.Drafts">
            <summary>
            Return partial view for displaying drafts in user drawer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.MoveModal(System.Int32)">
            <summary>
            Get partial for move content modal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.Move(System.Int32,Weavy.Web.Models.MoveContentModel)">
            <summary>
            Move content.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.Trash(System.Int32)">
            <summary>
            Trash the specified content, i.e. sets the IsTrashed flag.
            </summary>
            <param name="id"></param>
            <returns></returns>        
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.Restore(System.Int32)">
            <summary>
            Restore the specified content item i.e. clears the IsTrashed flag.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.Delete(System.Int32)">
            <summary>
            Permanently delete content item.
            </summary>
            <param name="id">Id of content.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.DeleteVersion(System.Int32,System.Int64)">
            <summary>
            Permanently delete a content version.
            </summary>
            <param name="id">Id of content item.</param>
            <param name="version">The version (timestamp) to delete.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.GetVersion(System.Int32,System.Int64)">
            <summary>
            Display a specific version of a content item.
            </summary>
            <param name="id">The id of the <see cref="T:Weavy.Core.Models.Content"/> item.</param>
            <param name="version">The version (timestamp) of the version to show.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.Revert(System.Int32,System.Int64)">
            <summary>
            Revert to previous version of content item.
            </summary>
            <param name="id">Id of the <see cref="T:Weavy.Core.Models.Content"/> to revert.</param>
            <param name="version">Timestamp of the version to revert to.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.Rename(System.Int32,Weavy.Web.Models.RenameModel)">
            <summary>
            Rename specified content item.
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns>The renamed content item.</returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.Details(System.Int32)">
            <summary>
            Get partial for content details modal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.Edit(System.Int32,System.Boolean)">
            <summary>
            Edit specified item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.Update(System.Int32,System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Update specified content item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.Comments(System.Int32)">
            <summary>
            Get comments for the specified content item as partial view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.Subscribers(System.Int32)">
            <summary>
            Get subscribers, i.e. people that follow the content and will get notified on changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.Followers(System.Int32)">
            <summary>
            Get followers for the specified content as a partial view.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.Attachments(System.Int32)">
            <summary>
            Gets attachments for an IHasAttachment as a partial view.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.PartialBlobs(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Returns partial html for the specified blobs.
            </summary>
            <param name="ids">Ids of blobs.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController.Blob(System.Int32)">
            <summary>
            Returns partial html for the specified blob.
            </summary>
            <param name="id">Id of the blobs.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.ContentController`1">
            <summary>
            Abstract base class for custom content controllers.
            </summary>
            <typeparam name="TContent"></typeparam>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController`1.Edit(`0)">
            <summary>
            Display edit page for the specified content item. This method can be overriden by custom controllers.
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController`1.Get(`0,Weavy.Core.Models.Query)">
            <summary>
            Display specified content item. This method can be overriden by custom controllers.
            </summary>
            <param name="content"></param>
            <param name="query">Query options with parameters for filtering, paging, sorting etc.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentController`1.New(`0)">
            <summary>
            Display page for adding new content item. This method can be overriden by custom controllers.
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.ContentTypesController">
            <summary>
            Controller for managing content types.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentTypesController.Index">
            <summary>
            Display list of available content types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentTypesController.Get(System.Guid)">
            <summary>
            Get meta data about a content type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentTypesController.Delete(System.Guid)">
            <summary>
            Deletes an item from the data store.
            </summary>
            <param name="id">The guid of the <see cref="T:Weavy.Core.Models.Plugin"/> to delete.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentTypesController.Enable(System.Guid)">
            <summary>
            Enables the specified content item.
            </summary>
            <param name="id">Id of the item to enable.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentTypesController.Disable(System.Guid)">
            <summary>
            Disables the specified content item.
            </summary>
            <param name="id">Id of the app to disable.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ContentTypesController.Update(System.Guid,System.String)">
            <summary>
            Enable/Disable/Delete content type.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.DaemonsController">
            <summary>
            Controller for managing daemons.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.DaemonsController.Index">
            <summary>
            Display list of daemons.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.DaemonsController.Get(System.Guid)">
            <summary>
            Get daemon.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.DaemonsController.Update(System.Guid,System.String)">
            <summary>
            Updates a daemon.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.DaemonsController.Run(System.Guid)">
            <summary>
            Runs a daemon.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.DaemonsController.Delete(System.Guid)">
            <summary>
            Deletes a daemon <see cref="T:Weavy.Core.Models.Plugin"/> from the data store.
            </summary>
            <param name="id">The guid of the <see cref="T:Weavy.Core.Models.Plugin"/> to delete.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.EmbedController">
            <summary>
            Controller for embeds.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.EmbedController.Insert(Weavy.Web.Api.Models.EmbedIn)">
            <summary>
            
            </summary>
            <param name="embed"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.EmbedController.Get(System.Int32)">
            <summary>
            Get an existing embed partial view
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.ErrorController">
            <summary>
            Controller for handling application errors.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.ErrorController.Index">
            <summary>
            Display generic error page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ErrorController.HttpError(System.Int32)">
            <summary>
            Custom IIS error page (system.webServer/httpErrors in web.config is configured to redirect IIS errors here).
            </summary>
            <param name="code">HTTP status code</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ErrorController.Error(Weavy.Web.Models.ErrorModel)">
            <summary>
            "Internal" action called by <see cref="M:Weavy.Web.Controllers.ErrorController.Index"/>, <see cref="M:Weavy.Web.Controllers.ErrorController.HttpError(System.Int32)"/> and the <see cref="T:Weavy.Web.Filters.HandleExceptionFilter"/>.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.ExternalLinkController">
            <summary>
            Controller for serving external links.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.ExternalLinkController.GetLink(System.Guid)">
            <summary>
            Serves the entity referenced by the external link.
            </summary>
            <param name="id">Id of external link.</param>
        </member>
        <member name="M:Weavy.Web.Controllers.ExternalLinkController.RevokeLink(System.Guid)">
            <summary>
            Revoke the specified external link.
            </summary>
            <param name="id">Id of link to revoke.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ExternalLinkController.ViewLink(System.Int32)">
            <summary>
            Display modal with external link to the specified file.
            </summary>
            <param name="id">Id of file.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ExternalLinkController.GetExternalContent(System.Guid,System.String,System.String)">
            <summary>
            Writes the binary data of the specified file to the output.
            </summary>
            <param name="id">Id of external link.</param>
            <param name="name">Filename without extension.</param>
            <param name="ext">Extension of desired output format.</param>
        </member>
        <member name="T:Weavy.Web.Controllers.ClientController">
            <summary>
            Controller for managing clients.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.ClientController.Index(Weavy.Core.Models.UserQuery,System.String)">
            <summary>
            Display list of all clients.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ClientController.New">
            <summary>
            Returns a form for creating client/user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ClientController.Insert(Weavy.Web.Models.ClientViewModel)">
            <summary>
            Inserts a new client/user.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ClientController.Get(System.Int32)">
            <summary>
            Return the edit view for the client/user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ClientController.Update(System.Int32)">
            <summary>
            Updates a client/user.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ClientController.Enable(System.Int32)">
            <summary>
            Enables the client/user.
            </summary>
            <param name="id">The id of the client to enable.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ClientController.Disable(System.Int32)">
            <summary>
            Disables the client/user.
            </summary>
            <param name="id">The id of the client to disable.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ClientController.Trash(System.Int32)">
            <summary>
            Trashes the client/user.
            </summary>
            <param name="id">The id of the client to trash.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ClientController.Restore(System.Int32)">
            <summary>
            Restores the trashed client/user.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ClientController.GetClient(System.Int32)">
            <summary>
            Returns a user or throws response exception if it does not exist.
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:Weavy.Web.Controllers.ResourceController">
            <summary>
            Controller for serving resources such as dynamically generated stylesheets etc.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.ResourceController.Manifest">
            <summary>
            Writes the Web App Manifest file, see https://www.w3.org/TR/appmanifest/.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.ResourceController.TinyMceSkin(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.HomeController">
            <summary>
            Home controller.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.HomeController.Index">
            <summary>
            Display start page.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.HomeController.Search(System.String,Weavy.Core.Models.Query)">
            <summary>
            Display search page.
            </summary>
        </member>
        <member name="T:Weavy.Web.Controllers.HooksController">
            <summary>
            Controller for managing hooks.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.HooksController.Index">
            <summary>
            Display list of hooks. Only shows hooks that are not part of core.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.HooksController.Get(System.Guid)">
            <summary>
            Get hook.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.HooksController.Delete(System.Guid)">
            <summary>
            Deletes a hook <see cref="T:Weavy.Core.Models.Plugin"/> from the data store.
            </summary>
            <param name="id">The guid of the <see cref="T:Weavy.Core.Models.Plugin"/> to delete.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.HooksController.Update(System.Guid,System.String)">
            <summary>
            Updates hook
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.HooksController.Enable(System.Guid)">
            <summary>
            Enables the specified hook.
            </summary>
            <param name="id">Id of the hook to enable.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.HooksController.Disable(System.Guid)">
            <summary>
            Disables the specified hook.
            </summary>
            <param name="id">Id of the hook to disable.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.LogsController">
            <summary>
            Controller for viewing logfiles.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.LogsController.Index">
            <summary>
            Display list of logfiles.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.LogsController.Get(System.String,System.Nullable{System.Boolean})">
            <summary>
            Display content of logfile
            </summary>
            <param name="name"></param>
            <param name="download"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.LogsController.Delete(System.Int32)">
            <summary>
            Delete log file.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.ManageController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.ManageController.Index">
            <summary>
            Display manage dashboard.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ManageController.About">
            <summary>
            Manage license
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ManageController.License">
            <summary>
            Manage license
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ManageController.License(Weavy.Web.Models.LicenseModel)">
            <summary>
            Manage license
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ManageController.Routes(System.String)">
            <summary>
            Display list of registered routes (for debugging purposes).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ManageController.Statistics">
            <summary>
            View current usage statistics.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ManageController.Theme">
            <summary>
            Edit theme settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ManageController.UpdateTheme(Weavy.Core.Models.Theme)">
            <summary>
            Update theme settings.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.ConversationController">
            <summary>
            Controller for conversations.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.ConversationController.Get(System.Int32)">
            <summary>
            Display a conversation (redirects to messenger).
            </summary>
            <param name="id">Id of conversation</param>
        </member>
        <member name="T:Weavy.Web.Controllers.MessageController">
            <summary>
            Controller for messages.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.MessageController.Get(System.Int32)">
            <summary>
            Display a message (redirects to parent object).
            </summary>
            <param name="id">Id of message</param>
        </member>
        <member name="T:Weavy.Web.Controllers.NotificationController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.NotificationController.Index">
            <summary>
            Return partial view for displaying notifications in ther user drawer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.NotificationController.Get(System.Int32)">
            <summary>
            Get notification with specified id.
            </summary>
            <param name="id">Id of notification</param>
        </member>
        <member name="M:Weavy.Web.Controllers.NotificationController.Preview(System.Int32)">
            <summary>
            Display a way to interact with the notification.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.NotificationController.ReadAll">
            <summary>
            Marks all notifications as read.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.PeopleController">
            <summary>
            Controller for People.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.Get(System.Int32)">
            <summary>
            Display the profile of the specified user.
            </summary>
            <param name="id">Id of the user to display.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.Index(Weavy.Core.Models.UserQuery,System.String)">
            <summary>
            Display list of users.
            </summary>
            <param name="query"></param>
            <param name="tab"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.New">
            <summary>
            Display form for creating user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.Insert(Weavy.Web.Models.CreateUserModel)">
            <summary>
            Insert new user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.Edit(System.Int32)">
            <summary>
            Display form for editing user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.Update(System.Int32)">
            <summary>
            Update user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.Settings(System.Int32)">
            <summary>
            Display form for editing the user settings for a user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.UpdateSettings(System.Int32,Weavy.Core.Models.UserSettings)">
            <summary>
            Updates settings for a user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.Trash(System.Int32)">
            <summary>
            Trashes the user i.e. sets the IsTrashed flag.
            </summary>
            <param name="id"></param>
            <returns></returns>        
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.Restore(System.Int32)">
            <summary>
            Restores the user i.e. clears the IsTrashed flag.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.Delete(System.Int32)">
            <summary>
            Permanently deletes a user account from the repository.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PeopleController.Welcome(System.Int32,System.String)">
            <summary>
            Send welcome email with username and password.
            </summary>
            <param name="id"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.PostController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.Get(System.Int32)">
            <summary>
            Display details for the specified post.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.Insert(System.Int32,Weavy.Web.Models.PostInsertModel)">
            <summary>
            Insert a post into the specified app.
            </summary>
            <param name="id">App id</param>
            <param name="post">The post to insert.</param>
            <returns>The inserted post.</returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.Pin(System.Int32)">
            <summary>
            Pin a post.
            </summary>
            <param name="id">Post id.</param>
            <returns>Redirects to the space.</returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.Unpin(System.Int32)">
            <summary>
            Unpin a post.
            </summary>
            <param name="id">Post id.</param>
            <returns>Redirects to the space.</returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.MoveModal(System.Int32)">
            <summary>
            Get partial for move post modal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.Move(System.Int32,Weavy.Web.Models.PostMoveModel)">
            <summary>
            Move post.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.EditModal(System.Int32)">
            <summary>
            Get partial for edit post modal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.Update(System.Int32,Weavy.Web.Models.PostUpdateModel)">
            <summary>
            Update a post.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.Feedback(System.Int32)">
            <summary>
            Get feedback (likes, comments) for the specified post as partial view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.Likes(System.Int32)">
            <summary>
            Get likes details for the specified post as partial view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.Votes(System.Int32,System.Int32)">
            <summary>
            Get votes details for the specified post and option as partial view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.Comments(System.Int32)">
            <summary>
            Get comments for the specified post as partial view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.PartialMeeting(System.String,System.String)">
            <summary>
            Returns partial html for the specified meeting.
            </summary>
            <param name="provider">A string defining the video provider.</param>
            <param name="guid">The unique guid of the meeting.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.PostController.Poll(System.Int32,System.Int32)">
            <summary>
            Vote on a poll.
            </summary>
            <param name="id"></param>
            <param name="optionid"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.RecycleBinController">
            <summary>
            Controller for the recycle-bin.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.RecycleBinController.Index">
            <summary>
            Display items trashed by current user.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.DirectoriesController">
            <summary>
            Controller for managing user directories.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.DirectoriesController.Index(Weavy.Core.Models.DirectoryQuery)">
            <summary>
            List directories.
            </summary>
            <returns>A list of roles.</returns>
        </member>
        <member name="M:Weavy.Web.Controllers.DirectoriesController.People(System.Int32,Weavy.Core.Models.UserQuery)">
            <summary>
            Display the list of people in a directory.
            </summary>
            <param name="id">Id of the directory.</param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.DirectoriesController.Get(System.Int32)">
            <summary>
            Display form for updating directory.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.DirectoriesController.New">
            <summary>
            Display form for creating directory.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.DirectoriesController.Insert(Weavy.Core.Models.Directory)">
            <summary>
            Insert new directory.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.DirectoriesController.Update(System.Int32,System.String)">
            <summary>
            Update directory.
            </summary>
            <param name="id"></param>
            <param name="button"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.DirectoriesController.Delete(System.Int32)">
            <summary>
            Permanently delete the directory.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.DirectoriesController.GetDirectory(System.Int32)">
            <summary>
            Helper method for getting a directory. Throws a HTTP 404 exception if the directory cannot be found.
            </summary>
            <param name="id">Id of directory to get.</param>
            <returns>A directory</returns>
        </member>
        <member name="T:Weavy.Web.Controllers.RolesController">
            <summary>
            Controller for managing roles.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.RolesController.Index(Weavy.Core.Models.RoleQuery)">
            <summary>
            List roles.
            </summary>
            <returns>A list of roles.</returns>
        </member>
        <member name="M:Weavy.Web.Controllers.RolesController.Get(System.Int32,Weavy.Core.Models.UserQuery)">
            <summary>
            Display the list of people in a role.
            </summary>
            <param name="id">Id of the role.</param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.RolesController.GetByName(System.String)">
            <summary>
            Display the list of people in a role.
            </summary>
            <param name="name">Name of the role.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.RolesController.Edit(System.Int32)">
            <summary>
            Display form for updating role.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.RolesController.New">
            <summary>
            Display form for creating role.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.RolesController.Insert(Weavy.Core.Models.Role)">
            <summary>
            Insert new role.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.RolesController.Update(System.Int32,System.String)">
            <summary>
            Update role.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.RolesController.Trash(System.Int32)">
            <summary>
            Trashes the role i.e. sets the IsTrashed flag.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.RolesController.Restore(System.Int32)">
            <summary>
            Restores the role i.e. clears the IsTrashed flag.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.RolesController.Delete(System.Int32)">
            <summary>
            Permanently delete the role.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.RolesController.AddMembers(System.Int32,System.Collections.Generic.List{Weavy.Core.Models.Entity{Weavy.Core.Models.User}})">
            <summary>
            Add role members.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.RolesController.RemoveMember(System.Int32,System.Nullable{System.Int32})">
            <summary>
            Removes a role member.
            </summary>
            <param name="id"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.RolesController.GetRole(System.Int32,System.Boolean)">
            <summary>
            Helper method for getting a role. Throws a HTTP 404 exception if the role cannot be found.
            </summary>
            <param name="id">Id of role to get.</param>
            <param name="filter"></param>
            <returns>A role</returns>
        </member>
        <member name="T:Weavy.Web.Controllers.SettingsController">
            <summary>
            Controller for managing settings.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.SettingsController.Index">
            <summary>
            Display list of settings objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SettingsController.Get(System.Guid)">
            <summary>
            Display form for editing settings.
            </summary>
            <param name="id">Id of plugin.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SettingsController.Update(System.Guid,System.String)">
            <summary>
            Updates settings.
            </summary>
            <param name="id"></param>
            <param name="tab">The tab that was active when the form was submitted.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SettingsController.Delete(System.Guid)">
            <summary>
            Deletes specified settings plugin from the data store.
            </summary>
            <param name="id">The guid of the <see cref="T:Weavy.Core.Models.Plugin"/> to delete.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.SetupController">
            <summary>
            Controller for the setup wizard.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.SetupController.Index">
            <summary>
            Display setup wizard.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SetupController.License">
            <summary>
            Display form to register/update license.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SetupController.License(Weavy.Web.Models.LicenseModel)">
            <summary>
            Try to register the supplied license.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SetupController.Account">
            <summary>
            Display form for creating first user account.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SetupController.Account(Weavy.Web.Models.SetupAccountModel)">
            <summary>
            Persist and authenticate the new or updated account.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SetupController.Configure(Weavy.Web.Models.ConfigurationModel)">
            <summary>
            Endpoint used by Weavy Management Portal to configure a new installation.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SetupController.ApplyConfiguration(Weavy.Web.Models.ConfigurationModel)">
            <summary>
            Apply the specified configuration settings.
            </summary>
            <returns>The admin user.</returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SetupController.GetConfig">
            <summary>
            Helper for getting setup wizard config settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SetupController.SetConfig(Weavy.Web.Models.ConfigurationModel)">
            <summary>
            Helper for setting setup wizard config settings.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.ShareController">
            <summary>
            Controller for sharing entities with people
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.ShareController.Insert(Weavy.Web.Models.ShareIn)">
            <summary>
            Insert a new share
            </summary>
            <param name="share"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.SpaceController">
            <summary>
            Controller for managing spaces.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Join(System.Int32)">
            <summary>
            Current user joins a space.
            </summary>
            <param name="id">The id of the space.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Leave(System.Int32)">
            <summary>
            Current user leaves a space.
            </summary>
            <param name="id">The id of the <see cref="T:Weavy.Core.Models.Space"/> to leave.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Follow(System.Int32)">
            <summary>
            Follow a <see cref="T:Weavy.Core.Models.Space"/>.
            </summary>
            <param name="id">The id of the <see cref="T:Weavy.Core.Models.Space"/> to follow.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Unfollow(System.Int32)">
            <summary>
            Unfollow an <see cref="T:Weavy.Core.Models.Space"/>.
            </summary>
            <param name="id">The id of the <see cref="T:Weavy.Core.Models.Space"/> to unfollow.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Archive(System.Int32)">
            <summary>
            Archive a space.
            </summary>
            <param name="id">Id of the <see cref="T:Weavy.Core.Models.Space"/> to archive.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Unarchive(System.Int32)">
            <summary>
            Restores a <see cref="T:Weavy.Core.Models.Space"/> from the archive.
            </summary>
            <param name="id">Id of the <see cref="T:Weavy.Core.Models.Space"/> to restore.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Star(System.Int32)">
            <summary>
            Star a space.
            </summary>
            <param name="id">Id of the <see cref="T:Weavy.Core.Models.Space"/> to star.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Unstar(System.Int32)">
            <summary>
            Unstar a <see cref="T:Weavy.Core.Models.Space"/>.
            </summary>
            <param name="id">Id of the <see cref="T:Weavy.Core.Models.Space"/> to unstar.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Trash(System.Int32)">
            <summary>
            Trash a space.
            </summary>
            <param name="id">The id of the <see cref="T:Weavy.Core.Models.Space"/> to trash.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Restore(System.Int32)">
            <summary>
            Restores a <see cref="T:Weavy.Core.Models.Space"/>.
            </summary>
            <param name="id">The id of the <see cref="T:Weavy.Core.Models.Space"/> to restore.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Edit(System.Int32)">
            <summary>
            Display form for editing a space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Members(System.Int32,Weavy.Core.Models.Query)">
            <summary>
            Display the list of members in the space.
            </summary>
            <param name="id">Space id</param>
            <param name="query">Query for paging etc.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.RecycleBin(System.Int32,Weavy.Core.Models.Query)">
            <summary>
            Display trashed items in the space.
            </summary>
            <param name="id">Space id</param>
            <param name="query">Query for paging etc.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.MembersModalContent(Weavy.Core.Models.UserQuery,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Returns partial html for the add members form
            </summary>
            <param name="query"></param>
            <param name="users">Id of users that are already selected</param>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.InsertMembers(System.Int32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Add member(s) to the space.
            </summary>
            <param name="id"></param>
            <param name="users"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.UpdateMember(System.Int32,System.Int32,Weavy.Core.Models.Access)">
            <summary>
            Updates the permission of the specified member.
            </summary>
            <param name="id"></param>
            <param name="userid"></param>
            <param name="access"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Admin(System.Int32)">
            <summary>
            Make the current user admin in the space.
            </summary>
            <param name="id">The id of the space.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Get(System.Int32,Weavy.Core.Models.Query)">
            <summary>
            Display home page of the specified space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.RemoveMember(System.Int32,System.Int32)">
            <summary>
            Remove member from space
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Delete(System.Int32)">
            <summary>
            Permanently delete the space.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Index(Weavy.Core.Models.SpaceQuery,System.String)">
            <summary>
            Display list of spaces.
            </summary>
            <param name="query"></param>
            <param name="tab"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.New">
            <summary>
            Display form for creating a new space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Insert(Weavy.Core.Models.Space)">
            <summary>
            Create a new space.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.SpaceController.Update(System.Int32,System.String)">
            <summary>
            Update a space.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.StarController">
            <summary>
            Controller for starred items.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.StarController.Get(Weavy.Core.Models.EntityType,System.Int32)">
            <summary>
            Gets the starred entity as a partial view.
            </summary>
            <param name="type">The entity type.</param>
            <param name="id">The id of the entity.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.StarController.Index">
            <summary>
            Return partial views for displaying starred items in user drawer.
            </summary>
        </member>
        <member name="T:Weavy.Web.Controllers.StartController">
            <summary>
            Controller for first setup steps.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.StartController.Index">
            <summary>
            Display form for editing profile info.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.StartController.UpdateProfile">
            <summary>
            Set profile info.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.StartController.Settings">
            <summary>
            Display form for editing user settings, e.g. notification preferences.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.StartController.UpdateSettings(Weavy.Core.Models.UserSettings)">
            <summary>
            Update user settings.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.TestController">
            <summary>
            Controller for testing various things.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.TestController.Index">
            <summary>
            Display test page with ui components.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.TestController.Get(System.String)">
            <summary>
            Generic test action that serves corresponding view on disk.
            </summary>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.TestController.Post(Weavy.Web.Models.TestViewModel)">
            <summary>
            Test form post.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.TestController.GetRedirect(System.String)">
            <summary>
            Test redirect from GET request.
            </summary>
            <param name="fragment"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.TestController.PostRedirect">
            <summary>
            Test redirect from POST.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.TestController.Throw">
            <summary>
            Test for unhandled exceptions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.TestController.Status(System.Int32)">
            <summary>
            Test of different status codes.
            </summary>
            <param name="code">http status code</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.TestController.Developers">
            <summary>
            Test role based auth.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.TestController.Linus">
            <summary>
            Test user auth.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.TestController.Email">
            <summary>
            Display example email with a couple of different modules.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.TestController.ConversationEmail(System.Nullable{System.Int32})">
            <summary>
            Display conversation email.
            </summary>
            <param name="top"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.TestController.DailyDigestEmail(System.Nullable{System.Int32})">
            <summary>
            Display daily digest email.
            </summary>
            <param name="top"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.TestController.NotificationEmail">
            <summary>
            Display notification email.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.TestController.PasswordResetEmail">
            <summary>
            Display password reset email.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.TestController.WelcomeEmail">
            <summary>
            Display welcome email.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.TestController.TestEmail">
            <summary>
            Display test email.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.ToolsController">
            <summary>
            Controller for managing tools.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.ToolsController.Index">
            <summary>
            Display list of tools.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ToolsController.Get(System.Guid)">
            <summary>
            Get tool.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ToolsController.Run(System.Guid,System.String)">
            <summary>
            Executes a function.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.ToolsController.Delete(System.Guid)">
            <summary>
            Deletes a daemon <see cref="T:Weavy.Core.Models.Plugin"/> from the data store.
            </summary>
            <param name="id">The guid of the <see cref="T:Weavy.Core.Models.Plugin"/> to delete.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.UIController">
            <summary>
            Controller for misc ui components.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.UIController.InsertLink(Weavy.Core.Models.Query,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{System.Int32},System.String)">
            <summary>
            Search with the given query options.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.UIController.InsertImage(System.Nullable{System.Int32},System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            Insert/Edit image dialog for our rich text editor.
            </summary>
            <param name="id"></param>
            <param name="src"></param>
            <param name="href"></param>
            <param name="alt"></param>
            <param name="blobs"></param>
            <param name="img"></param>
            <param name="md"></param>
        </member>
        <member name="M:Weavy.Web.Controllers.UIController.CronDescription(System.String)">
            <summary>
            Converts cron syntax into a human readable string.
            </summary>
            <param name="expression">The expression to convert.</param>
            <returns>A readable description of the expression.</returns>
        </member>
        <member name="M:Weavy.Web.Controllers.UIController.DismissMessage(System.String)">
            <summary>
            Dismiss message for the current user.
            </summary>
            <param name="key">The key of the message to clear.</param>
        </member>
        <member name="M:Weavy.Web.Controllers.UIController.RemoveMessage(System.String)">
            <summary>
            Removes a message for the current user.
            </summary>
            <param name="key">The key of the message to remove.</param>
        </member>
        <member name="M:Weavy.Web.Controllers.UIController.MoveContentOptions(System.Int32,System.Int32)">
            <summary>
            Gets html markup for options in select list for moving a content item to a new parent.
            </summary>
            <param name="id">Id of content to move</param>
            <param name="appid">Id of app for which to list content hierarchy.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.UIController.AttachContentOptions(System.Int32,System.Guid)">
            <summary>
            Gets html markup for options in select list for inserting/attaching content to a parent item.
            </summary>
            <param name="id">Id of the app for which to list content hierarchy.</param>
            <param name="guid"><see cref="T:System.Guid"/> of content type to insert/attach.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Controllers.WeavyController">
            <summary>
            Abstract base class for controllers.
            </summary>
        </member>
        <member name="F:Weavy.Web.Controllers.WeavyController.PageSizes">
            <summary>
            Page sizes for paging and infinite scroll.
            </summary>
        </member>
        <member name="P:Weavy.Web.Controllers.WeavyController.User">
            <summary>
            Gets the user security information for the current HTTP request.
            </summary>
        </member>
        <member name="P:Weavy.Web.Controllers.WeavyController.OwinContext">
            <summary>
            Get the current Owin context.
            </summary>
        </member>
        <member name="P:Weavy.Web.Controllers.WeavyController.IsEmbedded">
            <summary>
             Gets a value indicating whether the request is for an embedded action/view.
            </summary>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.Alert(Weavy.Web.Models.AlertModel)">
            <summary>
            Injects an alert message to be displayed on next page load.
            </summary>
            <param name="alert">The alert to display,</param>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.Alert(System.String)">
            <summary>
            Injects an success message to be displayed on next page load.
            </summary>
            <param name="message">The message to display</param>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.Alert(Weavy.Core.Models.AlertType,System.String)">
            <summary>
            Injects an alert message to be displayed on next page load.
            </summary>
            <param name="type">The type of alert to display, i.e. info, success, warning or danger.</param>
            <param name="message">The message to display</param>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.Alert(Weavy.Core.Models.AlertType,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Injects an alert message to be displayed on next page load.
            </summary>
            <param name="type">The type of alert to display, i.e. info, success, warning or danger.</param>
            <param name="message">The message to display</param>
            <param name="dismissible"></param>
            <param name="sticky"></param>
            <param name="html"></param>
            <param name="inline"></param>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.Alert(System.Web.Mvc.ModelStateDictionary)">
            <summary>
            Injects an validation alert to be displayed on next page load.
            </summary>
            <param name="modelState">If not <c>null</c>, a validation summary will be displayed in the alert.</param>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.Script(System.String)">
            <summary>
            Injects a script to be executed on next page load.
            </summary>
            <param name="script"></param>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.Json(System.Object)">
            <summary>
            Creates a JsonResult object that serializes the specified object to JavaScript Object Notation (JSON).
            </summary>
            <param name="data">The JavaScript object graph to serialize.</param>
            <returns>The JSON result object that serializes the specified object to JSON format.</returns>
            <remarks>The data in the data parameter must be serializable. The JsonConvert class is used to serialize the object. The result object that is prepared by this method is written to the response by the ASP.NET MVC framework when the object is executed.</remarks>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)">
            <summary>
            Creates a JsonResult object that serializes the specified object to JavaScript Object Notation (JSON) format using the specified JSON request behavior.
            </summary>
            <param name="data">The JavaScript object graph to serialize.</param>
            <param name="behavior">The JSON request behavior.</param>
            <remarks>The data in the data parameter must be serializable. The JsonConvert class is used to serialize the object. The result object that is prepared by this method is written to the response by the ASP.NET MVC framework when the object is executed.</remarks>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.ThrowResponseException(System.Net.HttpStatusCode,System.String)">
            <summary>
            Throws a HttpException with the specified code and message.
            </summary>
            <param name="code">The status code of the response.</param>
            <param name="message">An optional error message.</param>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.View(Weavy.Core.Models.App)">
            <summary>
             Creates a <see cref="T:System.Web.Mvc.ViewResult"/> object that renders a view, by using the specified model.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.View(System.String,Weavy.Core.Models.App)">
            <summary>
             Creates a <see cref="T:System.Web.Mvc.ViewResult"/> object that renders a view, by using the specified model.
            </summary>
            <param name="viewName">The view that is rendered to the response.</param>
            <param name="model">The content item to render.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.PartialView(Weavy.Core.Models.App)">
            <summary>
             Creates a <see cref="T:System.Web.Mvc.ViewResult"/> object that renders a view, by using the specified model.
            </summary>
            <param name="model">The content item to render.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.PartialView(System.String,Weavy.Core.Models.App)">
            <summary>
             Creates a <see cref="T:System.Web.Mvc.PartialViewResult"/> object that renders a view, by using the specified model.
            </summary>
            <param name="viewName">The view that is rendered to the response.</param>
            <param name="model">The content item to render.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.View(Weavy.Core.Models.Content)">
            <summary>
             Creates a <see cref="T:System.Web.Mvc.ViewResult"/> object that renders a view, by using the specified model.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.View(System.String,Weavy.Core.Models.Content)">
            <summary>
             Creates a <see cref="T:System.Web.Mvc.ViewResult"/> object that renders a view, by using the specified model.
            </summary>
            <param name="viewName">The view that is rendered to the response.</param>
            <param name="model">The content item to render.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.PartialView(Weavy.Core.Models.Content)">
            <summary>
             Creates a <see cref="T:System.Web.Mvc.ViewResult"/> object that renders a view, by using the specified model.
            </summary>
            <param name="model">The content item to render.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.PartialView(System.String,Weavy.Core.Models.Content)">
            <summary>
             Creates a <see cref="T:System.Web.Mvc.PartialViewResult"/> object that renders a view, by using the specified model.
            </summary>
            <param name="viewName">The view that is rendered to the response.</param>
            <param name="model">The content item to render.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.PartialView(Weavy.Core.Models.ContentSearchResult{Weavy.Core.Models.Content})">
            <summary>
            Renders a partial view for the specified content search result.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.RedirectToAction``1(System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Helper method for generating a redirect to route result.
            </summary>
            <typeparam name="TController"></typeparam>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.RedirectToReferrer(System.String)">
            <summary>
            Creates a <see cref="T:System.Web.Mvc.RedirectResult"/> that redirects to the url referrer of the request.
            </summary>
            <param name="fallback">If referrer is null or not local to the applciation, redirect to this url instead.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.GetSpace(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Helper method for getting a space (and setting it in <see cref="P:Weavy.Core.WeavyContext.Space"/>). Throws a HTTP 404 exception if the space cannot be found.
            </summary>
            <param name="id">Id of space to get.</param>
            <param name="sudo"><c>true</c> to perform action as super user, otherwise <c>false</c>.</param>
            <param name="trashed"><c>true</c> to return space even if trashed, otherwise <c>false</c>.</param>
            <returns>A space</returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.GetApp(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Helper method for getting an app (and setting it in <see cref="P:Weavy.Core.WeavyContext.App"/>). Throws a HTTP 404 exception if the app cannot be found.
            </summary>
            <param name="id">Id of app to get.</param>
            <param name="sudo"><c>true</c> to perform action as super user, otherwise <c>false</c>.</param>
            <param name="trashed"><c>true</c> to return space even if trashed, otherwise <c>false</c>.</param>
            <returns>A space</returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.GetContent(System.Int32,System.Nullable{System.Int64},System.Boolean,System.Boolean)">
            <summary>
            Helper method for getting a content item (and setting it in <see cref="P:Weavy.Core.WeavyContext.Content"/>). Throws a HTTP 404 exception if the content cannot be found.
            </summary>
            <param name="id">Id of content to get.</param>
            <param name="timestamp"></param>
            <param name="sudo"><c>true</c> to perform action as super user, otherwise <c>false</c>.</param>
            <param name="trashed"><c>true</c> to return space even if trashed, otherwise <c>false</c>.</param>
            <returns>An item</returns>
        </member>
        <member name="M:Weavy.Web.Controllers.WeavyController.Transmit(System.IO.FileInfo,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
             Writes the specified file to the HTTP response output stream, without buffering it in memory.
            </summary>
            <param name="file">The file to transmit</param>
            <param name="maxAge">Number of seconds that client can reuse cached file without validating Etag and/or Last-Modified, or <c>null</c> to prevent client from reusing a cached file without first validating it with the server.</param>
            <param name="etag">Value to set in the ETag header and to compare with If-None-Match header. When not set, a value will be calculated based on name, size and last write time of the <paramref name="file"/>.</param>
            <param name="lastModified">Time to compare with If-Modified-Since header and to set in the Last-Modified header. When not set, last write time of the <paramref name="file"/> will be used.</param>
            <param name="contentType">Value to set in the Content-Type header. When not set, content type will be inferred from the file name.</param>
            <param name="downloadName">Name to use in Content-Disposition header when downloading the file.</param>
        </member>
        <member name="T:Weavy.Web.Localization.LocalizedModelMetaDataProvider">
            <summary>
            A localization aware model metadata provider for ASP.NET MVC.
            </summary>
        </member>
        <member name="M:Weavy.Web.Localization.LocalizedModelMetaDataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
            <summary>
             Gets the metadata for the specified property.
            </summary>
            <param name="attributes"></param>
            <param name="containerType"></param>
            <param name="modelAccessor"></param>
            <param name="modelType"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Models.ClientViewModel">
            <summary>
            An model class for editing clients.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ClientViewModel.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ClientViewModel.#ctor(Weavy.Core.Models.User)">
            <summary>
            Constuctor that populates properties from a <see cref="T:Weavy.Core.Models.User"/> object.
            </summary>
            <param name="user"></param>        
        </member>
        <member name="M:Weavy.Web.Models.ClientViewModel.#ctor(Weavy.Core.Models.User,System.String)">
            <summary>
            Constuctor that populates properties from a <see cref="T:Weavy.Core.Models.User"/> object and a client secret.
            </summary>
            <param name="user"></param>
            <param name="clientSecret"></param>
        </member>
        <member name="P:Weavy.Web.Models.ClientViewModel.Id">
            <summary>
             Gets the client id.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ClientViewModel.DisplayName">
            <summary>
             Gets or sets the main email address.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ClientViewModel.ClientId">
            <summary>
            Gets or sets the client id to associate with this user.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ClientViewModel.ClientSecret">
            <summary>
            Gets or sets the client secret to associate with this user.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ClientViewModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation. 
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.ConversationInModel">
            <summary>
            Model for creating a conversation.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConversationInModel.Members">
            <summary>
            The members of the conversation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.ConversationOutModel">
            <summary>
            View model for a conversation.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConversationOutModel.Id">
            <summary>  
             Gets the id of the conversation.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConversationOutModel.Title">
            <summary>
             Gets or sets the title of the conversation.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConversationOutModel.AvatarUrl">
            <summary>
            Gets the avatar url.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConversationOutModel.Presence">
            <summary>
            Gets a value indicating the presence status of the other user in a one-to-one conversation.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConversationOutModel.IsRoom">
            <summary>
            Gets a value indicating whether this is a chat room or a conversation between just 2 people.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConversationOutModel.IsRead">
            <summary>
            Gets a value indicating if the current user has read all messages in the conversation.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConversationOutModel.IsPinned">
            <summary>
            Gets a value indicating if the current user has pinned the conversation.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConversationOutModel.IsStarred">
            <summary>
            Gets a value indicating if the current user has starred the conversation.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConversationOutModel.Excerpt">
            Gets a snippet of the most recent message in the conversation.
        </member>
        <member name="P:Weavy.Web.Models.ConversationOutModel.LastMessageAt">
            <summary>
            Gets the date and time when the last message in the convesation was recieved or <code>null</code> if no messages exists in the conversation.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConversationOutModel.LastMessageAtString">
            <summary>
            Gets a string representation of when the created date occured, e.g. "4:38 PM", "Yesterday", "Wednesday", "June 16", "10/06/16" etc
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConversationOutModel.Members">
            <summary>
            Gets the list of users that are members of the conversation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.MeetingModel">
            <summary>
            Model for creating new meetings 
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MeetingModel.ConversationId">
            <summary>
            The id of the current converstion
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MeetingModel.Topic">
            <summary>
            The topic of the meeting
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.MeetingProviderSignOutModel">
            <summary>
            Model for signing out from a meeting provider
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MeetingProviderSignOutModel.Id">
            <summary>
            The id of the conversation to redirect to after sign out
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MeetingProviderSignOutModel.Provider">
            <summary>
            The meeting provider
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.MeetingAuthModel">
            <summary>
            A class representing authentication status after authorization with a meeting provider
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MeetingAuthModel.State">
            <summary>
            The state parameter sent to meeting provider athentication
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MeetingAuthModel.Authenticated">
            <summary>
            Authentication state
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.PartialMeetingModel">
            <summary>
            View model for displaying meeting partials as "attachments" to new message
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PartialMeetingModel.Topic">
            <summary>
            Gets or sets the topic of the meeting.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PartialMeetingModel.Meeting">
            <summary>
            The meeting
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PartialMeetingModel.Guid">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.MessageInModel">
            <summary>
            Model for inserting a message into a conversation.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MessageInModel.Text">
            <summary>
            The message text.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.MessageOutModel">
            <summary>
            View model for a message.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MessageOutModel.Id">
            <summary>
             Gets the id of the message.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MessageOutModel.CreatedAt">
            <summary>
            Gets the date when the message was created
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MessageOutModel.CreatedById">
            <summary>
            Gets the user's id that created the message
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MessageOutModel.CreatedByName">
            <summary>
            Gets the user's name that created the message
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MessageOutModel.CreatedByThumb">
            <summary>
            Gets the user's thumb that created the message
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MessageOutModel.Attachments">
            <summary>
            Gets the attachments for the message
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MessageOutModel.Html">
            <summary>
            Gets the html to display
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MessageOutModel.SeenBy">
            <summary>
            A list om conversation members that have seen the message
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.NameInModel">
            <summary>
            Model for updating the name of a room.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.NameInModel.Name">
            <summary>
            The new room name.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.SettingsModel">
            <summary>
            Model for settings.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SettingsModel.TimeZone">
            <summary>
            Gets or sets the user time zone.
            </summary>                                         
        </member>
        <member name="P:Weavy.Web.Models.SettingsModel.EnterToSend">
            <summary>
            Gets or sets a value indicating whether Enter should send a message or insert a new line.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SettingsModel.AvatarId">
            <summary>
            The blob id of the avatar to use or null if no avatar is set.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SettingsModel.ThumbnailUrl">
            <summary>
            The avatar thumb.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SettingsModel.TimeZones">
            <summary>
            A list with all available time zones.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.ZoomEvent">
            <summary>
            A model representing a Zoom webhook event
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ZoomEvent.Event">
            <summary>
            The type of event
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ZoomEvent.Payload">
            <summary>
            The payload data
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.ZoomEventPayload">
            <summary>
            Model representing a web hook event payload
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ZoomEventPayload.AccountId">
            <summary>
            The account associated with the event
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ZoomEventPayload.Object">
            <summary>
            The payload object
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.ZoomEventPayloadObject">
            <summary>
            A model representing a payload
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ZoomEventPayloadObject.Id">
            <summary>
            The Id of the payload
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ZoomEventPayloadObject.Uuid">
            <summary>
            The unique id
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ZoomEventPayloadObject.HostId">
            <summary>
            The host id
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ZoomEventPayloadObject.Topic">
            <summary>
            The topic of the meeting
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ZoomEventPayloadObject.StartTime">
            <summary>
            The start time of the meeting
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ZoomEventPayloadObject.Timezone">
            <summary>
            Timezone
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ZoomEventPayloadObject.Duration">
            <summary>
            The duration of the meeting
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ZoomEventPayloadObject.RecordingUrl">
            <summary>
            The url of a recording
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.DirectoryModel">
            <summary>
            View model for user directories.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.DirectoryModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Models.DirectoryModel"/> class.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.DirectoryModel.Directory">
            <summary>
            Gets or sets the directory.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.DirectoryModel.Members">
            <summary>
            Gets or sets the directory members.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.AboutModel">
            <summary>
            View model for the about page.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AboutModel.Version">
            <summary>
            Gets or sets the current version number.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AboutModel.Projects">
            <summary>
            Gets the list of open source projects used by Weavy.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.OpenSourceProject">
            <summary>
            A class describing an open source project.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.OpenSourceProject.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.OpenSourceProject.Url">
            <summary>
            Gets or sets the url.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.OpenSourceProject.License">
            <summary>
            Gets or sets the license.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.OpenSourceProject.LicenseUrl">
            <summary>
            Gets or sets the url to the license.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.ProfileModel">
            <summary>
            Model used when a user edits their own account/profile.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ProfileModel.#ctor">
            <summary>
            Iniializes a new instance of the <see cref="T:Weavy.Web.Models.ProfileModel"/> class.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ProfileModel.#ctor(Weavy.Core.Models.User)">
            <summary>
            Iniializes a new instance of the <see cref="T:Weavy.Web.Models.ProfileModel"/> class for the specified <see cref="T:Weavy.Core.Models.User"/>.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ProfileModel.Id">
            <summary>
             Gets or sets the user id.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ProfileModel.Avatar">
            <summary>
            Gets or sets the avatar image.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ProfileModel.Email">
            <summary>
             Gets or sets the main email address.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ProfileModel.Username">
            <summary>
             Gets or sets the username (used for login, @mentions etc).
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ProfileModel.Profile">
            <summary>
            Gets or sets profile data for the user.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ProfileModel.IsTrashed">
            <summary>
            Gets or sets a value indicating whether the user account is trashed.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ProfileModel.PreviewUrl">
            <summary>
            Gets the avatar preview url.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ProfileModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.PasswordRecoveryModel">
            <summary>
            Model used when recovering lost password information.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PasswordRecoveryModel.Email">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PasswordRecoveryModel.User">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.PasswordResetModel">
            <summary>
            Model used when changing password.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PasswordResetModel.Token">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PasswordResetModel.NewPassword">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PasswordResetModel.VerifyPassword">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.PasswordResetModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.SignInModel">
            <summary>
            Model used when signing in with a local user account.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.SignInModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SignInModel.Username">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SignInModel.Password">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SignInModel.RememberMe">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SignInModel.Path">
            <summary>
            Gets or sets the path where to redirect after successful sign-in.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SignInModel.HMAC">
            <summary>
            Gets or sets the hashed message authentication code (HMAC). Utilized for Single Sign-On in WebDAV requests from Mictrosoft Office.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SignInModel.AuthenticationTypes">
            <summary>
            Gets the external authentication types.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.PasswordModel">
            <summary>
            Model used when changing password.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PasswordModel.OldPassword">
            <summary>
            Gets or sets the old password.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PasswordModel.NewPassword">
            <summary>
            Gets or sets the new password.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PasswordModel.VerifyPassword">
            <summary>
            Gets or sets the password verification.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.PasswordModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Validates the model.
            </summary>
            <param name="validationContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Models.LinkLoginModel">
            <summary>
            Model used when linking a login to an existing user.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.LinkLoginModel.Login">
            <summary>
            Details of the login to link.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.LinkLoginModel.LoginId">
            <summary>
            Id of the login to link.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.LinkLoginModel.Password">
            <summary>
            Password used when linking login to user.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.RegisterWindowsModel">
            <summary>
            Model used when connecting a windows login to a local account.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RegisterWindowsModel.Username">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RegisterWindowsModel.Password">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RegisterWindowsModel.First">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RegisterWindowsModel.SamAccountName">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.CreateUserModel">
            <summary>
            Model used when creating user accounts.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.CreateUserModel.#ctor">
            <summary>
            Iniializes a new instance of the <see cref="T:Weavy.Web.Models.CreateUserModel"/> class.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CreateUserModel.Avatar">
            <summary>
            Gets or sets the profile picture.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CreateUserModel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CreateUserModel.Email">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CreateUserModel.Username">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CreateUserModel.Password">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CreateUserModel.Comment">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CreateUserModel.DirectoryId">
            <summary>
            Gets or sets the user directory.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CreateUserModel.IsAdmin">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CreateUserModel.IsSuspended">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.CreateUserModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation. Subclasses can override this method to supply their own implementation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.UserModel">
            <summary>
            Model used when creating/editing users.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.UserModel.#ctor">
            <summary>
            Iniializes a new instance of the <see cref="T:Weavy.Web.Models.UserModel"/> class.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.UserModel.#ctor(Weavy.Core.Models.User)">
            <summary>
            Iniializes a new instance of the <see cref="T:Weavy.Web.Models.UserModel"/> class for the specified <see cref="T:Weavy.Core.Models.User"/>.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.UserModel.Password">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.UserModel.Comment">
            <summary>
             Gets or sets application-specific information for the <see cref="T:Weavy.Core.Models.User"/>. 
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.UserModel.DirectoryId">
            <summary>
            Gets or sets the user directory.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.UserModel.IsAdmin">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.UserModel.IsSuspended">
            <summary>
            Gets or sets a value indicating whether the user account is suspended.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.UserModel.Logins">
            <summary>
              Gets the list of logins for the <see cref="T:Weavy.Core.Models.User"/>.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.UserModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.AlertModel">
            <summary>
            Class for pushing alert messages to the UI.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.AlertModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AlertModel.Type">
            <summary>
            Gets or sets the alert type, e.g. info, success, warning or danger,
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AlertModel.Dismissible">
            <summary>
            Gets or sets a value indicating whether to add an optional dismiss button to the alert.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AlertModel.Message">
            <summary>
            Gets or sets the alert message.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AlertModel.Sticky">
            <summary>
            Gets or sets a value indicating whether the alert should fade out or not.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AlertModel.IsHtml">
            <summary>
            Gets or sets a value indicating whether the alert message contains html or not.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AlertModel.IsInline">
            <summary>
            Gets or sets a value indicating whether the Alert should be displayed inline instead of automatically on page load.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.AppsModel">
            <summary>
            View model for configuring apps in a space.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.AppsModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppsModel.Space">
            <summary>
            Gets the current space.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppsModel.Available">
            <summary>
            Gets or sets the list of apps available for installation in the space.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppsModel.Installed">
            <summary>
            Gets or sets the list of apps already installed in the space.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.AttachContentModel">
            <summary>
            Model for attaching content to a parent space and/or content item.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AttachContentModel.SpaceId">
            <summary>
            Id of space where content should be moved.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AttachContentModel.ParentId">
            <summary>
            Id of parent folder where content should be moved (null if moving to root of space).
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.AttachContentModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            
            </summary>
            <param name="validationContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Models.AttachmentsModel">
            <summary>
            Model for selecting existing attachment or uploading new attachment during rich text edit.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.AttachmentsModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AttachmentsModel.Image">
            <summary>
            Gets or sets a value indicating whether to insert an image or a link.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AttachmentsModel.Markdown">
            <summary>
            Ges or sets a value indicating whether this is our markdown or html editor.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AttachmentsModel.Attachments">
            <summary>
            Existing attachments.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AttachmentsModel.Blobs">
            <summary>
            Uploaded blobs that haven't been attached yet.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AttachmentsModel.SelectedAttachment">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AttachmentsModel.SelectedBlob">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AttachmentsModel.SelectedFile">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AttachmentsModel.Src">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AttachmentsModel.Href">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AttachmentsModel.Alt">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.ClientAppConverter">
            <summary>
            Serializes an App for use in the javacript client.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ClientAppConverter.CanRead">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ClientAppConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Models.ClientAppConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Models.ClientAppConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="T:Weavy.Web.Models.ClientData">
            <summary>
            Return data when initializing the Weavy client script.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ClientData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Models.ClientData"/> class.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ClientData.Spaces">
            <summary>
            Gets the configured spaces.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ClientData.Plugins">
            <summary>
            Sets plugin options.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ClientData.Status">
            <summary>
            Gets the system status.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ClientData.Version">
            <summary>
            Gets the server version (used to detect if client should be upgraded).
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.ClientSpaceConverter">
            <summary>
            Serializes a Space for use as client context.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ClientSpaceConverter.CanRead">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ClientSpaceConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Models.ClientSpaceConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Models.ClientSpaceConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="T:Weavy.Web.Models.ClientUserConverter">
            <summary>
            Serializes only a small part of the User object. Useful for user references such as CreatedBy etc.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ClientUserConverter.CanRead">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ClientUserConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Models.ClientUserConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Models.ClientUserConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="T:Weavy.Web.Models.CommentUpdateModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.CommentUpdateModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.CommentUpdateModel.#ctor(Weavy.Core.Models.Comment)">
            <summary>
            
            </summary>
            <param name="comment"></param>
        </member>
        <member name="P:Weavy.Web.Models.CommentUpdateModel.Id">
            <summary>
            Gets or sets the comment id
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CommentUpdateModel.Text">
            <summary>
            Gets or sets the comment text.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CommentUpdateModel.Html">
            <summary>
            Gets or sets the comment html.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CommentUpdateModel.Blobs">
            <summary>
            Gets or sets the blob ids.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CommentUpdateModel.Embeds">
            <summary>
            Gets or sets the embed ids.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CommentUpdateModel.Files">
            <summary>
            Gets or sets the attachments.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.CommentUpdateModel.RemovedAttachments">
            <summary>
            Gets or sets the removed attachment ids.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.CommentUpdateModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.ConversationIn">
            <summary>
            Conversation input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConversationIn.Recipients">
            <summary>
            Gets or sets the user ids of the message recipients.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ConversationIn.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.ErrorModel">
            <summary>
            View model for the error page.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ErrorModel.#ctor">
            <summary>
            Initialize a new instance of <see cref="T:Weavy.Web.Models.ErrorModel"/>.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ErrorModel.#ctor(System.Int32)">
            <summary>
            Initialize a new instance of <see cref="T:Weavy.Web.Models.ErrorModel"/> with the specified http status code.
            </summary>
            <param name="code">A http status code, e.g. 500.</param>
        </member>
        <member name="M:Weavy.Web.Models.ErrorModel.#ctor(System.Int32,System.String)">
            <summary>
            Initialize a new instance of <see cref="T:Weavy.Web.Models.ErrorModel"/> with the specified http status code and message.
            </summary>
            <param name="code">A http status code, e.g. 500.</param>
            <param name="message">An error message.</param>
        </member>
        <member name="M:Weavy.Web.Models.ErrorModel.#ctor(System.Exception)">
            <summary>
            Initialize a new instance of <see cref="T:Weavy.Web.Models.ErrorModel"/> with the specified <see cref="P:Weavy.Web.Models.ErrorModel.Exception"/>.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ErrorModel.Code">
            <summary>
            Gets the http status code.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ErrorModel.Description">
            <summary>
            Get the http status code description.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ErrorModel.Message">
            <summary>
            Gets or sets a friendly error message.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ErrorModel.Exception">
            <summary>
            Gets the exception that occured.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ErrorModel.GetHtml">
            <summary>
            Get the error as text/html.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Models.ErrorModel.GetText">
            <summary>
            Get the error as text/plain.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Models.ErrorModel.GetJson">
            <summary>
            Get the error as application/json.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Models.FileRevisionsModel">
            <summary>
            Class for displaying the revisions of a file.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.FileRevisionsModel.File">
            <summary>
            Gets or sets the file selected.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.FileRevisionsModel.Revisions">
            <summary>
            Gets or sets the versions for a file.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.HomeModel">
            <summary>
            View model for home page.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.HomeModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.HomeModel.Spaces">
            <summary>
            Gets the list of joined and active spaces.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.HomeModel.People">
            <summary>
            Gets the list of people to display on the home page.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.LinkActive">
            <summary>
            Enum used for setting links to .active.
            </summary>
        </member>
        <member name="F:Weavy.Web.Models.LinkActive.None">
            <summary>
            Never set link to .active
            </summary>
        </member>
        <member name="F:Weavy.Web.Models.LinkActive.Area">
            <summary>
            Set link to .active if areas match
            </summary>
        </member>
        <member name="F:Weavy.Web.Models.LinkActive.Controller">
            <summary>
            Set link to .active if areas and controllers match
            </summary>
        </member>
        <member name="F:Weavy.Web.Models.LinkActive.Action">
            <summary>
            Set link to .active if areas, controllers and actions match
            </summary>
        </member>
        <member name="F:Weavy.Web.Models.LinkActive.Path">
            <summary>
            Set link to .active if paths match
            </summary>
        </member>
        <member name="F:Weavy.Web.Models.LinkActive.Url">
            <summary>
            Set link to .active if full urls (including query string) match
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.MembersModel">
            <summary>
            View model for the space members page.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.MembersModel.#ctor">
            <summary>
            
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MembersModel.Members">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MembersModel.Query">
            <summary>
            Gets or sets the query used when listing members.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.MessageIn">
            <summary>
            Message input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MessageIn.Text">
            <summary>
            Gets or sets the message text.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MessageIn.Blobs">
            <summary>
            Gets or sets id of blobs to attach.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MessageIn.Meetings">
            <summary>
            Gets or sets the ids of meetings to attach.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MessageIn.Embeds">
            <summary>
            Gets or sets ids of embeds to attach.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.MessageIn.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.MoveContentModel">
            <summary>
            Model for moving and attaching content to a parent space and/or content item.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MoveContentModel.Source">
            <summary>
            Content to move. 
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MoveContentModel.AppId">
            <summary>
            Id of app where content should be moved.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.MoveContentModel.ParentId">
            <summary>
            Id of parent content where <see cref="P:Weavy.Web.Models.MoveContentModel.Source"/> should be moved (null if moving to root of app).
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.MoveContentModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            
            </summary>
            <param name="validationContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Models.NotificationsModel">
            <summary>
            View model for notifications in user drawer.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.NotificationsModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.NotificationsModel.UnreadConversations">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.NotificationsModel.UnreadNotifications">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.NotificationsModel.ReadNotifications">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.PersonalModel">
            <summary>
            View model for displaying account/personal information.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PersonalModel.Stars">
            <summary>
            Get or sets the starred entities to display.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PersonalModel.Drafts">
            <summary>
            Gets or sets the drafts to display.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PersonalModel.Notifications">
            <summary>
            Gets or sets the notifications to display.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.PollOptionUpsertModel">
            <summary>
            View model for updating a specific poll option
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PollOptionUpsertModel.Id">
            <summary>
            Poll option id
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PollOptionUpsertModel.Text">
            <summary>
            Poll option text
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.PostInsertModel">
            <summary>
            Post input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostInsertModel.Blobs">
            <summary>
            Gets or sets the blob ids to attach.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostInsertModel.Embeds">
            <summary>
            Gets or sets the embed ids.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostInsertModel.Meetings">
            <summary>
            Gets or sets the meeting ids.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostInsertModel.Html">
            <summary>
            Gets or sets the post html.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostInsertModel.Text">
            <summary>
            Gets or sets the post text.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostInsertModel.Options">
            <summary>
            Gets or sets poll options.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.PostInsertModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.PostMoveModel">
            <summary>
            Model for moving a post.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostMoveModel.AppId">
            <summary>
            Id of app where post should be moved.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostMoveModel.Post">
            <summary>
            Gets or sets the post to move. 
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.PostsViewModel">
            <summary>
            View model for the <see cref="T:Weavy.Core.Models.Posts"/>.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.PostsViewModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostsViewModel.App">
            <summary>
            Gets the app.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostsViewModel.Posts">
            <summary>
            Gets or sets the posts to display on the posts screen.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostsViewModel.Members">
            <summary>
            Gets or sets the list of people to display on the posts screen.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.PostUpdateModel">
            <summary>
            Viewmodel for updating a post
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.PostUpdateModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.PostUpdateModel.#ctor(Weavy.Core.Models.Post)">
            <summary>
            
            </summary>
            <param name="post"></param>
        </member>
        <member name="P:Weavy.Web.Models.PostUpdateModel.Id">
            <summary>
            Gets or sets the post id
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostUpdateModel.Html">
            <summary>
            Gets or sets the post html.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostUpdateModel.Text">
            <summary>
            Gets or sets the post text.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostUpdateModel.Blobs">
            <summary>
            Gets or sets the blob ids.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostUpdateModel.Files">
            <summary>
            Gets or sets the attachments.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostUpdateModel.RemovedAttachments">
            <summary>
            Gets or sets the removed attachment ids.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostUpdateModel.Options">
            <summary>
            Gets or sets poll options.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostUpdateModel.Embeds">
            <summary>
            Gets or sets the embeds.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostUpdateModel.PollId">
            <summary>
            Gets or sets the poll id.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.PostUpdateModel.Post">
            <summary>
            Get the post being edited.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.PostUpdateModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.RenameModel">
            <summary>
            View model for renaming an entity.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RenameModel.Name">
            <summary>
            Get or sets the name.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.RoleModel">
            <summary>
            View model for role.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.RoleModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Models.RoleModel"/> class.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RoleModel.Role">
            <summary>
            Gets or sets the role.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RoleModel.Members">
            <summary>
            Gets or sets the members in the role.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.RouteModel">
            <summary>
            Class that describes a route.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.RouteModel.#ctor(System.Web.Routing.RouteBase)">
            <summary>
            
            </summary>
            <param name="routeBase"></param>
        </member>
        <member name="M:Weavy.Web.Models.RouteModel.#ctor(System.String,System.Web.Http.Controllers.ReflectedHttpActionDescriptor)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="action"></param>
        </member>
        <member name="P:Weavy.Web.Models.RouteModel.Methods">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RouteModel.Url">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RouteModel.Controller">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RouteModel.Action">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.RouteModel.Area">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.RouteModel.GetController(System.Web.Routing.Route)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.RouteModel.GetAction(System.Web.Routing.Route)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.RouteModel.GetMethods(System.Web.Routing.Route)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.RouteModel.GetArea(System.Web.Routing.Route)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.LicenseModel">
            <summary>
            View model for the managing license.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.LicenseModel.LicenseKey">
            <summary>
            Gets or sets the license key.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.LicenseModel.License">
            <summary>
            Used when displaying info about the license.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.LicenseModel.IsInvalid">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.LicenseModel.IsGracePeriod">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.LicenseModel.IsExpired">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.LicenseModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            
            </summary>
            <param name="validationContext"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Models.SetupAccountModel">
            <summary>
            Model used when setting up a local account.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SetupAccountModel.Username">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SetupAccountModel.Password">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SetupAccountModel.Email">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.SetupAccountModel.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.ConfigurationModel">
            <summary>
            Model for collecting configuring settings during setup.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ConfigurationModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Models.ConfigurationModel"/> class.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.LicenseKey">
            <summary>
            Gets or sets the license key to use when installing.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.Name">
            <summary>
            Gets or sets the name of the first user.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.Email">
            <summary>
            Gets or sets the email of the first user.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.Username">
            <summary>
            Gets or sets the username to set for the first user.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.Password">
            <summary>
            Gets or sets the password to set for the first user.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.ThemeColor">
            <summary>
            Gets or sets the themecolor to set during setup.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.ThemeName">
            <summary>
            Gets or sets the name of the theme e.i. the installation.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.ThemeLogoUrl">
            <summary>
            Gets or sets the url to the theme icon to download and configure. 
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.License">
            <summary>
            Gets or sets the license.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ConfigurationModel.LicenseRequest">
            <summary>
            Gets or sets the license request.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.ShareIn">
            <summary>
            Share input model.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ShareIn.Text">
            <summary>
            Gets or sets the share text.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ShareIn.EntityId">
            <summary>
            The id of the entity to share.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ShareIn.EntityType">
            <summary>
            The type of the entity to share.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ShareIn.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Performs custom validation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.SortModel">
            <summary>
            View model for sorting.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.SortModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SortModel.Id">
            <summary>
            The Id of the item to sort.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SortModel.Order">
            <summary>
            The order (weight) of the item.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SortModel.Children">
            <summary>
            The children to sort.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.SpaceModel">
            <summary>
            View model for the space start page.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.SpaceModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SpaceModel.Space">
            <summary>
            Gets the space.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SpaceModel.Members">
            <summary>
            Gets or sets the list of people to display in the space header.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.TypingModel">
            <summary>
            Data model for sending typing information in conversations.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.TypingModel.Conversation">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.TypingModel.User">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.VersionsModel">
            <summary>
            View model for displaying the versions of a content item.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.VersionsModel.Content">
            <summary>
            Gets or sets the currently selected version.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.VersionsModel.Versions">
            <summary>
            Gets or sets the the list of versions for a content item.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.AppOptions">
            <summary>
             An object used to configure apps from the client script.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppOptions.Id">
            <summary>
            Gets or sets the id of the app to configure.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppOptions.Space">
            <summary>
             Space identifier (int id or string key) for the space where the app is configured.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppOptions.Key">
            <summary>
              Gets or sets the unique identifier for the app in the the host system (needs to be unique per space).
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppOptions.Name">
            <summary>
             Gets or sets the display name.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.AppOptions.Type">
            <summary>
            Gets or sets the type of app to configure. 
            Preferably GUID of <see cref="T:Weavy.Core.Models.App"/>, but short name or fully qualified name will also work as long as it is unique within the installation.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.SpaceOptions">
            <summary>
              An object used to configure spaces from the client script.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.SpaceOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Models.SpaceOptions"/> class.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SpaceOptions.Id">
            <summary>
             Gets or sets the id of the space.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SpaceOptions.Key">
            <summary>
             Gets or sets the unique identifier from the host system.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SpaceOptions.Name">
            <summary>
             Gets or sets the display name.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SpaceOptions.Description">
            <summary>
             Gets or sets the description text.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.SpaceOptions.Apps">
            <summary>
            Gets or sets the apps to configure for this space.
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.ClientOptions">
            <summary>
            Options for initializing the Weavy client script.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ClientOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Models.ClientOptions"/> class.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ClientOptions.Spaces">
            <summary>
            Sets the space(s) to configure.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ClientOptions.Plugins">
            <summary>
            Sets plugin options.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ClientOptions.Language">
            <summary>
            Sets language code of preferred language.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ClientOptions.TimeZone">
            <summary>
            Sets the client timezone.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ClientOptions.Theme">
            <summary>
            Sets the CSS theme class.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ClientOptions.Version">
            <summary>
            Sets the client version (used to display warning if client and server versions are different).
            </summary>
        </member>
        <member name="T:Weavy.Web.Models.ClientScriptOptions">
            <summary>
            Configuration options for the Weavy loader script.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ClientScriptOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Models.ClientScriptOptions"/> class.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ClientScriptOptions.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Models.ClientScriptOptions"/> class from the specified <paramref name="options"/> string.
            </summary>
            <param name="options"></param>
        </member>
        <member name="P:Weavy.Web.Models.ClientScriptOptions.JQuery">
            <summary>
            Gets or sets a value indicating whether the script should exclude required libs jquery.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ClientScriptOptions.IE">
            <summary>
            Gets or sets a value indicating whether the script should add polyfills for IE.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ClientScriptOptions.Minified">
            <summary>
            Gets or sets a value indicating whether the script should be minified or not.
            </summary>
        </member>
        <member name="P:Weavy.Web.Models.ClientScriptOptions.Global">
            <summary>
            Gets or sets a value for the name of the weavy client outside the loading scope.
            </summary>
        </member>
        <member name="M:Weavy.Web.Models.ClientScriptOptions.ScriptUrl(System.Boolean)">
            <summary>
            Returns the script url.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Models.ClientScriptOptions.IEUrl(System.Boolean)">
            <summary>
            Returns the script url.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Models.ClientScriptOptions.WeavyScript(System.Boolean)">
            <summary>
            Returns the script url.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Owin.HMACAuthentication.HMACAuthenticationOptions">
            <summary>
            Provides options to configure HMAC Authentication Middleware.
            </summary>
        </member>
        <member name="P:Weavy.Web.Owin.HMACAuthentication.HMACAuthenticationOptions.RootPath">
            <summary>
            Specifies the root path to protect.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.HMACAuthentication.HMACAuthenticationOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Owin.HMACAuthentication.HMACAuthenticationOptions"/> class.
            </summary>
        </member>
        <member name="T:Weavy.Web.Owin.HMACAuthentication.HMACAuthenticationExtensions">
            <summary>
            Provides extension methods to add HMAC authentication middleware.sing app.UseXXX() pattern.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.HMACAuthentication.HMACAuthenticationExtensions.UseHMACAuthentication(Owin.IAppBuilder,Weavy.Web.Owin.HMACAuthentication.HMACAuthenticationOptions)">
            <summary>
            Adds HMAC authentication middleware to the OWIN project (using passed <see cref="T:Weavy.Web.Owin.HMACAuthentication.HMACAuthenticationOptions"/> class).
            </summary>
        </member>
        <member name="T:Weavy.Web.Owin.HMACAuthentication.HMACAuthenticationHandler">
            <summary>
            OWIN middleware that implements HMAC authentication.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.HMACAuthentication.HMACAuthenticationHandler.#ctor(Weavy.Web.Owin.HMACAuthentication.HMACAuthenticationOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Owin.HMACAuthentication.HMACAuthenticationHandler"/> class.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.HMACAuthentication.HMACAuthenticationHandler.AuthenticateCoreAsync">
            <summary>
            The core authentication logic which must be provided by the handler. Will be invoked at most
            once per request. Do not call directly, call the wrapping Authenticate method instead.
            </summary>
            <returns>
            The ticket data provided by the authentication logic
            </returns>
        </member>
        <member name="T:Weavy.Web.Owin.HMACAuthentication.HMACAuthenticationMiddleware">
            <summary>
            Implements HMAC Authentication. 
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.HMACAuthentication.HMACAuthenticationMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,Weavy.Web.Owin.HMACAuthentication.HMACAuthenticationOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Owin.HMACAuthentication.HMACAuthenticationMiddleware"/> class.
            </summary>
            <param name="next">The next.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Weavy.Web.Owin.HMACAuthentication.HMACAuthenticationMiddleware.CreateHandler">
            <summary>
            Creates the handler for HMAC Authentication.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Owin.TokenAuthentication.WeavyIOAuthBearerAuthenticationProvider">
            <summary>
            Specifies callback methods which the Microsoft.Owin.Security.OAuth.OAuthBearerAuthenticationMiddleware invokes to enable developer control over the authentication process.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.TokenAuthentication.WeavyIOAuthBearerAuthenticationProvider.ApplyChallenge(Microsoft.Owin.Security.OAuth.OAuthChallengeContext)">
            <summary>
            Called each time a challenge is being sent to the client.By implementing this method the application may modify the challenge as needed.
            </summary>
            <param name="context">Contains the default challenge.</param>
            <returns>A System.Threading.Tasks.Task representing the completed operation.</returns>
        </member>
        <member name="M:Weavy.Web.Owin.TokenAuthentication.WeavyIOAuthBearerAuthenticationProvider.RequestToken(Microsoft.Owin.Security.OAuth.OAuthRequestTokenContext)">
            <summary>
            Invoked before the System.Security.Claims.ClaimsIdentity is created. Gives the application an opportunity to find the identity from a different location, adjust, or reject the token.
            </summary>
            <param name="context">Contains the token string.</param>
            <returns>A System.Threading.Tasks.Task representing the completed operation.</returns>
        </member>
        <member name="M:Weavy.Web.Owin.TokenAuthentication.WeavyIOAuthBearerAuthenticationProvider.ValidateIdentity(Microsoft.Owin.Security.OAuth.OAuthValidateIdentityContext)">
            <summary>
            Called each time a request identity has been validated by the middleware. By implementing this method the application may alter or reject the identity which has arrived with the request.
            </summary>
            <param name="context">Contains information about the login session as well as the user System.Security.Claims.ClaimsIdentity.</param>
            <returns>A System.Threading.Tasks.Task representing the completed operation.</returns>
        </member>
        <member name="T:Weavy.Web.Owin.TokenAuthentication.WeavyJwtSecurityTokenHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.TokenAuthentication.WeavyJwtSecurityTokenHandler.ValidateToken(System.String,Microsoft.IdentityModel.Tokens.TokenValidationParameters,Microsoft.IdentityModel.Tokens.SecurityToken@)">
            <summary>
            
            </summary>
            <param name="token"></param>
            <param name="validationParameters"></param>
            <param name="validatedToken"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Owin.TokenAuthentication.WeavyOAuthProvider">
            <summary>
              Custom implementation of IOAuthAuthorizationServerProvider used by Authorization Server to communicate with the web application while processing requests. 
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.TokenAuthentication.WeavyOAuthProvider.GrantResourceOwnerCredentials(Microsoft.Owin.Security.OAuth.OAuthGrantResourceOwnerCredentialsContext)">
            <summary>
              Called when a request to the Token endpoint arrives with a "grant_type" of "password".
              This occurs when the user has provided name and password credentials directly
              into the client application's user interface, and the client application is using
              those to acquire an "access_token" and optional "refresh_token". If the web application
              supports the resource owner credentials grant type it must validate the context.Username
              and context.Password as appropriate. To issue an access token the context.Validated
              must be called with a new ticket containing the claims about the resource owner
              which should be associated with the access token. The application should take
              appropriate measures to ensure that the endpoint isn’t abused by malicious callers.
              The default behavior is to reject this grant type. See also http://tools.ietf.org/html/rfc6749#section-4.3.2
            </summary>
            <param name="context">The context of the event carries information in and results out.</param>
            <returns>Task to enable asynchronous execution.</returns>
        </member>
        <member name="M:Weavy.Web.Owin.TokenAuthentication.WeavyOAuthProvider.GrantClientCredentials(Microsoft.Owin.Security.OAuth.OAuthGrantClientCredentialsContext)">
            <summary>
              Called when a request to the Token endpoint arrives with a "grant_type" of "client_credentials".
              This occurs when a registered client application wishes to acquire an "access_token"
              to interact with protected resources on it's own behalf, rather than on behalf
              of an authenticated user. If the web application supports the client credentials
              it may assume the context.ClientId has been validated by the ValidateClientAuthentication
              call. To issue an access token the context.Validated must be called with a new
              ticket containing the claims about the client application which should be associated
              with the access token. The application should take appropriate measures to ensure
              that the endpoint isn’t abused by malicious callers. The default behavior is
              to reject this grant type. See also http://tools.ietf.org/html/rfc6749#section-4.4.2
            </summary>
            <param name="context">The context of the event carries information in and results out.</param>
            <returns>Task to enable asynchronous execution.</returns>
        </member>
        <member name="M:Weavy.Web.Owin.TokenAuthentication.WeavyOAuthProvider.ValidateClientAuthentication(Microsoft.Owin.Security.OAuth.OAuthValidateClientAuthenticationContext)">
            <summary>
              Called to validate that the origin of the request is a registered "client_id",
              and that the correct credentials for that client are present on the request.
              If the web application accepts Basic authentication credentials, context.TryGetBasicCredentials(out
              clientId, out clientSecret) may be called to acquire those values if present
              in the request header. If the web application accepts "client_id" and "client_secret"
              as form encoded POST parameters, context.TryGetFormCredentials(out clientId,
              out clientSecret) may be called to acquire those values if present in the request
              body. If context.Validated is not called the request will not proceed further.
            </summary>
            <param name="context">The context of the event carries information in and results out.</param>
            <returns>Task to enable asynchronous execution.</returns>
        </member>
        <member name="M:Weavy.Web.Owin.TokenAuthentication.WeavyOAuthProvider.TokenEndpoint(Microsoft.Owin.Security.OAuth.OAuthTokenEndpointContext)">
            <summary>
              Called at the final stage of a successful Token endpoint request. An application
              may implement this call in order to do any final modification of the claims being
              used to issue access or refresh tokens. This call may also be used in order to
              add additional response parameters to the Token endpoint's json response body.
            </summary>
            <param name="context">The context of the event carries information in and results out.</param>
            <returns>Task to enable asynchronous execution.</returns>
        </member>
        <member name="T:Weavy.Web.Owin.TokenAuthentication.WeavyJwtFormat">
            <summary>
            Custom implementation that generates JWT tokens.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.TokenAuthentication.WeavyJwtFormat.Protect(Microsoft.Owin.Security.AuthenticationTicket)">
            <summary>
            Creates and secures the token.
            </summary>
            <param name="data">Contains user identity information as well as additional authentication state.</param>
            <returns>The token.</returns>
        </member>
        <member name="M:Weavy.Web.Owin.TokenAuthentication.WeavyJwtFormat.Unprotect(System.String)">
            <summary>
            Deliberately not implemented.
            </summary>
            <param name="protectedText"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Owin.CookieManager.SameSiteCookieManager">
            <summary>
            Cookie Manager implementation that handles SameSite=None introduced by Google.
            See: https://devblogs.microsoft.com/aspnet/upcoming-samesite-cookie-changes-in-asp-net-and-asp-net-core/
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.CookieManager.SameSiteCookieManager.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.CookieManager.SameSiteCookieManager.#ctor(Microsoft.Owin.Infrastructure.ICookieManager)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.CookieManager.SameSiteCookieManager.AppendResponseCookie(Microsoft.Owin.IOwinContext,System.String,System.String,Microsoft.Owin.CookieOptions)">
            <summary>
            Appends the requested cookie to System.Web.HttpContextBase.Response.Cookies.
            </summary>
            <param name="context"></param>
            <param name="key"></param>
            <param name="value"></param>
            <param name="options"></param>
        </member>
        <member name="M:Weavy.Web.Owin.CookieManager.SameSiteCookieManager.DeleteCookie(Microsoft.Owin.IOwinContext,System.String,Microsoft.Owin.CookieOptions)">
            <summary>
            Deletes the requested cookie by appending an expired cookie to System.Web.HttpContextBase.Response.Cookies.
            </summary>
            <param name="context"></param>
            <param name="key"></param>
            <param name="options"></param>
        </member>
        <member name="M:Weavy.Web.Owin.CookieManager.SameSiteCookieManager.GetRequestCookie(Microsoft.Owin.IOwinContext,System.String)">
            <summary>
            Reads the requested cookie from System.Web.HttpContextBase.Request.Cookies.
            </summary>
            <param name="context"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.CookieManager.SameSiteCookieManager.CheckSameSite(Microsoft.Owin.IOwinContext,Microsoft.Owin.CookieOptions)">
            <summary>
            Clearing SameSite if client can't handle it.
            </summary>
            <param name="context"></param>
            <param name="options"></param>
        </member>
        <member name="M:Weavy.Web.Owin.CookieManager.SameSiteCookieManager.BreaksWithSameSiteNone(System.String)">
            <summary>
            Decide from the user-agent if the client can handle SameSite=None.
            </summary>
            <param name="userAgent">The user agent of the calling client.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Owin.HttpsPolicy.HstsMiddleware">
            <summary>
            Enables HTTP Strict Transport Security (HSTS). See https://tools.ietf.org/html/rfc6797.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.HttpsPolicy.HstsMiddleware.#ctor(Microsoft.Owin.OwinMiddleware)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Owin.HttpsPolicy.HstsMiddleware"/> class.
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Weavy.Web.Owin.HttpsPolicy.HstsMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,Weavy.Web.Owin.HttpsPolicy.HstsOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Owin.HttpsPolicy.HstsMiddleware"/> class.
            </summary>
            <param name="next"></param>
            <param name="options"></param>
        </member>
        <member name="M:Weavy.Web.Owin.HttpsPolicy.HstsMiddleware.Invoke(Microsoft.Owin.IOwinContext)">
            <summary>
            Invoke the middleware.
            </summary>
            <param name="context">The <see cref="T:System.Web.HttpContext"/>.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Owin.HttpsPolicy.HstsOptions">
            <summary>
            Options for the Hsts Middleware
            </summary>
        </member>
        <member name="P:Weavy.Web.Owin.HttpsPolicy.HstsOptions.MaxAge">
            <summary>
            Sets the max-age parameter of the Strict-Transport-Security header.
            </summary>
            <remarks>
            Max-age is required; defaults to 30 days.
            See: https://tools.ietf.org/html/rfc6797#section-6.1.1
            </remarks>
        </member>
        <member name="T:Weavy.Web.Owin.HttpsPolicy.HttpsRedirectionMiddleware">
            <summary>
            Redirects insecure requests to https.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.HttpsPolicy.HttpsRedirectionMiddleware.#ctor(Microsoft.Owin.OwinMiddleware)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Owin.HttpsPolicy.HttpsRedirectionMiddleware"/> class.
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Weavy.Web.Owin.HttpsPolicy.HttpsRedirectionMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,Weavy.Web.Owin.HttpsPolicy.HttpsRedirectionOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Owin.HttpsPolicy.HttpsRedirectionMiddleware"/> class.
            </summary>
            <param name="next"></param>
            <param name="options"></param>
        </member>
        <member name="M:Weavy.Web.Owin.HttpsPolicy.HttpsRedirectionMiddleware.Invoke(Microsoft.Owin.IOwinContext)">
            <summary>
            Redirect to https.
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Weavy.Web.Owin.HttpsPolicy.HttpsRedirectionOptions">
            <summary>
            Options for the HttpsRedirection middleware
            </summary>
        </member>
        <member name="P:Weavy.Web.Owin.HttpsPolicy.HttpsRedirectionOptions.RedirectStatusCode">
            <summary>
            The status code used for the redirect response. The default is 307.
            </summary>
        </member>
        <member name="P:Weavy.Web.Owin.HttpsPolicy.HttpsRedirectionOptions.HttpsPort">
            <summary>
            The HTTPS port to be added to the redirected URL. The default is 443.
            </summary>
        </member>
        <member name="T:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationExtensions">
            <summary>
            Provides extension methods to add MS-OFBA Authentication middleware to ASP.NET MVC project
            using app.UseXXX() patern.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationExtensions.UseMicrosoftOfficeFormsBasedAuthentication(Owin.IAppBuilder,Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions)">
            <summary>
            Adds MS-OFBA authentication middleware to the OWIN project (using passed <see cref="T:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions"/> class).
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationExtensions.UseMicrosoftOfficeFormsBasedAuthentication(Owin.IAppBuilder)">
            <summary>
            Adds MS-OFBA authentication middleware to the OWIN project (using default settings of <see cref="T:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions"/>).
            </summary>
        </member>
        <member name="T:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationHandler">
            <summary>
            OWIN middleware that implements 'MS-OFBA' authentication protocol.
            </summary>
            <remarks>
            Provides fallback to MS-OFBA authentication if HTTP response code 302 
            (redirect to log-in page) has been issued after (failed) attempt to 
            authenticate using other OWIN authentication middleware (i.e. cookie)
            that isn't supported by host (i.e. Microsoft Office application).
            </remarks>
        </member>
        <member name="M:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationHandler.#ctor(Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationHandler"/> class.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="M:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationHandler.AuthenticateCoreAsync">
            <summary>
            The core authentication logic which must be provided by the handler. Will be invoked at most
            once per request. Do not call directly, call the wrapping Authenticate method instead.
            </summary>
            <returns>
            The ticket data provided by the authentication logic
            </returns>
            <remarks>
            We always return null because goal of this handler is just to tell MS Office to open authentication window.
            </remarks>
        </member>
        <member name="M:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationHandler.ApplyResponseChallengeAsync">
            <summary>
            Deal with 401 challenge concerns.
            </summary>
            <reremarks>
            If an authentication scheme in question
            deals an authentication interaction as part of it's request flow. (like adding a response header, or
            changing the 401 result to 302 of a log-in page or external sign-in location.)
            </reremarks>
        </member>
        <member name="T:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationMiddleware">
            <summary>
            Implements MS-OFBA Authentication Middleware. 
            See https://msdn.microsoft.com/en-us/library/cc313069(v=office.12).aspx.
            </summary>
            <remarks>
            MS-OFBA is supported by Microsoft Office 2007 SP1 and later versions.
            MS-OFBA is not supported by Microsoft Mini-redirector and OS X Finder.
            </remarks>
        </member>
        <member name="M:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationMiddleware"/> class.
            </summary>
            <param name="next">The next.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationMiddleware.Invoke(Microsoft.Owin.IOwinContext)">
            <summary>
            Handles the request.
            </summary>
            <param name="context">The request context.</param>
        </member>
        <member name="M:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationMiddleware.CreateHandler">
            <summary>
            Creates the handler for MS-OFBA Authentication.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationMiddleware.IsMSOFBAAccepted(Microsoft.Owin.IOwinRequest)">
            <summary>
            Analyzes request headers to determine MS-OFBA support.
            </summary>
            <remarks>
            MS-OFBA is supported by Microsoft Office 2007 SP1 and later versions 
            and any application that provides X-FORMS_BASED_AUTH_ACCEPTED: t header 
            in OPTIONS request.
            </remarks>
        </member>
        <member name="T:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions">
            <summary>
            Provides options to configure Basic Authentication Middleware.
            </summary>
        </member>
        <member name="P:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions.LoginPath">
            <summary>
            Specifies the path to log-in page used by MS-OFBA.
            </summary>
            <remarks>
            This page will be displyed in dialog box presented by Microsoft Office  or other OFBA-enabled application.
            </remarks>
        </member>
        <member name="P:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions.LoginSuccessPath">
            <summary>
            Specifies the path to log-in redirect URL which is used to indicate successful login.
            </summary>
            <remarks>
            On seeing the redirect, the client determines that this URI matches that returned in response to the 
            Protocol Discovery request. In case the URIs match, the client assumes success, follows the 
            redirect, and closes the form.
            </remarks>
        </member>
        <member name="P:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions.DialogSize">
            <summary>
            Gets or sets the size of the OFBA log-in dialog.
            </summary>
            <value>
            The size of the dialog.
            </value>
        </member>
        <member name="P:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions.ReturnUrlParameter">
            <summary>
            The parameter name used to pass the return URL.
            </summary>
            <value>String that represents return URL parameter name.</value>
        </member>
        <member name="M:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Owin.MSOFBAuthentication.MSOFBAuthenticationOptions"/> class.
            </summary>
        </member>
        <member name="T:Weavy.Web.Owin.Turbolinks.TurbolinksMiddleware">
            <summary>
            Set Turbolinks response headers.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.Turbolinks.TurbolinksMiddleware.#ctor(Microsoft.Owin.OwinMiddleware)">
            <summary>
            Initialzes a new instance of the <see cref="T:Weavy.Web.Owin.Turbolinks.TurbolinksMiddleware"/> class.
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Weavy.Web.Owin.Turbolinks.TurbolinksMiddleware.Invoke(Microsoft.Owin.IOwinContext)">
            <summary>
            Set Turbolinks response headers.
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Weavy.Web.Owin.OwinUtils">
            <summary>
            Various Owin extension methods.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.OwinUtils.IsAjax(Microsoft.Owin.IOwinRequest)">
            <summary>
             Checks if the request was requested with XMLHttpRequest.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.OwinUtils.IsInternalApi(Microsoft.Owin.IOwinRequest,System.String)">
            <summary>
            Checks if the request is for the api.
            </summary>
            <param name="request"></param>
            <param name="path">Specific path to check for, e.g. "status".</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.OwinUtils.IsManage(Microsoft.Owin.IOwinRequest,System.String)">
            <summary>
            Checks if the request is for the manage area.
            </summary>
            <param name="request"></param>
            <param name="path">Specific path to check for, e.g. "license".</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.OwinUtils.IsBrowser(Microsoft.Owin.IOwinRequest)">
            <summary>
             Checks if the request was made from a web browser, i.e. has the string "Mozilla" in the user agent.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.OwinUtils.IsEmbedded(Microsoft.Owin.IOwinRequest)">
            <summary>
            Checks if the request is for an embedded action/view.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.OwinUtils.IsError(Microsoft.Owin.IOwinRequest)">
            <summary>
            Checks if the request is for an error page.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.OwinUtils.IsSignalR(Microsoft.Owin.IOwinRequest)">
            <summary>
            Checks if the request is for SignalR.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.OwinUtils.IsLocal(Microsoft.Owin.IOwinRequest)">
            <summary>
            Checks if the request is local (from localhost, 127.0.0.1, ::1).
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.OwinUtils.IsValidWhenLicenseError(Microsoft.Owin.IOwinRequest)">
            <summary>
            Checks if the request is valid when the license has errors.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.OwinUtils.IsValidWhenLicenseInvalid(Microsoft.Owin.IOwinRequest)">
            <summary>
            Checks if the request is valid when license is invalid.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.OwinUtils.IsValidDuringSetup(Microsoft.Owin.IOwinRequest)">
            <summary>
            Checks if the request is valid during setup.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.OwinUtils.IsManaged(Microsoft.Owin.IOwinRequest)">
            <summary>
            Checks if the request is for managed code and needs authentication etc.
            </summary>
            <param name="request"></param>
            <returns><c>true</c> for files served by managed code, otherwise <c>true</c></returns>
        </member>
        <member name="M:Weavy.Web.Owin.OwinUtils.IsStatic(Microsoft.Owin.IOwinRequest)">
            <summary>
            Checks if the request is for a "static" file served by managed code that does not need authentication etc.
            </summary>
            <param name="request"></param>
            <returns><c>true</c> for static served by managed code, otherwise <c>false</c></returns>
        </member>
        <member name="M:Weavy.Web.Owin.OwinUtils.IsRegisterWindows(Microsoft.Owin.IOwinRequest)">
            <summary>
            Checks if the request is for the register-windows action.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.OwinUtils.IsSetup(Microsoft.Owin.IOwinRequest,System.String)">
            <summary>
            Checks if the request is for the setup wizard.
            </summary>
            <param name="request"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.OwinUtils.IsTurbolinks(Microsoft.Owin.IOwinRequest)">
            <summary>
             Checks if the request was requested with Turbolinks.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.OwinUtils.IsWebDAV(Microsoft.Owin.IOwinRequest)">
            <summary>
             Checks if the request is a WebDAV request.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.OwinUtils.IsWebSocketsEnabled(Microsoft.Owin.IOwinContext)">
            <summary>
             Checks if web sockets are enabled on the server.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.OwinUtils.UseWeavy(Owin.IAppBuilder)">
            <summary>
            Configure Weavy and insert the <see cref="T:Weavy.Web.Owin.WeavyMiddleware"/> into the Owin pipeline.
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.OwinUtils.SignIn(Microsoft.Owin.IOwinContext,Weavy.Core.Models.User,Microsoft.Owin.Security.AuthenticationProperties)">
            <summary>
             Sign in the specified user, i.e. set user and auth cookie.
            </summary>
            <param name="context"></param>
            <param name="user">The user to sign in.</param>
            <param name="properties">Optional properties to persist along with the claims, e.g. IsPersistent etc..</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Owin.OwinUtils.SignOut(Microsoft.Owin.IOwinContext)">
            <summary>
             Sign out the currently logged in user, i.e. remove the auth cookie.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Owin.WeavyMiddleware">
            <summary>
            Handles startup configuration, authentication, logging etc.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyMiddleware.#ctor(Microsoft.Owin.OwinMiddleware)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Owin.WeavyMiddleware"/> class.
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyMiddleware.Invoke(Microsoft.Owin.IOwinContext)">
            <summary>
            Performs various tasks on each request.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyMiddleware.SetUri(Microsoft.Owin.IOwinContext)">
            <summary>
            Make sure that WeavyContext.Current.Uri is configured.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyMiddleware.GetTimeZone(Microsoft.Owin.IOwinContext)">
            <summary>
            Gets the time zone to use for the current request.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyMiddleware.CheckStatus(Microsoft.Owin.IOwinContext)">
            <summary>
            Check system status.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyMiddleware.CheckUser(Microsoft.Owin.IOwinContext)">
            <summary>
            Checks authentication status and sets current user for the request.
            </summary>
        </member>
        <member name="M:Weavy.Web.Owin.WeavyMiddleware.CheckLicense(Microsoft.Owin.IOwinContext)">
            <summary>
            Check that license is valid and has not expired.
            </summary>
        </member>
        <member name="T:Weavy.Web.Utils.ControllerUtils">
            <summary>
            Provides extension and helper methods for <see cref="T:System.Web.Mvc.ControllerContext"/> etc.
            </summary>
        </member>
        <member name="F:Weavy.Web.Utils.ControllerUtils.CONTROLLER">
            <summary>
            Returns the string "controller".
            </summary>
        </member>
        <member name="F:Weavy.Web.Utils.ControllerUtils.ACTION">
            <summary>
            Returns the string "action".
            </summary>
        </member>
        <member name="F:Weavy.Web.Utils.ControllerUtils.AREA">
            <summary>
            Returns the string "area".
            </summary>
        </member>
        <member name="F:Weavy.Web.Utils.ControllerUtils.ROOT_PREFIX">
            <summary>
            Route prefix for root relative routes, i.e. "~/".
            </summary>
        </member>
        <member name="F:Weavy.Web.Utils.ControllerUtils.EMBEDDED_PREFIX">
            <summary>
            Route prefix for embedded routes, i.e. "~/e/".
            </summary>
        </member>
        <member name="M:Weavy.Web.Utils.ControllerUtils.GetController``1(``0)">
            <summary>
            Get custom controller for specified app.
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.ControllerUtils.GetControllerType(Weavy.Core.Models.App)">
            <summary>
            Get custom controller type for specified app.
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.ControllerUtils.GetControllerType(Weavy.Core.Models.Content)">
            <summary>
            Get custom controller type for specified content item.
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.ControllerUtils.ExecuteAction``1(System.Web.Mvc.ControllerContext,System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Executes an action method on another controller.
            </summary>
            <typeparam name="TController"></typeparam>
            <param name="context"></param>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.ControllerUtils.ExecuteAction(System.Web.Mvc.ControllerContext,System.Type,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Executes an action method on another controller with the specified parameters.
            </summary>
            <param name="context">The current controller context.</param>
            <param name="controllerType">The controller type that</param>
            <param name="actionName"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.ControllerUtils.ControllerName(System.Type)">
            <summary>
            
            </summary>
            <param name="controllerType"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.ControllerUtils.AreaName(System.Web.Mvc.ControllerContext)">
            <summary>
            Gets the name of the current area.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.ControllerUtils.ControllerName(System.Web.Mvc.ControllerContext)">
            <summary>
            Gets the name of the current controller.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.ControllerUtils.ActionName(System.Web.Mvc.ControllerContext)">
            <summary>
            Gets the name of the current action.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.ControllerUtils.GetPartialViewName(System.Web.Mvc.ControllerContext,Weavy.Core.Models.ContentSearchResult{Weavy.Core.Models.Content})">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.ControllerUtils.GetPartialViewName(System.Web.Mvc.ControllerContext,Weavy.Core.Models.Content,System.Nullable{Weavy.Core.Models.Layout})">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="layout"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.ControllerUtils.GetViewName(System.Web.Mvc.ControllerContext,Weavy.Core.Models.App,System.String)">
            <summary>
            Get view name for specified app.
            </summary>
            <param name="context"></param>
            <param name="viewName"></param>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.ControllerUtils.GetViewName(System.Web.Mvc.ControllerContext,Weavy.Core.Models.Content,System.String)">
            <summary>
             Get view name for specified content type.
            </summary>
            <param name="context"></param>
            <param name="viewName"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Utils.ExpressionUtils">
            <summary>
            Provides extension and helper methods for working with <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
        </member>
        <member name="M:Weavy.Web.Utils.ExpressionUtils.GetRouteValuesFromExpression``1(System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            
            </summary>
            <typeparam name="TController"></typeparam>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.ExpressionUtils.GetActionName(System.Reflection.MethodInfo)">
            <summary>
            This method contains some heuristics that will help determine the correct action name from a given MethodInfo. 
            The logic's not foolproof, but it should be good enough for most uses. 
            </summary>
            <param name="methodInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.ExpressionUtils.AddParametersToDictionary(System.Linq.Expressions.MethodCallExpression,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Add parameter names and values from <see cref="T:System.Linq.Expressions.MethodCallExpression" /> to the specified dictionary.
            </summary>
            <param name="call"></param>
            <param name="dictionary"></param>
        </member>
        <member name="M:Weavy.Web.Utils.ExpressionUtils.GetParametersDictionary(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Get parameter names and values from <see cref="T:System.Linq.Expressions.MethodCallExpression" />.
            </summary>
            <param name="call"></param>
        </member>
        <member name="M:Weavy.Web.Utils.ExpressionUtils.Wrap(System.Linq.Expressions.Expression)">
            <summary>
            
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Utils.HtmlUtils">
            <summary>
            Provides extension and helper methods for generating html markup.
            </summary>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.AvatarImg(Weavy.Core.Models.IHasAvatar,System.Int32,System.Boolean,System.Object)">
            <summary>
            Returns the avatar image for the specified item.
            </summary>
            <param name="item"></param>
            <param name="size"></param>
            <param name="presence"><c>true</c> to add presence status to the image, otherwise <c>false</c>.</param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.AvatarImg(Weavy.Core.Models.Notification,System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="size"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.AvatarImg(Weavy.Core.Models.File,System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="file"></param>
            <param name="size"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.AvatarImg(Weavy.Core.Models.Post,System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <param name="size"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.AvatarLink(Weavy.Core.Models.IHasAvatar,System.Int32,System.Boolean,System.Object)">
            <summary>
            Returns an avatar image that links to the specified entity.
            </summary>
            <param name="entity"></param>
            <param name="size"></param>
            <param name="presence"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.Attributes(System.Web.Mvc.HtmlHelper,System.Object)">
            <summary>
            Renders the specified html attributes.
            </summary>
            <param name="helper"></param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.AlertMessages(System.Web.Mvc.HtmlHelper,System.Boolean)">
            <summary>
            Renders alert messages that are stored in TempData.
            </summary>
            <param name="helper"></param>
            <param name="inline"><c>true</c> to render inline alerts, or <c>false</c> to render <see cref="T:Weavy.Web.Models.AlertModel"/> messages where the IsInline property is <c>false</c>. </param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.Breadcrumbs(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.Content,System.Object)">
            <summary>
            Returns breadcrumb navigation for the specified content item.
            </summary>
            <param name="helper"></param>
            <param name="content"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.Description(Weavy.Core.Models.IndexSearchResult)">
            <summary>
            Returns a descriptive text for the specified search result.
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.Facepile(System.Collections.Generic.IEnumerable{Weavy.Core.Models.User},System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Render linked avatar images for the specified user objects. 
            </summary>
            <param name="users"></param>
            <param name="size">Size of avatar images, eg. 24, 32, 48.</param>
            <param name="link"><c>true</c> to link to user profiles, <c>false</c> to only redner avatar images.</param>
            <param name="presence"><c>true</c> to render presence indicators, otherwise <c>false</c></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.Scripts(System.Web.Mvc.HtmlHelper,System.Object)">
            <summary>
            Renders script that are stored in TempData.
            </summary>
            <param name="helper"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.NotificationsBadge(System.Web.Mvc.HtmlHelper)">
            <summary>
            Returns a badge indicating the number of unread notifications.
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.ConversationsBadge(System.Web.Mvc.HtmlHelper)">
            <summary>
            Returns a badge indicating the number of unread conversations.
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.TotalBadge(System.Web.Mvc.HtmlHelper)">
            <summary>
            Returns a badge indicating the total number of unread conversations and notifications.
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.Shield(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.Member,System.Nullable{System.Int32})">
            <summary>
            Returns an icon indicating space member role.
            </summary>
            <param name="html">The HTML helper instance that this method extends.</param>
            <param name="member">The member for which to render an icon.</param>
            <param name="size"></param>
            <returns>HTML markup for a badge.</returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.Badge(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.User,System.Object)">
            <summary>
            Returns a badge with user directory.
            </summary>
            <param name="html">The HTML helper instance that this method extends.</param>
            <param name="user">The user for which to render a badge.</param>
            <param name="htmlAttributes"></param>
            <returns>HTML markup for a badge.</returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.Shield(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.User,System.Nullable{System.Int32})">
            <summary>
            Returns an icon indicating admin status.
            </summary>
            <param name="html">The HTML helper instance that this method extends.</param>
            <param name="user">The user for which to render a badge.</param>
            <param name="size"></param>
            <returns>HTML markup for a badge.</returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.FilterForm``1(System.Web.Mvc.HtmlHelper,System.Linq.Expressions.Expression{System.Action{``0}},Weavy.Core.Models.Query,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="expression"></param>
            <param name="query"></param>
            <param name="htmlAttributes"></param>
            <param name="inputAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.SearchResultText``1(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.SearchResult{``0})">
            <summary>
            Returns a descriptive text for the specified search result.
            </summary>
            <param name="html"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.DisplayGroups(System.Web.Mvc.HtmlHelper,System.Object,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            
            </summary>
            <param name="html"></param>
            <param name="model"></param>
            <param name="group"></param>
            <param name="exclude"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.EditorsForModel(System.Web.Mvc.HtmlHelper,System.Object,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns an HTML input field for each property in the model.
            </summary>
            <param name="html">The HTML helper instance that this method extends.</param>
            <param name="model">The object for which to render input fields, <c>null</c> to render input fields for the current model.</param>
            <param name="group">The name of the group for which to return input fields, <c>null</c> to return input fields for properties without GroupName in the model.</param>
            <param name="include">Names of properties that should be rendered, <c>null</c> to include all properties.</param>
            <param name="exclude">Names of properties that should not be rendered, <c>null</c> includes all properties.</param>
            <param name="surroundingHtml"><c>true</c> to wrap the labels and inputs fields in .form-group, otherwise <c>false</c></param>
            <param name="labels"><c>true</c> to render labels for input fields, otherwise <c>false</c></param>
            <param name="descriptions"><c>true</c> to render descriptions for input fields, otherwise <c>false</c></param>
            <returns>An HTML input element for each property in the model.</returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.HasEditors(System.Web.Mvc.HtmlHelper,System.Object,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Check if the specified model has any editable fields.
            </summary>
            <param name="html">The HTML helper instance that this method extends.</param>
            <param name="model">The object to which for editable fields, <c>null</c> to check fields for the current model.</param>
            <param name="group">The name of the group to check for editable fields, <c>null</c> to check fields for properties without GroupName in the model.</param>
            <param name="except">Names of properties to exclude from the check, <c>null</c> includes all properties.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.HasHtmlEditor(System.Web.Mvc.HtmlHelper,System.Object)">
            <summary>
            Helper method for checking if the specified model object has a property marked with <see cref="F:Weavy.Core.Models.DataType.Html"/>.
            </summary>
            <param name="html">The HTML helper instance that this method extends.</param>
            <param name="model">The object to which for html editor fields, <c>null</c> to check the current model.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.SelectOptions(System.Web.Mvc.HtmlHelper,System.Collections.Generic.IEnumerable{Weavy.Core.Models.IEntity},System.Nullable{System.Int32})">
            <summary>
            Returns a list of &lt;option&gt; elements representing the specified entities.
            </summary>
            <param name="html"></param>
            <param name="entities">The entities for which to create options.</param>
            <param name="selected">Id of selected entity.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.ContentPickerOptions(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.Files,Weavy.Core.Models.Content)">
            <summary>
            Returns a list of &lt;option&gt; elements representing the content hierarchy in the specified <see cref="T:Weavy.Core.Models.Files"/> app (used when moving content to another location).
            </summary>
            <param name="html"></param>
            <param name="app"><see cref="T:Weavy.Core.Models.Files"/> for which to list content.</param>
            <param name="source">Content item to move.</param>
            <returns>A list of &lt;option&gt; elements.</returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.ConflictAlert(System.Collections.Generic.List{Weavy.Core.Models.Blob},System.Int32,System.String)">
            <summary>
            Returns a html for a form that can be displayed to handle conflicts when uploading files.
            </summary>
            <param name="blobs">The conflicting blobs.</param>
            <param name="uploaded">The number of uploaded files.</param>
            <param name="url">The url to use to overwrite with the new files.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.ContentPickerOptions(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.Files)">
            <summary>
            Returns a list of &lt;option&gt; elements representing folders in the specified <see cref="T:Weavy.Core.Models.Files"/> app.
            </summary>
            <param name="html"></param>
            <param name="app"><see cref="T:Weavy.Core.Models.Files"/> for which to list folders.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.ContentPickerOptions(Weavy.Core.Models.Files,System.Collections.Generic.IEnumerable{Weavy.Core.Models.Content},Weavy.Core.Models.Content,System.Collections.Generic.IEnumerable{Weavy.Core.Models.Content},System.Int32)">
            <summary>
            Recursively create a list of &lt;option&gt; elements representing content items.
            </summary>
            <param name="app"></param>
            <param name="hierarchy">Content hierarchy for which to render &lt;option&gt; elements.</param>
            <param name="source">Content item to move.</param>
            <param name="descendants">Descendants of source folder.</param>
            <param name="depth"></param>
            <returns>A list of &lt;option&gt; elements.</returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.ContentPickerOptions(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.Files,System.Guid)">
            <summary>
            Returns a list of &lt;option&gt; elements representing the content hierarchy in the specified <see cref="T:Weavy.Core.Models.Files"/> app (used when inserting/attaching content).
            </summary>
            <param name="html"></param>
            <param name="app"><see cref="T:Weavy.Core.Models.Files"/> for which to list content.</param>
            <param name="guid"><see cref="T:System.Guid"/> of content type to insert/attach.</param>
            <returns>A list of &lt;option&gt; elements.</returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.ContentPickerOptions(System.Collections.Generic.IEnumerable{Weavy.Core.Models.Content},System.Guid,System.Int32)">
            <summary>
            Recursively create a list of &lt;option&gt; elements representing the specified content hierarchy.
            </summary>
            <param name="hierarchy">Content hierarchy for which to render &lt;option&gt; elements.</param>
            <param name="guid"><see cref="T:System.Guid"/> of content type to insert/attach.</param>
            <param name="depth"></param>
            <returns>A list of &lt;option&gt; elements.</returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.ActionLink``1(System.Web.Mvc.HtmlHelper,System.Linq.Expressions.Expression{System.Action{``0}},System.String,System.String,System.String,System.Web.IHtmlString,System.Nullable{System.Int64},System.Object,Weavy.Web.Models.LinkActive)">
            <summary>
            
            </summary>
            <typeparam name="TController"></typeparam>
            <param name="html"></param>
            <param name="qs">query string</param>
            <param name="icon">icon name</param>
            <param name="color">icon color</param>
            <param name="text"></param>
            <param name="badge"></param>
            <param name="expression"></param>
            <param name="active"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.ActionLink``1(System.Web.Mvc.HtmlHelper,System.Linq.Expressions.Expression{System.Action{``0}},System.String,System.String,System.String,System.String,System.Nullable{System.Int64},System.Object,Weavy.Web.Models.LinkActive)">
            <summary>
            
            </summary>
            <typeparam name="TController"></typeparam>
            <param name="html"></param>
            <param name="qs">query string</param>
            <param name="icon">icon name</param>
            <param name="color">icon color</param>
            <param name="text"></param>
            <param name="badge"></param>
            <param name="expression"></param>
            <param name="active"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.Pagination(System.Web.Mvc.HtmlHelper,Weavy.Core.Collections.IPagedList)">
            <summary>
            Renders pagination controls.
            </summary>
            <param name="html"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.WriteDots(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the dots (…) for the pager.
            </summary>
            <param name="html">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the server control content.</param>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.WritePageNumber(System.Web.UI.HtmlTextWriter,Weavy.Core.Collections.IPagedList,System.String,System.Collections.Specialized.NameValueCollection,System.Int32,System.Int32)">
            <summary>
            Renders the anchors used for paging.
            </summary>
            <param name="html">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the server control content.</param>
            <param name="list"></param>
            <param name="path"></param>
            <param name="qs"></param>
            <param name="page">The current page number.</param>
            <param name="top"></param>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.GetRouteValuesFromExpression``1(System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            
            </summary>
            <typeparam name="TController"></typeparam>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.GetTargetActionName(System.Reflection.MethodInfo)">
            <summary>
            
            </summary>
            <param name="methodInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.AddParameterValuesFromExpressionToDictionary(System.Web.Routing.RouteValueDictionary,System.Linq.Expressions.MethodCallExpression)">
            <summary>
            
            </summary>
            <param name="rvd"></param>
            <param name="mce"></param>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.IconImg(System.Web.Mvc.HtmlHelper,System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Object)">
            <summary>
            Returns an img element with the theme icon.
            </summary>
            <param name="helper">The HTML helper instance that this method extends.</param>
            <param name="size"></param>
            <param name="retina"></param>
            <param name="absolute"></param> 
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.Time(System.Web.Mvc.HtmlHelper,System.Nullable{System.DateTime},System.String)">
            <summary>
            Returns a &lt;time&gt; element with the specified date.
            </summary>
            <param name="helper">The HTML helper instance that this method extends.</param>
            <param name="date">The (UTC) date to return as text.</param>
            <param name="format">A standard or custom date and time format string.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.Time(System.Web.Mvc.HtmlHelper,System.DateTime,System.String,System.String)">
            <summary>
            Returns a &lt;time&gt; element with the specified date.
            </summary>
            <param name="helper">The HTML helper instance that this method extends.</param>
            <param name="date">The (UTC) date to return as text.</param>
            <param name="format">A standard or custom date and time format string.</param>        
            <param name="text">A text that should be displayed instead of the date.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.TimeWhen(System.Web.Mvc.HtmlHelper,System.Nullable{System.DateTime})">
            <summary>
            Returns a &lt;time&gt; element when the specified date occured.
            </summary>
            <param name="helper">The HTML helper instance that this method extends.</param>
            <param name="date">The (UTC) date to return as text.</param>        
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.TimeWhen(System.Web.Mvc.HtmlHelper,System.DateTime)">
            <summary>
            Returns a &lt;time&gt; element when the specified date occured.
            </summary>
            <param name="helper">The HTML helper instance that this method extends.</param>
            <param name="date">The (UTC) date to return as text.</param>        
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.WhatByWhen(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.Content)">
            <summary>
            Returns a string containing when a content item was created/modified and by whom.
            </summary>
            <param name="helper"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.SubscribersText(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.IFollowable)">
            <summary>
            Returns a string containing info about number of subscribers.
            </summary>
            <param name="helper"></param>
            <param name="followable"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.ScrollMore(System.Web.Mvc.HtmlHelper,Weavy.Core.Collections.IPagedList,System.String,System.String,System.String)">
            <summary>
            Renders an anchor for loading more data with infinite scroll.
            </summary>
            <param name="helper"></param>
            <param name="list"></param>
            <param name="target">Selector for target element where next page should be appended</param>
            <param name="mode">Specify "append" or "prepend" to indicate whether new data scould be appended or prepended to <paramref name="target"/>.</param>
            <param name="url">Base url to use when constructing the link for loading next page of data.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.ScrollNext(System.Web.Mvc.HtmlHelper,Weavy.Core.Collections.IPagedList,System.String)">
            <summary>
            Renders an anchor element for loading next page of data with infinite scroll.
            </summary>
            <param name="helper"></param>
            <param name="list"></param>
            <param name="url">base url to use when generating the link</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.Title(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Helper for getting the title for the html head.
            </summary>
            <param name="helper">The HTML helper instance that this method extends.</param>
            <param name="title">The defined title.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.ThemeHead(System.Web.Mvc.HtmlHelper)">
            <summary>
            Helper for rendering link to favicon, app manifest etc.
            </summary>
            <param name="helper">The HTML helper instance that this method extends.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.ThemeStyle(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Helper for rendering a themed stylesheet.
            </summary>
            <param name="helper">The HTML helper instance that this method extends.</param>
            <param name="fileName">Virtual path to scss file, e.g. ~/styles/weavy.scss</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.ThemeStyle(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Nullable{Weavy.Bundler.BundleOutput})">
            <summary>
            Helper for rendering a themed stylesheet.
            </summary>
            <param name="helper">The HTML helper instance that this method extends.</param>
            <param name="fileName">Virtual path to scss file, e.g. ~/styles/weavy.scss</param>
            <param name="htmlColor">html color, e.g. "red" or "#0275D8", <c>null</c> uses the color from the current <see cref="T:Weavy.Core.Models.Theme"/> settings.</param>
            <param name="htmlAttributes"></param>
            <param name="output"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.GetThemedScssFile(System.String,System.String)">
            <summary>
            Helper method for returning a .scss stylesheet file with our theme colors injected.
            </summary>
            <param name="fileName"></param>
            <param name="htmlColor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.GetThemedCss(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
            <param name="htmlColor"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.StarToggle(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.IStarrable,System.Boolean,System.Object)">
            <summary>
            Returns an button element for starring/unstarring the specified entity.
            </summary>
            <param name="html">The HTML helper instance that this method extends.</param>
            <param name="starrable">The entity for which to generate a star link.</param>
            <param name="compact">Set to false to allow toggling an unstarred entity.</param>
            <param name="htmlAttributes">Html attributes to merge with the button.</param>
            <returns>An anchor element (a element).</returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.FollowToggle(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.User)">
            <summary>
            Returns a button element (&lt;button&gt;) for following/unfollowing the specified user.
            </summary>
            <param name="html">The HTML helper instance that this method extends.</param>
            <param name="user">The entity for which to generate a star link.</param>
            <returns>A button.</returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.SubscribeToggle(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.IFollowable,System.Object)">
            <summary>
            Returns a anchor element (a element) for turning on/off notifications for the specified entity.
            </summary>
            <param name="html">The HTML helper instance that this method extends.</param>
            <param name="followable">The entity.</param>
            <param name="htmlAttributes">Html attributes to merge.</param>
            <returns>An anchor.</returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.Link(Weavy.Core.Models.IEntity)">
            <summary>
            Returns a link to the entity.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.Badge(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.Content)">
            <summary>
            Returns a badge with content status, i.e. editing, locked etc.
            </summary>
            <param name="html">The HTML helper instance that this method extends.</param>
            <param name="content">The entity for which to generate a badge.</param>
            <returns>A badge (span element).</returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.PreviewAttributes(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.Attachment)">
            <summary>
            Gets html attributes needed for triggering image and document preview.
            </summary>
            <param name="html"></param>
            <param name="attachment"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.PreviewAttributes(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.Blob)">
            <summary>
            Gets html attributes needed for triggering image and document preview.
            </summary>
            <param name="html"></param>
            <param name="blob"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.PreviewAttributes(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.IFile)">
            <summary>
            Gets html attributes needed for triggering image and document preview.
            </summary>
            <param name="html"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.InitHtmlEditor(System.Web.Mvc.HtmlHelper)">
            <summary>
            Returns a script tag for initializing the html editor.
            </summary>
            <param name="helper"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.BrowserInfo(System.Web.Mvc.HtmlHelper)">
            <summary>
            Returns a javascript object with browser info.
            </summary>
            <param name="helper"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.ConfigurationSettings(System.Web.Mvc.HtmlHelper)">
            <summary>
            Returns a javascript object with configuration settings.
            </summary>
            <param name="helper"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.ContextInfo(System.Web.Mvc.HtmlHelper)">
            <summary>
            Returns a javascript object with context info.
            </summary>
            <param name="helper"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.UserSettings(System.Web.Mvc.HtmlHelper)">
            <summary>
            Returns a javascript object with user settings.
            </summary>
            <param name="helper"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.RenderPartial(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.ContentSearchResult{Weavy.Core.Models.Content})">
            <summary>
            Renders a partial view for the specified search result.
            </summary>
            <param name="html"></param>
            <param name="result"></param>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.RenderPartial(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.Content,Weavy.Core.Models.Layout)">
            <summary>
            Renders a partial view for the the specified content item and layout.
            </summary>
            <param name="html"></param>
            <param name="content"></param>
            <param name="layout"></param>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.RenderPartial(System.Web.Mvc.HtmlHelper,Weavy.Core.Models.Content)">
            <summary>
             Creates a <see cref="T:System.Web.Mvc.ViewResult"/> object that renders a view, by using the specified model.
            </summary>
            <param name="html"></param>
            <param name="model">The content item to render.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,Weavy.Core.Models.Content)">
            <summary>
             Creates a <see cref="T:System.Web.Mvc.PartialViewResult"/> object that renders a view, by using the specified model.
            </summary>
            <param name="html"></param>
            <param name="viewName">The view that is rendered to the response.</param>
            <param name="model">The content item to render.</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Utils.HtmlUtils.ViewDataContainer">
            <summary>
            Private helper class needed to create a HtmlHelper with a new view context etc.
            </summary>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.Property(System.Web.Mvc.ModelMetadata)">
            <summary>
            Gets the underlying property being rendered in an editor template.
            </summary>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.RenderSurroundingHtml(System.Web.Mvc.ViewDataDictionary)">
            <summary>
            Gets a value indicating whether an editor template should render the surrounding .form-group element or not.
            </summary>
            <param name="viewData"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.RenderLabel(System.Web.Mvc.ViewDataDictionary)">
            <summary>
            Gets a value indicating whether an editor template should render a &lt;label&gt; for the field/property.
            </summary>
            <param name="viewData"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.RenderDescription(System.Web.Mvc.ViewDataDictionary)">
            <summary>
            Gets a value indicating whether an editor template should render a description for the field/property.
            </summary>
            <param name="viewData"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.PlaceholderText(System.Web.Mvc.ViewDataDictionary)">
            <summary>
            Gets the placeholder text to render in editor templates for the current field/property.
            </summary>
            <param name="viewData"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.HtmlUtils.ErrorMessage(System.Web.Mvc.ViewDataDictionary)">
            <summary>
            Gets the error message to display when a field/property failed validation.
            </summary>
            <param name="viewData"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Utils.SerializationUtils">
            <summary>
            Provides extension and helper methods for serializing and deserializing objects.
            </summary>
        </member>
        <member name="F:Weavy.Web.Utils.SerializationUtils.ClientSerializerSettings">
            <summary>
            Gets the json serializer settings suitable for serializing data back to the client sdk.
            </summary>
        </member>
        <member name="T:Weavy.Web.Utils.Svg">
            <summary>
            Provides utility methods for rendering SVG icons.
            </summary>
        </member>
        <member name="M:Weavy.Web.Utils.Svg.Emoji(System.String)">
            <summary>
            Renders markup for the specified emoji.
            </summary>
            <param name="emoji">A single ascii emoji, native unicode emoji or emoji shortname, e.g. :D , 😃 or :smiley:.</param>
        </member>
        <member name="M:Weavy.Web.Utils.Svg.Icon(System.String,System.String,System.Nullable{System.Int32},System.Object)">
            <summary>
            Renders markup for the specified icon.
            </summary>
            <param name="name">name of icon, e.g. "home", see icons task in gulpfile.js for a complete list.</param>
            <param name="color">name of color to use for the icon, e.g. "native", "blue", "red-500", "green-700" etc.</param>
            <param name="size">icon size, i.e. 18, 24, 36 or 48.</param>
            <param name="htmlAttributes">Additional attributes to apply.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.Svg.Icon(Weavy.Core.Models.IEntity,System.String,System.Nullable{System.Int32},System.Object)">
            <summary>
            Renders icon markup for the specified entity.
            </summary>
            <param name="entity"></param>
            <param name="color"></param>
            <param name="size"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.Svg.Icon(Weavy.Core.Models.Icon,System.Object)">
            <summary>
            Renders markup for the specified icon.
            </summary>
            <param name="icon"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.Svg.Icons">
            <summary>
            Renders a list of all icons (used on test page).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.Svg.Spinner(System.Int32,System.Boolean)">
            <summary>
            Renders markup for the animated spinner.
            </summary>
            <param name="size"></param>
            <param name="spin"><c>true</c> to add the .spin class on first render.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.Svg.OverlaySpinner(System.Int32,System.Boolean,System.String,System.String)">
            <summary>
            Renders markup for an animated spinner on an overlay background.
            </summary>
            <param name="size"></param>
            <param name="spin"><c>true</c> to add the .spin class on first render.</param>
            <param name="color">Background color of overlay</param>
            <param name="id">DOM id of the overlay spinner</param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Utils.UrlUtils">
            <summary>
            Provides utility methods for creating urls.
            </summary>
        </member>
        <member name="M:Weavy.Web.Utils.UrlUtils.Back(System.Web.Mvc.UrlHelper,System.String)">
            <summary>
            Get an url suitable for navigating back from the current page.
            </summary>
            <param name="helper">The URL helper instance that this method extends.</param>
            <param name="url">Default back url.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.UrlUtils.Back``1(System.Web.Mvc.UrlHelper,System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Helper method for generating for getting an url for navigating back from the current page.
            </summary>
            <typeparam name="TController"></typeparam>
            <param name="helper">The URL helper instance that this method extends.</param>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.UrlUtils.Action``1(System.Linq.Expressions.Expression{System.Action{``0}},System.Boolean)">
            <summary>
            Helper method for generating urls to strongly typed actions.
            </summary>
            <typeparam name="TController"></typeparam>
            <param name="expression"></param>
            <param name="absolute"><c>false</c> to return a relative url or <c>true</c> to return an absolute url.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.UrlUtils.Action``1(System.Web.Mvc.UrlHelper,System.Linq.Expressions.Expression{System.Action{``0}},System.Boolean)">
            <summary>
            Helper method for generating urls to strongly typed controller actions.
            </summary>
            <typeparam name="TController">The type of the controller.</typeparam>
            <param name="helper">The <see cref="T:System.Web.Mvc.UrlHelper"/> instance that this method extends.</param>
            <param name="expression">An expression that identifies the action.</param>
            <param name="absolute"><c>false</c> to return a relative url or <c>true</c> to return an absolute url.</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.UrlUtils.IsActive``1(System.Web.Mvc.UrlHelper,System.Linq.Expressions.Expression{System.Action{``0}},Weavy.Web.Models.LinkActive)">
            <summary>
            
            </summary>
            <typeparam name="TController"></typeparam>
            <param name="helper"></param>
            <param name="expression"></param>
            <param name="active"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.UrlUtils.Rebuild(System.Web.Mvc.UrlHelper,System.Object[])">
            <summary>
            Rebuilds the url of the current request by adding, removing and/or replacing query string parameters.
            </summary>
            <param name="helper">The URL helper instance that this method extends.</param>
            <param name="replacement"></param>
            <returns></returns>
            <example>
            A call to <c>Rebuild("tab", null, "p", 1, "ps", 25)</c> should remove the 'tab' parameter and add or replace the 'p' and 'ps' parameters depending on if they exist or not.
            </example>
        </member>
        <member name="M:Weavy.Web.Utils.UrlUtils.OrderBy(System.Web.Mvc.UrlHelper,System.String)">
            <summary>
            Adds an orderby query string parameter to the current request path.
            </summary>
            <param name="helper">The URL helper instance that this method extends.</param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.UrlUtils.ScrollNext(System.Web.Mvc.UrlHelper,Weavy.Core.Collections.IPagedList,System.String)">
            <summary>
            Renders an url for loading next page of data with infinite scroll.
            </summary>
            <param name="helper">The URL helper instance that this method extends.</param>
            <param name="list"></param>
            <param name="url">base url to use when generating the link</param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.UrlUtils.Icon(System.Web.Mvc.UrlHelper,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            Returns the url to the theme icon.
            </summary>
            <param name="helper">The URL helper instance that this method extends.</param>
            <param name="size"></param>
            <param name="retina"></param>
            <param name="absolute"></param> 
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Utils.UrlUtils.CreateUrlHelper">
            <summary>
            Create a dummy <see cref="T:System.Web.Mvc.UrlHelper"/> that can be used when generating urls outside a web request.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Filters.HandleExceptionFilter">
            <summary>
            Logs unhandled exceptions and displays a custom error page.
            </summary>
        </member>
        <member name="M:Weavy.Web.Filters.HandleExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)">
            <summary>
            Called when an exception occurs.
            </summary>
            <param name="filterContext">The filter context.</param>
        </member>
        <member name="T:Weavy.Web.Plugins.RealTimeHook">
            <summary>
            Hook for pushing various realtime events to connected clients.
            </summary>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterInsertNotification)">
            <summary>
            Push notification and badge to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterUpdateNotification)">
            <summary>
            Push updated notification and badge to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterReadAllNotifications)">
            <summary>
            Notify user that all notifications were marked as read. Also push updated badge to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterInsertComment)">
            <summary>
            Push inserted <see cref="T:Weavy.Core.Models.Comment"/> to all users that have <see cref="F:Weavy.Core.Models.Permission.View"/> on the <see cref="T:Weavy.Core.Models.Comment"/>.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterUpdateComment)">
            <summary>
            Push updated <see cref="T:Weavy.Core.Models.Comment"/> to all users that have <see cref="F:Weavy.Core.Models.Permission.View"/> on the <see cref="T:Weavy.Core.Models.Comment"/>.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterInsertContent)">
            <summary>
            Push inserted <see cref="T:Weavy.Core.Models.Content"/> to all users that have <see cref="F:Weavy.Core.Models.Permission.View"/> on the <see cref="T:Weavy.Core.Models.Content"/> item.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterUpdateContent)">
            <summary>
            Push updated <see cref="T:Weavy.Core.Models.Content"/> to all users that have <see cref="F:Weavy.Core.Models.Permission.View"/> on the <see cref="T:Weavy.Core.Models.Content"/> item.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterTrashContent)">
            <summary>
            Push trashed <see cref="T:Weavy.Core.Models.Content"/> to all users that have <see cref="F:Weavy.Core.Models.Permission.View"/> on the <see cref="T:Weavy.Core.Models.Content"/> item.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterRestoreContent)">
            <summary>
            Push restored <see cref="T:Weavy.Core.Models.Content"/> to all users that have <see cref="F:Weavy.Core.Models.Permission.View"/> on the <see cref="T:Weavy.Core.Models.Content"/> item.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterDeleteConversation)">
            <summary>
            Push deleted <see cref="T:Weavy.Core.Models.Conversation"/> to all members.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterInsertPost)">
            <summary>
            Push inserted <see cref="T:Weavy.Core.Models.Post"/> to all users that have <see cref="F:Weavy.Core.Models.Permission.View"/> on the <see cref="T:Weavy.Core.Models.Post"/>.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterUpdatePost)">
            <summary>
            Push updated <see cref="T:Weavy.Core.Models.Post"/> to all users that have <see cref="F:Weavy.Core.Models.Permission.View"/> on the <see cref="T:Weavy.Core.Models.Post"/>.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterLikeEntity)">
            <summary>
            Push liked entity to all users that have <see cref="F:Weavy.Core.Models.Permission.View"/> on the entity.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterUnlikeEntity)">
            <summary>
            Push unliked entity to all users that have <see cref="F:Weavy.Core.Models.Permission.View"/> on the entity.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterInsertMessage)">
            <summary>
            Push message and updated badge to all members in conversation.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterUpdateMessage)">
            <summary>
            Push updated message to all members in conversation.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterDeliverMessage)">
            <summary>
            Let sender know that their message was delivered.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterDeliverConversation)">
            <summary>
            Send conversation-delivered event to sender of last message.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterReadConversation)">
            <summary>
            Send conversation-read event to all members in the conversation so that they can update their gui.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterPinConversation)">
            <summary>
            Push pinned conversation back to user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterStarEntity)">
            <summary>
            Push starred entity back to the user that starred.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterUnstarEntity)">
            <summary>
            Push unstarred enitity back to the user that unstarred.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterSignIn)">
            <summary>
            Push authenticate request to all non-signed-in users.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.Plugins.RealTimeHook.Handle(Weavy.Core.Events.AfterSignOut)">
            <summary>
            Push authenticate request to connections belonging to the signed out user.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Results.ChallengeResult">
            <summary>
            
            </summary>
        </member>
        <member name="F:Weavy.Web.Results.ChallengeResult.XsrfKey">
            <summary>
            Used for XSRF protection when adding external logins 
            </summary>
        </member>
        <member name="P:Weavy.Web.Results.ChallengeResult.LoginProvider">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Results.ChallengeResult.RedirectUri">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.Results.ChallengeResult.UserId">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Results.ChallengeResult.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="provider"></param>
            <param name="redirectUri"></param>
        </member>
        <member name="M:Weavy.Web.Results.ChallengeResult.#ctor(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="provider"></param>
            <param name="redirectUri"></param>
            <param name="userId"></param>
        </member>
        <member name="M:Weavy.Web.Results.ChallengeResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Weavy.Web.Results.JsonNetResult">
            <summary>
            Represents a class that is used to send JSON-formatted content to the response. 
            </summary>
            <remarks>Uses JSON.NET instead of the standard JavaScriptSerializer.</remarks>
        </member>
        <member name="M:Weavy.Web.Results.JsonNetResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Weavy.Web.Routing.IntsConstraint">
            <summary>
            Inline route constraint for two or more comma separated ints, e.g. 1,2,3.
            </summary>
        </member>
        <member name="M:Weavy.Web.Routing.IntsConstraint.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.Routing.IntsConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
            <param name="route"></param>
            <param name="parameterName"></param>
            <param name="values"></param>
            <param name="routeDirection"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Routing.OptionsConstraint">
            <summary>
            Inline route constraint for file resizer options. Valid chars are [a-z0-9,]. Example "crop,both,q90".
            </summary>
        </member>
        <member name="M:Weavy.Web.Routing.OptionsConstraint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Routing.OptionsConstraint"/> class.
            </summary>
        </member>
        <member name="M:Weavy.Web.Routing.OptionsConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
            <param name="route"></param>
            <param name="parameterName"></param>
            <param name="values"></param>
            <param name="routeDirection"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Routing.ValuesConstraint">
            <summary>
            Inline route constraint for a list if valid values.
            </summary>
        </member>
        <member name="M:Weavy.Web.Routing.ValuesConstraint.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:Weavy.Web.Routing.ValuesConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
            <summary>
            
            </summary>
            <param name="httpContext"></param>
            <param name="route"></param>
            <param name="parameterName"></param>
            <param name="values"></param>
            <param name="routeDirection"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Tools.RestartTool">
            <summary>
            /// A function that terminates the application. The application restarts the next time a request is received.
            </summary>
        </member>
        <member name="M:Weavy.Web.Tools.RestartTool.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.Tools.RestartTool"/> class.
            </summary>
        </member>
        <member name="M:Weavy.Web.Tools.RestartTool.Run(System.Threading.CancellationToken,System.String[])">
            <summary>
            Terminates the application by unloading the add domain.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.Views.ViewPage`1">
            <summary>
            Base class for strongly typed views.
            </summary>
        </member>
        <member name="M:Weavy.Web.Views.ViewPage`1.InitHelpers">
            <summary>
              Initializes the HtmlLocalizer for the view
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.T">
            <summary>
            Gets the localizer for the view.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.Title">
            <summary>
            Gets or sets the page title.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.Back">
            <summary>
            Gets or sets the url for navigating back.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.WeavyContext">
            <summary>
            Gets the current <see cref="T:Weavy.Core.WeavyContext"/>.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.User">
            <summary>
            Gets the current <see cref="P:Weavy.Web.Views.ViewPage`1.User"/>.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.Theme">
            <summary>
            Gets the current theme settings.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.AreaName">
            <summary>
            Returns the name of the current Area.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.ControllerName">
            <summary>
            Returns the name of the currently executing Controller
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.ActionName">
            <summary>
            Returns the name of the currently executing Action
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.IsEmbedded">
            <summary>
             Gets a value indicating whether the request is for an embedded action/view.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.BodyAttributes">
            <summary>
            Attributes to render in the &lt;body&gt; element.
            </summary>
        </member>
        <member name="P:Weavy.Web.Views.ViewPage`1.HtmlAttributes">
            <summary>
            Attributes to render in the &lt;html&gt; element.
            </summary>
        </member>
        <member name="M:Weavy.Web.Views.ViewPage`1.RenderBodyAttributes">
            <summary>
            Render attributes for the &lt;body&gt; element.
            </summary>
        </member>
        <member name="M:Weavy.Web.Views.ViewPage`1.RenderHtmlAttributes">
            <summary>
            Render attributes for the &lt;html&gt; element.
            </summary>
        </member>
        <member name="T:Weavy.Web.WebDAV.DavContext">
            <summary>
            WebDAV request context. Is used by WebDAV engine to resolve path into items.
            </summary>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavContext.#ctor(System.Web.HttpContext)">
            <summary>
            Initializes a new instance of the DavContext with the specified <see cref="T:System.Web.HttpContext"/>.
            </summary>
            <param name="httpContext">Instance of <see cref="T:System.Web.HttpContext"/>.</param>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavContext.GetHierarchyItemAsync(System.String)">
            <summary>
            Implementation of this abstract method is used by WebDAV engine to find hierarchy item objects by path.
            </summary>
            <param name="path">
            Path of the hierarchy item object.
            It is always the full path from the root of the WebDAV repository.
            </param>
            <returns>
            Hierarchy item object referenced by the specified path or <c>null</c> if hierarchy item not found.
            </returns>
        </member>
        <member name="T:Weavy.Web.WebDAV.DavFile">
            <summary>
            Represents a file in WebDAV repository.
            </summary>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFile.#ctor(Weavy.Web.WebDAV.DavContext,Weavy.Core.Models.IEntity,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.WebDAV.DavFile"/> class.
            </summary>
            <param name="context">Instance of <see cref="T:Weavy.Web.WebDAV.DavContext"/>.</param>
            <param name="entity"></param>
            <param name="path"></param>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavFile.ContentType">
            <summary>
            Gets the media type of the file.
            </summary>
            <remarks>
            <para>
            The mime-type provided by this property is returned in a Content-Type header with GET request.
            </para>
            <para>
            When deciding which action to perform when downloading a file some WebDAV clients and browsers (such as
            Internet Explorer) rely on file extension, while others (such as Firefox) rely on Content-Type header
            returned by server. For identical behavior in all browsers and WebDAV clients your server must return
            a correct mime-type with a requested file.
            </para>
            </remarks>
            <value>The MIME type of the file.</value>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavFile.ContentLength">
            <summary>
            Gets the size of the file content in bytes.
            </summary>
            <value>Length of the file content in bytes.</value>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavFile.Etag">
            <summary>
            Gets entity tag - string that identifies current state of resource's content.
            More information about etags is available here: http://en.wikipedia.org/wiki/HTTP_ETag
            You can return here either cheksum or hash or counter which increases with every
            modification.
            </summary>
            <remarks>
            This property shall return different value if content changes.
            Return <c>null</c> to indicate that server doesn't support etags.
            </remarks>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFile.CopyToAsync(ITHit.WebDAV.Server.IItemCollectionAsync,System.String,System.Boolean,ITHit.WebDAV.Server.MultistatusException)">
            <summary>
            Copies this file to another folder.
            </summary>
            <param name="destFolder">Destination folder.</param>
            <param name="destName">New file name in destination folder.</param>
            <param name="deep">Is not used.</param>
            <param name="multistatus">Container for errors with items other than this file.</param>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFile.DeleteAsync(ITHit.WebDAV.Server.MultistatusException)">
            <summary>
            Deletes this file.
            </summary>
            <param name="multistatus"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFile.MoveToAsync(ITHit.WebDAV.Server.IItemCollectionAsync,System.String,ITHit.WebDAV.Server.MultistatusException)">
            <summary>
            
            </summary>
            <param name="destFolder"></param>
            <param name="destName"></param>
            <param name="multistatus"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFile.ReadAsync(System.IO.Stream,System.Int64,System.Int64)">
            <summary>
            Writes the content of the file to the specified stream.
            </summary>
            <param name="output">Output stream.</param>
            <param name="startIndex">The zero-bazed byte offset in file content at which to begin copying bytes to the
            output stream.</param>
            <param name="count">The number of bytes to be written to the output stream.</param>
            <remarks>
            <para>
            By default ASP.NET buffers content on server side before sending output. You must turn off buffering to
            eliminate keeping entire file content in memory before sending:
            <code>
            HttpContext.Current.Response.BufferOutput = false;
            </code>
            </para>
            <para>
            Client application can request only a part of a file specifying <b>Range</b> header.
            Download managers may use this header to download single file using several threads at a time.
            </para>
            </remarks>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFile.WriteAsync(System.IO.Stream,System.String,System.Int64,System.Int64)">
            <summary>
            Saves the content of the file from the specified stream to the WebDAV repository.
            </summary>
            <param name="content">Stream to read the content of the file from.</param>
            <param name="contentType">Indicates the media type of the file.</param>
            <param name="startIndex">Start offset to which content shall be saved.</param>
            <param name="totalLength">Entire length of the file. It is not less then length of <paramref name="content"/> stream.</param>
            <returns>Boolean value indicating whether entire stream was written. This value is used by engine to take decision whether autocheckin shall be performed.</returns>
        </member>
        <member name="T:Weavy.Web.WebDAV.DavFolder">
            <summary>
            Represents a folder in a WebDAV repository.
            </summary>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFolder.#ctor(Weavy.Web.WebDAV.DavContext,Weavy.Core.Models.IEntity,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Weavy.Web.WebDAV.DavFolder"/> class.
            </summary>
            <param name="context">Instance of <see cref="T:Weavy.Web.WebDAV.DavContext"/> class.</param>
            <param name="entity"></param>
            <param name="path"></param>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFolder.GetChildrenAsync(System.Collections.Generic.IList{ITHit.WebDAV.Server.PropertyName},System.Nullable{System.Int64},System.Nullable{System.Int64},System.Collections.Generic.IList{ITHit.WebDAV.Server.Paging.OrderProperty})">
            <summary>
            Gets direct children of this folder.
            </summary>
            <value>
            Array of <see cref="T:ITHit.WebDAV.Server.IHierarchyItemAsync"/> objects.
            </value>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFolder.CreateFileAsync(System.String)">
            <summary>
            Creates new WebDAV file with the specified name in this folder.
            </summary>
            <param name="name">Name of the file to create.</param>
            <remarks>You must create a file in your repository during this call. After calling this method Engine calls <see cref="M:ITHit.Server.IContentAsync.WriteAsync(System.IO.Stream,System.String,System.Int64,System.Int64)"/>.</remarks>
            <returns>Instance of <see cref="T:ITHit.WebDAV.Server.Class1.IFileAsync"/> referring to newly created file.</returns>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFolder.CreateFolderAsync(System.String)">
            <summary>
            Creates new WebDAV folder with the specified name in this folder.
            </summary>
            <param name="name">Name of the folder to create.</param>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFolder.DeleteAsync(ITHit.WebDAV.Server.MultistatusException)">
            <summary>
            
            </summary>
            <param name="multistatus"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFolder.MoveToAsync(ITHit.WebDAV.Server.IItemCollectionAsync,System.String,ITHit.WebDAV.Server.MultistatusException)">
            <summary>
            
            </summary>
            <param name="destFolder"></param>
            <param name="destName"></param>
            <param name="multistatus"></param>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavFolder.CopyToAsync(ITHit.WebDAV.Server.IItemCollectionAsync,System.String,System.Boolean,ITHit.WebDAV.Server.MultistatusException)">
            <summary>
            
            </summary>
            <param name="destFolder"></param>
            <param name="destName"></param>
            <param name="deep"></param>
            <param name="multistatus"></param>
            <returns></returns>
        </member>
        <member name="T:Weavy.Web.WebDAV.DavHandler">
            <summary>
            This handler processes WebDAV requests.
            </summary>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavHandler.GetLicense">
            <summary>
            Get the embedded license.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavHandler.IsReusable">
            <summary>
            Gets a value indicating whether another request can use the
            <see cref="T:System.Web.IHttpHandler"/> instance.
            </summary>
            <returns>
            true if the <see cref="T:System.Web.IHttpHandler"/> instance is reusable; otherwise, false.
            </returns>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavHandler.ProcessRequestAsync(System.Web.HttpContext)">
            <summary>
            Enables processing of HTTP Web requests.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpContext"/> object that provides references to the
            intrinsic server objects (for example, Request, Response, Session, and Server) used to service
            HTTP requests. 
            </param>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavHandler.GetOrInitializeEngine(System.Web.HttpContext)">
            <summary>
            Initializes or gets engine singleton.
            </summary>
            <param name="context">Instance of <see cref="T:System.Web.HttpContext"/>.</param>
            <returns>Instance of <see cref="T:ITHit.WebDAV.Server.DavEngineAsync"/>.</returns>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavHandler.InitializeEngine(System.Web.HttpContext)">
            <summary>
            Initializes engine.
            </summary>
            <param name="context">Instance of <see cref="T:System.Web.HttpContext"/>.</param>
            <returns>Initialized <see cref="T:ITHit.WebDAV.Server.DavEngineAsync"/>.</returns>
        </member>
        <member name="T:Weavy.Web.WebDAV.DavItem">
            <summary>
            Abstract base class for WebDAV items.
            </summary>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavItem.#ctor(Weavy.Web.WebDAV.DavContext,Weavy.Core.Models.IEntity,System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="entity"></param>
            <param name="path"></param>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavItem.Context">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavItem.Entity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavItem.Name">
            <summary>
            Gets the name of the item in repository.
            </summary>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavItem.Created">
            <summary>
            Gets the creation date of the item in repository expressed as the coordinated universal time (UTC).
            </summary>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavItem.Modified">
            <summary>
            Gets the last modification date of the item in repository expressed as the coordinated universal time (UTC).
            </summary>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavItem.Path">
            <summary>
            Unique item path in the repository relative to storage root.
            </summary>
            <remarks>
            <para>
            The URL returned by this property is relative to storage root.
            If your server root is located at http://example.webdavsystem.com:8080/myserver/ and the item URL is
            http://example.webdavsystem.com:8080/myserver/myfolder/myitem.doc this property implementation must
            return myfolder/myitem.doc.
            </para>
            <para>
            Every part of the path (between '/' characters) shall be encoded, for example using UrlHelper.EncodeUrlPart(string) />.
            </para>
            <para>Examples:
            <list type="bullet">
            <item><description>File: myfolder/my%20doc.docx</description></item>
            <item><description>Folder: myfolder/folder/</description></item>
            <item><description>History item: myfolder/mydoc.docx?history</description></item>
            <item><description>Version: myfolder/mydoc.docx?version=5</description></item>
            </list>
            </para>
            </remarks>
            <value><c>String</c> representing relative item path in the repository.</value>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavItem.DeleteAsync(ITHit.WebDAV.Server.MultistatusException)">
            <summary>
            Deletes this item.
            </summary>
            <param name="multistatus">If some items fail to delete but operation in whole shall be continued, add information about the error into <paramref name="multistatus"/> using <see cref="M:ITHit.WebDAV.Server.MultistatusException.AddInnerException(System.String,ITHit.WebDAV.Server.DavException)"/>.
            </param>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavItem.GetPropertiesAsync(System.Collections.Generic.IList{ITHit.WebDAV.Server.PropertyName},System.Boolean)">
            <summary>
            Gets values of all properties or selected properties for this item.
            </summary>
            <param name="props">
            Array of property names which values are requested. If a property does not exist for this hierarchy item then the property value shall not be returned.</param>
            <param name="allprop">
            If it is <c>true</c> it means that besides properties listed in <paramref name="props"/> you need to return all properties you think may be useful to client.
            </param>
            <returns>Enumerable with property values.</returns>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavItem.GetPropertyNamesAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavItem.UpdatePropertiesAsync(System.Collections.Generic.IList{ITHit.WebDAV.Server.PropertyValue},System.Collections.Generic.IList{ITHit.WebDAV.Server.PropertyName},ITHit.WebDAV.Server.MultistatusException)">
            <summary>
            Modifies and removes properties for this item.
            </summary>
            <param name="setProps">Array of properties to be set.</param>
            <param name="delProps">Property names to be removed. Properties that don't exist shall be skipped.</param>
            <param name="multistatus">The standard requires this operation to be transactional.</param>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavItem.MoveToAsync(ITHit.WebDAV.Server.IItemCollectionAsync,System.String,ITHit.WebDAV.Server.MultistatusException)">
            <summary>
            Moves this item to the destination folder under a new name.
            </summary>
            <param name="destFolder">Destination folder.</param>
            <param name="destName">Name of the destination item.</param>
            <param name="multistatus">If some items fail to copy but operation in whole shall be continued, add
            information about the error into <paramref name="multistatus"/> using 
            <see cref="M:ITHit.WebDAV.Server.MultistatusException.AddInnerException(System.String,ITHit.WebDAV.Server.DavException)"/>.
            </param>
            <remarks>
            <papa>
            If the item is locked the server must not move any locks with the item. However, items must be added to an
            existing lock at the destination.
            </papa>
            </remarks>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavItem.CopyToAsync(ITHit.WebDAV.Server.IItemCollectionAsync,System.String,System.Boolean,ITHit.WebDAV.Server.MultistatusException)">
            <summary>
            Creates a copy of this item with a new name in the destination folder.
            </summary>
            <param name="destFolder">Destination folder.</param>
            <param name="destName">Name of the destination item.</param>
            <param name="deep">Indicates whether to copy entire subtree.</param>
            <param name="multistatus">If some items fail to copy but operation in whole shall be continued, add
            information about the error into <paramref name="multistatus"/> using 
            <see cref="M:ITHit.WebDAV.Server.MultistatusException.AddInnerException(System.String,ITHit.WebDAV.Server.DavException)"/>.
            </param>
            <remarks>
            <para>
            If error occurred while copying file located in a subtree, the server 
            should try to continue copy operation and copy all other items. In this case 
            you must add that error <paramref name="multistatus"/> container.
            </para>
            <para>
            A CopyTo method invocation must not copy any locks active on the source item.
            However, if this method copies the item into a folder that has a deep lock,
            then the destination item must be added to the lock.
            </para>
            </remarks>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavItem.GetActiveLocksAsync">
            <summary>
            Gets the array of all locks for this item.
            </summary>
            <remarks>
            <para>
            This property must return all locks for the item including deep locks on any of the parent folders.
            All fields of each <see cref="T:ITHit.WebDAV.Server.Class2.LockInfo"/> structure in the array must be set.
            </para>
            </remarks>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavItem.LockAsync(ITHit.WebDAV.Server.Class2.LockLevel,System.Boolean,System.Nullable{System.TimeSpan},System.String)">
            <summary>
            Locks this item.
            </summary>
            <param name="level">Whether lock is share or exclusive</param>
            <param name="isDeep">Whether lock is deep.</param>
            <param name="requestedTimeOut">Lock timeout which was requested by client.
            Server may ignore this parameter and set any timeout.</param>
            <param name="owner">Owner of the lock as specified by client.</param> 
            <returns>
            Instance of <see cref="T:ITHit.WebDAV.Server.Class2.LockResult"/> with information about the lock.
            </returns>
            <remarks>
            WebDAV engine passes <see cref="T:ITHit.WebDAV.Server.Class2.LockInfo"/> structure to this method by reference.
            All fields of the structure are provided by WebDAV client except <see cref="P:ITHit.WebDAV.Server.Class2.LockInfo.Token"/> field.
            In your <c>Lock</c> implementation you must create lock token and set <see cref="P:ITHit.WebDAV.Server.Class2.LockInfo.Token"/> member.
            You must also associate generated token with the hierarchy item in the repository during this call.
            The token is sent to the WebDAV client.
            </remarks>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavItem.RefreshLockAsync(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Updates lock timeout information on this item.
            </summary>
            <param name="token">Lock token.</param>
            <param name="requestedTimeOut">Lock timeout which was requested by client. Server may ignore this parameter and set any timeout.</param>
            <returns>
            Instance of <see cref="T:ITHit.WebDAV.Server.Class2.LockResult"/> with information about the lock.
            </returns>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavItem.UnlockAsync(System.String)">
            <summary>
            Removes lock with the specified token from this item.
            </summary>
            <param name="token">Lock with this token should be removed from the item.</param>
            <remarks>
            <para>
            If this lock included more than one hierarchy item, the lock is removed from all items included in the lock.
            </para>
            </remarks>
        </member>
        <member name="T:Weavy.Web.WebDAV.DavLogger">
            <summary>
            Logger singleton.
            </summary>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavLogger.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavLogger.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavLogger.IsDebugEnabled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Weavy.Web.WebDAV.DavLogger.LogFlags">
            <summary>
            
            </summary>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavLogger.LogDebug(System.String)">
            <summary>
            Writes the diagnostic message at the Debug level.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavLogger.LogError(System.String,System.Exception)">
            <summary>
            Writes the diagnostic message and exception at the Error level.
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="T:Weavy.Web.WebDAV.DavRoutingModule">
            <summary>
            Forbids MVC routing of WebDAV requests that should be processed by WebDAV handler.
            </summary>
            <remarks>
            This module is needed for ASP.NET MVC application to forbid routing
            of WebDAV requests that should be processed by <see cref="T:Weavy.Web.WebDAV.DavHandler"/>.
            It reads DavLocations section and inserts ignore rules for urls that correspond
            to these locations.
            </remarks>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavRoutingModule.System#Web#IHttpModule#Init(System.Web.HttpApplication)">
            <summary>
            Updates the ASP.NET MVC routing table to avoid processing of WebDAV requests (this should be done only one time during web application start event)
            </summary>
            <param name="application"></param>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavRoutingModule.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:Weavy.Web.WebDAV.DavRoutingModule.IgnoreRoute">
            <summary>
            Represents route to be ignored. 
            </summary>
            <remarks>
            Required to insert ignore route at the beginning of routing table. We can not use <see cref="M:System.Web.Routing.RouteCollection.Ignore(System.String)"/> as it adds to the and of the routing table.
            </remarks>
        </member>
        <member name="M:Weavy.Web.WebDAV.DavRoutingModule.IgnoreRoute.#ctor(System.String)">
            <summary>
            Creates ignore route.
            </summary>
            <param name="url">Route to be ignored.</param>
        </member>
        <member name="T:Weavy.Areas.Apps.AppsAreaRegistration">
            <summary>
            Class for registering the apps area.
            </summary>
        </member>
        <member name="P:Weavy.Areas.Apps.AppsAreaRegistration.AreaName">
            <summary>
            Gets the name of the area to register.
            </summary>
        </member>
        <member name="M:Weavy.Areas.Apps.AppsAreaRegistration.RegisterArea(System.Web.Mvc.AreaRegistrationContext)">
            <summary>
            Registers the area.
            </summary>
            <param name="context">Encapsulates the information that is required in order to register the area.</param>
        </member>
    </members>
</doc>
